[{"/Applications/MAMP/htdocs/blockchain_project/src/index.js":"1","/Applications/MAMP/htdocs/blockchain_project/src/store.js":"2","/Applications/MAMP/htdocs/blockchain_project/src/App.js":"3","/Applications/MAMP/htdocs/blockchain_project/src/serviceWorker.js":"4","/Applications/MAMP/htdocs/blockchain_project/src/components/login.component.js":"5","/Applications/MAMP/htdocs/blockchain_project/src/actions/message.js":"6","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/EditBiji.js":"7","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/EditUnit.js":"8","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/DaftarUnit.js":"9","/Applications/MAMP/htdocs/blockchain_project/src/components/Header/Header.js":"10","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/EditVarietas.js":"11","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/EditSupplier.js":"12","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/DaftarVarietas.js":"13","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatch.js":"14","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/ListSupplier.js":"15","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/DaftarBiji.js":"16","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/ListBatch.js":"17","/Applications/MAMP/htdocs/blockchain_project/src/helpers/history.js":"18","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/TransactionExplorer/ListTransaction.js":"19","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/HalamanUtama/GetID.js":"20","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/DaftarProses.js":"21","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ListProduk.js":"22","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/DaftarSupplier.js":"23","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatch.js":"24","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/EditProses.js":"25","/Applications/MAMP/htdocs/blockchain_project/src/actions/auth.js":"26","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/ListBiji.js":"27","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/DaftarProduk.js":"28","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ShowProduk.js":"29","/Applications/MAMP/htdocs/blockchain_project/src/reducers/index.js":"30","/Applications/MAMP/htdocs/blockchain_project/src/actions/types.js":"31","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/EditVarietasForm.js":"32","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/EditBijiForm.js":"33","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/EditUnitForm.js":"34","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/DaftarUnitForm.js":"35","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/EditSupplierForm.js":"36","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/DaftarVarietasForm.js":"37","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatchForm.js":"38","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/DaftarBijiForm.js":"39","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ShowProdukForm.js":"40","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/EditProsesForm.js":"41","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/DaftarProdukForm.js":"42","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatchForm.js":"43","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/DaftarProsesForm.js":"44","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/HalamanUtama/HalamanUtama.js":"45","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/DaftarSupplierForm.js":"46","/Applications/MAMP/htdocs/blockchain_project/src/components/showResults/showResults.js":"47","/Applications/MAMP/htdocs/blockchain_project/src/services/auth.service.js":"48","/Applications/MAMP/htdocs/blockchain_project/src/services/user.service.js":"49","/Applications/MAMP/htdocs/blockchain_project/src/abi/abi.js":"50","/Applications/MAMP/htdocs/blockchain_project/src/reducers/message.js":"51","/Applications/MAMP/htdocs/blockchain_project/src/reducers/auth.js":"52","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/Google Maps/MyGoogleMap.js":"53","/Applications/MAMP/htdocs/blockchain_project/src/services/auth-header-image.js":"54","/Applications/MAMP/htdocs/blockchain_project/src/services/auth-header.js":"55","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/Google Maps/Marker.js":"56","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/ListCNF.js":"57","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNF.js":"58","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNFForm.js":"59","/Applications/MAMP/htdocs/blockchain_project/src/abi/cnf.js":"60","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/GetID.js":"61","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGround.js":"62","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/AddBeans.js":"63","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/EditBeans.js":"64","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGround.js":"65","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/DaftarProses.js":"66","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/EditUnit.js":"67","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietas.js":"68","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/EditProses.js":"69","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietas.js":"70","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Header/Header.js":"71","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfile.js":"72","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplier.js":"73","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfile.js":"74","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoasting.js":"75","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/MasterDataLists.js":"76","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/RoastingLists.js":"77","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProducts.js":"78","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/AddUnit.js":"79","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/EditProducts.js":"80","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplier.js":"81","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/ProductLists.js":"82","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/EditRoasting.js":"83","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplierForm.js":"84","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/EditRoastingForm.js":"85","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/EditProductForm.js":"86","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/AddUnitForm.js":"87","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProductForm.js":"88","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfileForm.js":"89","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplierForm.js":"90","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoastingForm.js":"91","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfileForm.js":"92","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietasForm.js":"93","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/EditProsesForm.js":"94","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/DaftarProsesForm.js":"95","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/EditUnitForm.js":"96","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietasForm.js":"97","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGroundForm.js":"98","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGroundForm.js":"99","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/AddBeansForm.js":"100","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/EditBeansForm.js":"101","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js":"102","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/MyGoogleMap.js":"103","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/showResults/showResults.js":"104","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/Marker.js":"105","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js":"106","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js":"107","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCuppingForm.js":"108","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCuppingForm.js":"109","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScan.js":"110","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/ListCupping.js":"111","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScanDetail.js":"112","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/ListLogAPI.js":"113","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/DaftarPO.js":"114","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/EditSKU.js":"115","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/DaftarSKU.js":"116","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/DaftarGreenBean.js":"117","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/EditGreenBean.js":"118","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ShowGreenBean.js":"119","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/EditPO.js":"120","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ListGreenBean.js":"121","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/GetBatchID.js":"122","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ScanQRGreenBean.js":"123","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/EditPOForm.js":"124","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/DaftarGreenBeanForm.js":"125","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/DaftarSKUForm.js":"126","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/EditGreenBeanForm.js":"127","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/EditSKUForm.js":"128","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ShowGreenBeanForm.js":"129","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/DaftarPOForm.js":"130","/Applications/MAMP/htdocs/Coffee-Traceability/src/index.js":"131","/Applications/MAMP/htdocs/Coffee-Traceability/src/store.js":"132","/Applications/MAMP/htdocs/Coffee-Traceability/src/App.js":"133","/Applications/MAMP/htdocs/Coffee-Traceability/src/serviceWorker.js":"134","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/login.component.js":"135","/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/message.js":"136","/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/auth.js":"137","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/HalamanUtama/GetID.js":"138","/Applications/MAMP/htdocs/Coffee-Traceability/src/helpers/history.js":"139","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/EditSKU.js":"140","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/ListBiji.js":"141","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/DaftarBiji.js":"142","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/DaftarUnit.js":"143","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/DaftarProses.js":"144","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/EditUnit.js":"145","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ListSupplier.js":"146","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ShowSupplier.js":"147","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/EditProses.js":"148","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPO.js":"149","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/EditSupplier.js":"150","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/DaftarBatch.js":"151","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/DaftarSupplier.js":"152","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/EditBatch.js":"153","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/GetBatchID.js":"154","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/DaftarGreenBean.js":"155","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNF.js":"156","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBean.js":"157","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/ListCNF.js":"158","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ShowProduk.js":"159","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/ListBatch.js":"160","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/DaftarVarietas.js":"161","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/EditVarietas.js":"162","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/DaftarProduk.js":"163","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ListGreenBean.js":"164","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/DaftarSKU.js":"165","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ShowGreenBean.js":"166","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ListProduk.js":"167","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/TransactionExplorer/ListTransaction.js":"168","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Header/Header.js":"169","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/EditPO.js":"170","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/EditBiji.js":"171","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Header/Header.js":"172","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js":"173","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfile.js":"174","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js":"175","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGround.js":"176","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScan.js":"177","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/MasterDataLists.js":"178","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/EditProses.js":"179","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/AddBeans.js":"180","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/ListCupping.js":"181","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplier.js":"182","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/EditBeans.js":"183","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/DaftarProses.js":"184","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietas.js":"185","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGround.js":"186","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/EditRoasting.js":"187","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/AddRoasting.js":"188","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/RoastingLists.js":"189","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/EditProducts.js":"190","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplier.js":"191","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/ProductLists.js":"192","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/AddUnit.js":"193","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietas.js":"194","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/GetID.js":"195","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/EditUnit.js":"196","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfile.js":"197","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/ListLogAPI.js":"198","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/AddProducts.js":"199","/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/index.js":"200","/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/types.js":"201","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/EditBijiForm.js":"202","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/DaftarSKUForm.js":"203","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/EditPOForm.js":"204","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ShowGreenBeanForm.js":"205","/Applications/MAMP/htdocs/Coffee-Traceability/src/services/user.service.js":"206","/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth.service.js":"207","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/showResults/showResults.js":"208","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/EditUnitForm.js":"209","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/AddProductForm.js":"210","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietasForm.js":"211","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfileForm.js":"212","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/HalamanUtama.js":"213","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/AddUnitForm.js":"214","/Applications/MAMP/htdocs/Coffee-Traceability/src/abi/abi.js":"215","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplierForm.js":"216","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/AddRoastingForm.js":"217","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/EditProductForm.js":"218","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/DaftarProsesForm.js":"219","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGroundForm.js":"220","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietasForm.js":"221","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/EditRoastingForm.js":"222","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/AddBeansForm.js":"223","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplierForm.js":"224","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/EditProsesForm.js":"225","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/EditBeansForm.js":"226","/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/message.js":"227","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/showResults/showResults.js":"228","/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/auth.js":"229","/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth-header.js":"230","/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth-header-image.js":"231","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/EditCuppingForm.js":"232","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfileForm.js":"233","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGroundForm.js":"234","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScanDetail.js":"235","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/EditVarietasForm.js":"236","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/AddCuppingForm.js":"237","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/DaftarProdukForm.js":"238","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ShowProdukForm.js":"239","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/DaftarVarietasForm.js":"240","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBeanForm.js":"241","/Applications/MAMP/htdocs/Coffee-Traceability/src/abi/cnf.js":"242","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNFForm.js":"243","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/DaftarGreenBeanForm.js":"244","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/MyGoogleMap.js":"245","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ScanQRGreenBean.js":"246","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/DaftarSupplierForm.js":"247","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/EditBatchForm.js":"248","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/DaftarBatchForm.js":"249","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/EditSupplierForm.js":"250","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ShowSupplierForm.js":"251","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/EditProsesForm.js":"252","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/DaftarProsesForm.js":"253","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPOForm.js":"254","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/EditUnitForm.js":"255","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/Marker.js":"256","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/Google Maps/MyGoogleMap.js":"257","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/Google Maps/Marker.js":"258","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/HalamanUtama/HalamanUtama.js":"259","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/DaftarBijiForm.js":"260","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/EditSKUForm.js":"261","/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/DaftarUnitForm.js":"262"},{"size":573,"mtime":1632707676213,"results":"263","hashOfConfig":"264"},{"size":340,"mtime":1632707676215,"results":"265","hashOfConfig":"264"},{"size":17873,"mtime":1641865552607,"results":"266","hashOfConfig":"264"},{"size":5344,"mtime":1632707676214,"results":"267","hashOfConfig":"264"},{"size":5671,"mtime":1639051947166,"results":"268","hashOfConfig":"264"},{"size":206,"mtime":1632707676208,"results":"269","hashOfConfig":"264"},{"size":591,"mtime":1632707676209,"results":"270","hashOfConfig":"264"},{"size":591,"mtime":1632707676210,"results":"271","hashOfConfig":"264"},{"size":646,"mtime":1632707676210,"results":"272","hashOfConfig":"264"},{"size":3295,"mtime":1641625120510,"results":"273","hashOfConfig":"264"},{"size":662,"mtime":1632707676210,"results":"274","hashOfConfig":"264"},{"size":2050,"mtime":1639051947162,"results":"275","hashOfConfig":"264"},{"size":731,"mtime":1635258827353,"results":"276","hashOfConfig":"264"},{"size":4087,"mtime":1641351349490,"results":"277","hashOfConfig":"264"},{"size":3754,"mtime":1637145779398,"results":"278","hashOfConfig":"264"},{"size":712,"mtime":1632707676209,"results":"279","hashOfConfig":"264"},{"size":4140,"mtime":1637145779395,"results":"280","hashOfConfig":"264"},{"size":95,"mtime":1632707676213,"results":"281","hashOfConfig":"264"},{"size":1951,"mtime":1632707676212,"results":"282","hashOfConfig":"264"},{"size":282,"mtime":1632707676209,"results":"283","hashOfConfig":"264"},{"size":732,"mtime":1632707676210,"results":"284","hashOfConfig":"264"},{"size":3602,"mtime":1632707676211,"results":"285","hashOfConfig":"264"},{"size":1937,"mtime":1639051947161,"results":"286","hashOfConfig":"264"},{"size":2316,"mtime":1641351369268,"results":"287","hashOfConfig":"264"},{"size":605,"mtime":1632707676210,"results":"288","hashOfConfig":"264"},{"size":1805,"mtime":1632707676208,"results":"289","hashOfConfig":"264"},{"size":24624,"mtime":1641625120489,"results":"290","hashOfConfig":"264"},{"size":7695,"mtime":1641442826713,"results":"291","hashOfConfig":"264"},{"size":300,"mtime":1632707676211,"results":"292","hashOfConfig":"264"},{"size":233,"mtime":1632707676214,"results":"293","hashOfConfig":"264"},{"size":304,"mtime":1632707676208,"results":"294","hashOfConfig":"264"},{"size":2873,"mtime":1637145779397,"results":"295","hashOfConfig":"264"},{"size":2786,"mtime":1637145779396,"results":"296","hashOfConfig":"264"},{"size":2307,"mtime":1637145779397,"results":"297","hashOfConfig":"264"},{"size":2202,"mtime":1637145779396,"results":"298","hashOfConfig":"264"},{"size":9211,"mtime":1641442344711,"results":"299","hashOfConfig":"264"},{"size":2547,"mtime":1637145779397,"results":"300","hashOfConfig":"264"},{"size":9793,"mtime":1641442551177,"results":"301","hashOfConfig":"264"},{"size":2525,"mtime":1637145779395,"results":"302","hashOfConfig":"264"},{"size":15846,"mtime":1637145779397,"results":"303","hashOfConfig":"264"},{"size":2866,"mtime":1637145779396,"results":"304","hashOfConfig":"264"},{"size":16622,"mtime":1641442858159,"results":"305","hashOfConfig":"264"},{"size":9855,"mtime":1641442570376,"results":"306","hashOfConfig":"264"},{"size":2545,"mtime":1637145779396,"results":"307","hashOfConfig":"264"},{"size":28749,"mtime":1641275721610,"results":"308","hashOfConfig":"264"},{"size":9416,"mtime":1641442342364,"results":"309","hashOfConfig":"264"},{"size":277,"mtime":1632707676213,"results":"310","hashOfConfig":"264"},{"size":661,"mtime":1632707676215,"results":"311","hashOfConfig":"264"},{"size":17033,"mtime":1641865552610,"results":"312","hashOfConfig":"264"},{"size":7934,"mtime":1634986371884,"results":"313","hashOfConfig":"264"},{"size":353,"mtime":1632707676214,"results":"314","hashOfConfig":"264"},{"size":1041,"mtime":1632707676214,"results":"315","hashOfConfig":"264"},{"size":4375,"mtime":1641288933520,"results":"316","hashOfConfig":"264"},{"size":271,"mtime":1641914231773,"results":"317","hashOfConfig":"264"},{"size":263,"mtime":1632707676215,"results":"318","hashOfConfig":"264"},{"size":806,"mtime":1632707676212,"results":"319","hashOfConfig":"264"},{"size":4515,"mtime":1641366646354,"results":"320","hashOfConfig":"264"},{"size":6651,"mtime":1641366646354,"results":"321","hashOfConfig":"264"},{"size":3743,"mtime":1636367305534,"results":"322","hashOfConfig":"264"},{"size":7341,"mtime":1637247154220,"results":"323","hashOfConfig":"264"},{"size":283,"mtime":1637145779399,"results":"324","hashOfConfig":"264"},{"size":708,"mtime":1637145779404,"results":"325","hashOfConfig":"264"},{"size":637,"mtime":1637145779399,"results":"326","hashOfConfig":"264"},{"size":602,"mtime":1637145779400,"results":"327","hashOfConfig":"264"},{"size":659,"mtime":1637145779404,"results":"328","hashOfConfig":"264"},{"size":663,"mtime":1637145779400,"results":"329","hashOfConfig":"264"},{"size":604,"mtime":1637145779403,"results":"330","hashOfConfig":"264"},{"size":626,"mtime":1637145779403,"results":"331","hashOfConfig":"264"},{"size":618,"mtime":1637145779400,"results":"332","hashOfConfig":"264"},{"size":664,"mtime":1637145779403,"results":"333","hashOfConfig":"264"},{"size":2732,"mtime":1641275721610,"results":"334","hashOfConfig":"264"},{"size":689,"mtime":1637145779401,"results":"335","hashOfConfig":"264"},{"size":1941,"mtime":1637145779402,"results":"336","hashOfConfig":"264"},{"size":674,"mtime":1637145779401,"results":"337","hashOfConfig":"264"},{"size":11807,"mtime":1641445685902,"results":"338","hashOfConfig":"264"},{"size":26029,"mtime":1638541151479,"results":"339","hashOfConfig":"264"},{"size":5410,"mtime":1639051947166,"results":"340","hashOfConfig":"264"},{"size":1282,"mtime":1637145779405,"results":"341","hashOfConfig":"264"},{"size":607,"mtime":1637145779403,"results":"342","hashOfConfig":"264"},{"size":1442,"mtime":1637145779405,"results":"343","hashOfConfig":"264"},{"size":1872,"mtime":1637145779401,"results":"344","hashOfConfig":"264"},{"size":4631,"mtime":1639051947164,"results":"345","hashOfConfig":"264"},{"size":2451,"mtime":1641446199738,"results":"346","hashOfConfig":"264"},{"size":7678,"mtime":1641442351887,"results":"347","hashOfConfig":"264"},{"size":13063,"mtime":1641442636944,"results":"348","hashOfConfig":"264"},{"size":9900,"mtime":1638153149347,"results":"349","hashOfConfig":"264"},{"size":2195,"mtime":1637145779403,"results":"350","hashOfConfig":"264"},{"size":10179,"mtime":1638541151479,"results":"351","hashOfConfig":"264"},{"size":2488,"mtime":1637145779401,"results":"352","hashOfConfig":"264"},{"size":8774,"mtime":1641442354153,"results":"353","hashOfConfig":"264"},{"size":12684,"mtime":1641442621505,"results":"354","hashOfConfig":"264"},{"size":2302,"mtime":1637145779401,"results":"355","hashOfConfig":"264"},{"size":2589,"mtime":1637145779403,"results":"356","hashOfConfig":"264"},{"size":2883,"mtime":1637145779401,"results":"357","hashOfConfig":"264"},{"size":2586,"mtime":1637145779400,"results":"358","hashOfConfig":"264"},{"size":2325,"mtime":1637145779403,"results":"359","hashOfConfig":"264"},{"size":2930,"mtime":1637145779404,"results":"360","hashOfConfig":"264"},{"size":2340,"mtime":1637145779404,"results":"361","hashOfConfig":"264"},{"size":2451,"mtime":1637145779404,"results":"362","hashOfConfig":"264"},{"size":2521,"mtime":1637145779399,"results":"363","hashOfConfig":"264"},{"size":2843,"mtime":1637145779400,"results":"364","hashOfConfig":"264"},{"size":66822,"mtime":1641287160730,"results":"365","hashOfConfig":"264"},{"size":4375,"mtime":1641208984925,"results":"366","hashOfConfig":"264"},{"size":277,"mtime":1637145779406,"results":"367","hashOfConfig":"264"},{"size":806,"mtime":1637145779402,"results":"368","hashOfConfig":"264"},{"size":2149,"mtime":1641444270920,"results":"369","hashOfConfig":"264"},{"size":3813,"mtime":1641443758828,"results":"370","hashOfConfig":"264"},{"size":7226,"mtime":1641442598701,"results":"371","hashOfConfig":"264"},{"size":7343,"mtime":1641442606922,"results":"372","hashOfConfig":"264"},{"size":307,"mtime":1638541151478,"results":"373","hashOfConfig":"264"},{"size":4732,"mtime":1641625120510,"results":"374","hashOfConfig":"264"},{"size":15287,"mtime":1641865552610,"results":"375","hashOfConfig":"264"},{"size":2145,"mtime":1641275721611,"results":"376","hashOfConfig":"264"},{"size":1366,"mtime":1641902879069,"results":"377","hashOfConfig":"264"},{"size":1112,"mtime":1641902879071,"results":"378","hashOfConfig":"264"},{"size":987,"mtime":1641902879070,"results":"379","hashOfConfig":"264"},{"size":2692,"mtime":1641902879067,"results":"380","hashOfConfig":"264"},{"size":2675,"mtime":1641902879068,"results":"381","hashOfConfig":"264"},{"size":315,"mtime":1641625120487,"results":"382","hashOfConfig":"264"},{"size":1375,"mtime":1641902879070,"results":"383","hashOfConfig":"264"},{"size":8763,"mtime":1641913251591,"results":"384","hashOfConfig":"264"},{"size":365,"mtime":1641865552608,"results":"385","hashOfConfig":"264"},{"size":8685,"mtime":1641865552609,"results":"386","hashOfConfig":"264"},{"size":3422,"mtime":1641902879070,"results":"387","hashOfConfig":"264"},{"size":17319,"mtime":1641902879068,"results":"388","hashOfConfig":"264"},{"size":2549,"mtime":1641902879071,"results":"389","hashOfConfig":"264"},{"size":18217,"mtime":1641902879069,"results":"390","hashOfConfig":"264"},{"size":2592,"mtime":1641625120509,"results":"391","hashOfConfig":"264"},{"size":15846,"mtime":1641625120487,"results":"392","hashOfConfig":"264"},{"size":3313,"mtime":1641902879069,"results":"393","hashOfConfig":"264"},{"size":573,"mtime":1642780673769,"results":"394","hashOfConfig":"395"},{"size":340,"mtime":1642780673777,"results":"396","hashOfConfig":"395"},{"size":18117,"mtime":1642780673676,"results":"397","hashOfConfig":"395"},{"size":5344,"mtime":1642780673775,"results":"398","hashOfConfig":"395"},{"size":5671,"mtime":1642780673766,"results":"399","hashOfConfig":"395"},{"size":206,"mtime":1642780673680,"results":"400","hashOfConfig":"395"},{"size":1805,"mtime":1642780673680,"results":"401","hashOfConfig":"395"},{"size":282,"mtime":1642780673696,"results":"402","hashOfConfig":"395"},{"size":95,"mtime":1642780673768,"results":"403","hashOfConfig":"395"},{"size":1112,"mtime":1642780673708,"results":"404","hashOfConfig":"395"},{"size":26167,"mtime":1642780673700,"results":"405","hashOfConfig":"395"},{"size":712,"mtime":1642780673698,"results":"406","hashOfConfig":"395"},{"size":646,"mtime":1642780673710,"results":"407","hashOfConfig":"395"},{"size":732,"mtime":1642780673703,"results":"408","hashOfConfig":"395"},{"size":591,"mtime":1642780673711,"results":"409","hashOfConfig":"395"},{"size":5438,"mtime":1642780673719,"results":"410","hashOfConfig":"395"},{"size":501,"mtime":1642780673719,"results":"411","hashOfConfig":"395"},{"size":605,"mtime":1642780673705,"results":"412","hashOfConfig":"395"},{"size":1366,"mtime":1642780673701,"results":"413","hashOfConfig":"395"},{"size":2487,"mtime":1642780673717,"results":"414","hashOfConfig":"395"},{"size":4087,"mtime":1642780673682,"results":"415","hashOfConfig":"395"},{"size":3170,"mtime":1642780673716,"results":"416","hashOfConfig":"395"},{"size":2316,"mtime":1642780673683,"results":"417","hashOfConfig":"395"},{"size":365,"mtime":1642780673691,"results":"418","hashOfConfig":"395"},{"size":2692,"mtime":1642780673688,"results":"419","hashOfConfig":"395"},{"size":6651,"mtime":1642780673686,"results":"420","hashOfConfig":"395"},{"size":2675,"mtime":1642780673690,"results":"421","hashOfConfig":"395"},{"size":4515,"mtime":1642780673686,"results":"422","hashOfConfig":"395"},{"size":300,"mtime":1642780673715,"results":"423","hashOfConfig":"395"},{"size":4140,"mtime":1642780673684,"results":"424","hashOfConfig":"395"},{"size":731,"mtime":1642780673712,"results":"425","hashOfConfig":"395"},{"size":662,"mtime":1642780673713,"results":"426","hashOfConfig":"395"},{"size":7695,"mtime":1642780673714,"results":"427","hashOfConfig":"395"},{"size":8763,"mtime":1642780673693,"results":"428","hashOfConfig":"395"},{"size":987,"mtime":1642780673707,"results":"429","hashOfConfig":"395"},{"size":315,"mtime":1642780673694,"results":"430","hashOfConfig":"395"},{"size":3602,"mtime":1642780673715,"results":"431","hashOfConfig":"395"},{"size":1951,"mtime":1642780673720,"results":"432","hashOfConfig":"395"},{"size":3295,"mtime":1642780673723,"results":"433","hashOfConfig":"395"},{"size":1375,"mtime":1642780673702,"results":"434","hashOfConfig":"395"},{"size":591,"mtime":1642780673699,"results":"435","hashOfConfig":"395"},{"size":2732,"mtime":1642780673727,"results":"436","hashOfConfig":"395"},{"size":3813,"mtime":1642780673735,"results":"437","hashOfConfig":"395"},{"size":689,"mtime":1642780673743,"results":"438","hashOfConfig":"395"},{"size":2149,"mtime":1642780673737,"results":"439","hashOfConfig":"395"},{"size":659,"mtime":1642780673752,"results":"440","hashOfConfig":"395"},{"size":307,"mtime":1642780673736,"results":"441","hashOfConfig":"395"},{"size":26029,"mtime":1642780673739,"results":"442","hashOfConfig":"395"},{"size":618,"mtime":1642780673741,"results":"443","hashOfConfig":"395"},{"size":637,"mtime":1642780673733,"results":"444","hashOfConfig":"395"},{"size":4732,"mtime":1642780673738,"results":"445","hashOfConfig":"395"},{"size":1941,"mtime":1642780673745,"results":"446","hashOfConfig":"395"},{"size":602,"mtime":1642780673734,"results":"447","hashOfConfig":"395"},{"size":663,"mtime":1642780673741,"results":"448","hashOfConfig":"395"},{"size":664,"mtime":1642780673749,"results":"449","hashOfConfig":"395"},{"size":708,"mtime":1642780673753,"results":"450","hashOfConfig":"395"},{"size":2451,"mtime":1642780673762,"results":"451","hashOfConfig":"395"},{"size":11807,"mtime":1642780673761,"results":"452","hashOfConfig":"395"},{"size":5410,"mtime":1642780673763,"results":"453","hashOfConfig":"395"},{"size":1442,"mtime":1642780673758,"results":"454","hashOfConfig":"395"},{"size":1872,"mtime":1642780673744,"results":"455","hashOfConfig":"395"},{"size":4631,"mtime":1642780673759,"results":"456","hashOfConfig":"395"},{"size":607,"mtime":1642780673747,"results":"457","hashOfConfig":"395"},{"size":626,"mtime":1642780673750,"results":"458","hashOfConfig":"395"},{"size":283,"mtime":1642780673729,"results":"459","hashOfConfig":"395"},{"size":604,"mtime":1642780673748,"results":"460","hashOfConfig":"395"},{"size":674,"mtime":1642780673743,"results":"461","hashOfConfig":"395"},{"size":2145,"mtime":1642780673732,"results":"462","hashOfConfig":"395"},{"size":1282,"mtime":1642780673756,"results":"463","hashOfConfig":"395"},{"size":233,"mtime":1642780673771,"results":"464","hashOfConfig":"395"},{"size":304,"mtime":1642780673681,"results":"465","hashOfConfig":"395"},{"size":2786,"mtime":1642780673700,"results":"466","hashOfConfig":"395"},{"size":2549,"mtime":1642780673708,"results":"467","hashOfConfig":"395"},{"size":3422,"mtime":1642780673702,"results":"468","hashOfConfig":"395"},{"size":15846,"mtime":1642780673694,"results":"469","hashOfConfig":"395"},{"size":17033,"mtime":1642780673777,"results":"470","hashOfConfig":"395"},{"size":661,"mtime":1642780673776,"results":"471","hashOfConfig":"395"},{"size":277,"mtime":1642780673767,"results":"472","hashOfConfig":"395"},{"size":2325,"mtime":1642780673748,"results":"473","hashOfConfig":"395"},{"size":10179,"mtime":1642780673754,"results":"474","hashOfConfig":"395"},{"size":2930,"mtime":1642780673750,"results":"475","hashOfConfig":"395"},{"size":2488,"mtime":1642780673744,"results":"476","hashOfConfig":"395"},{"size":66822,"mtime":1642780673730,"results":"477","hashOfConfig":"395"},{"size":2195,"mtime":1642780673747,"results":"478","hashOfConfig":"395"},{"size":7934,"mtime":1642780673678,"results":"479","hashOfConfig":"395"},{"size":7678,"mtime":1642780673745,"results":"480","hashOfConfig":"395"},{"size":12684,"mtime":1642780673762,"results":"481","hashOfConfig":"395"},{"size":9900,"mtime":1642780673757,"results":"482","hashOfConfig":"395"},{"size":2586,"mtime":1642780673741,"results":"483","hashOfConfig":"395"},{"size":2451,"mtime":1642780673753,"results":"484","hashOfConfig":"395"},{"size":2589,"mtime":1642780673750,"results":"485","hashOfConfig":"395"},{"size":13063,"mtime":1642780673763,"results":"486","hashOfConfig":"395"},{"size":2521,"mtime":1642780673733,"results":"487","hashOfConfig":"395"},{"size":8774,"mtime":1642780673745,"results":"488","hashOfConfig":"395"},{"size":2883,"mtime":1642780673742,"results":"489","hashOfConfig":"395"},{"size":2843,"mtime":1642780673734,"results":"490","hashOfConfig":"395"},{"size":353,"mtime":1642780673772,"results":"491","hashOfConfig":"395"},{"size":277,"mtime":1642780673764,"results":"492","hashOfConfig":"395"},{"size":1041,"mtime":1642780673770,"results":"493","hashOfConfig":"395"},{"size":263,"mtime":1642780673776,"results":"494","hashOfConfig":"395"},{"size":271,"mtime":1642780673775,"results":"495","hashOfConfig":"395"},{"size":7343,"mtime":1642780673737,"results":"496","hashOfConfig":"395"},{"size":2302,"mtime":1642780673743,"results":"497","hashOfConfig":"395"},{"size":2340,"mtime":1642780673752,"results":"498","hashOfConfig":"395"},{"size":15377,"mtime":1642780673736,"results":"499","hashOfConfig":"395"},{"size":2873,"mtime":1642780673713,"results":"500","hashOfConfig":"395"},{"size":7226,"mtime":1642780673735,"results":"501","hashOfConfig":"395"},{"size":16622,"mtime":1642780673714,"results":"502","hashOfConfig":"395"},{"size":15846,"mtime":1642780673715,"results":"503","hashOfConfig":"395"},{"size":2547,"mtime":1642780673712,"results":"504","hashOfConfig":"395"},{"size":18307,"mtime":1642780673691,"results":"505","hashOfConfig":"395"},{"size":7341,"mtime":1642780673679,"results":"506","hashOfConfig":"395"},{"size":3743,"mtime":1642780673686,"results":"507","hashOfConfig":"395"},{"size":17517,"mtime":1642780673689,"results":"508","hashOfConfig":"395"},{"size":4375,"mtime":1642780673746,"results":"509","hashOfConfig":"395"},{"size":8775,"mtime":1642780673693,"results":"510","hashOfConfig":"395"},{"size":9739,"mtime":1642780673716,"results":"511","hashOfConfig":"395"},{"size":9855,"mtime":1642780673684,"results":"512","hashOfConfig":"395"},{"size":9793,"mtime":1642780673683,"results":"513","hashOfConfig":"395"},{"size":9587,"mtime":1642780673717,"results":"514","hashOfConfig":"395"},{"size":10379,"mtime":1642780673719,"results":"515","hashOfConfig":"395"},{"size":2866,"mtime":1642780673706,"results":"516","hashOfConfig":"395"},{"size":2545,"mtime":1642780673704,"results":"517","hashOfConfig":"395"},{"size":3313,"mtime":1642780673701,"results":"518","hashOfConfig":"395"},{"size":2307,"mtime":1642780673711,"results":"519","hashOfConfig":"395"},{"size":806,"mtime":1642780673746,"results":"520","hashOfConfig":"395"},{"size":4375,"mtime":1642780673718,"results":"521","hashOfConfig":"395"},{"size":806,"mtime":1642780673718,"results":"522","hashOfConfig":"395"},{"size":28839,"mtime":1642780673697,"results":"523","hashOfConfig":"395"},{"size":2525,"mtime":1642780673699,"results":"524","hashOfConfig":"395"},{"size":2592,"mtime":1642780673709,"results":"525","hashOfConfig":"395"},{"size":2202,"mtime":1642780673710,"results":"526","hashOfConfig":"395"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},"1j31yzl",{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"529"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"529"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"529"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"529"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"529"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"529"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"572","usedDeprecatedRules":"529"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"529"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"529"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"529"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"529"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"529"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"529"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"529"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"529"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"529"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"529"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"529"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"529"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"637","usedDeprecatedRules":"529"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"529"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"529"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"529"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"529"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"529"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"529"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"529"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"529"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"706","usedDeprecatedRules":"529"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"529"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"529"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"529"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"529"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"725","messages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"727","usedDeprecatedRules":"529"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"529"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"733","usedDeprecatedRules":"529"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"529"},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741","usedDeprecatedRules":"529"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"529"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"529"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"529"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"529"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"529"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"529"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"529"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775","usedDeprecatedRules":"529"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":"778","usedDeprecatedRules":"529"},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"529"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787","usedDeprecatedRules":"529"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"529"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"793","messages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795","usedDeprecatedRules":"529"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"529"},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"803","usedDeprecatedRules":"529"},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"806","usedDeprecatedRules":"529"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809","usedDeprecatedRules":"529"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"529"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"529"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"830","usedDeprecatedRules":"529"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833","usedDeprecatedRules":"529"},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"529"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"839","usedDeprecatedRules":"529"},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"842","usedDeprecatedRules":"529"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"529"},{"filePath":"846","messages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"529"},{"filePath":"848","messages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"529"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ohx44i",{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"893","messages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"897","messages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"903","messages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"905","messages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"909","messages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"915","messages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"917","messages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"927","messages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"941","messages":"942","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"945","messages":"946","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"947","messages":"948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"953","messages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"955","messages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"957","messages":"958","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"959","messages":"960","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"961","messages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"963","messages":"964","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"995","messages":"996","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1001","messages":"1002","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1011","messages":"1012","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1057","messages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1061","messages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1063","messages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1067","messages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1073","messages":"1074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1093","messages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/MAMP/htdocs/blockchain_project/src/index.js",[],["1115","1116"],"/Applications/MAMP/htdocs/blockchain_project/src/store.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/App.js",["1117"],"import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nimport \"./scss/style.scss\";\nimport { Fragment } from \"react\";\n\nimport \"./components/Grosir/Grosir.css\";\nimport \"./components/Grosir/GrosirMedia.css\";\n\n//Header\nconst Header = lazy(() => import(\"./components/Header/Header\"));\n\n//Detail Produk\nconst GetId = lazy(() => import(\"./components/Grosir/HalamanUtama/GetID\"));\n\n//Biji\nconst ListBiji = lazy(() => import(\"./components/Grosir/MasterData/ListBiji\"));\nconst DaftarBiji = lazy(() =>\n  import(\"./components/Grosir/MasterData/Biji/DaftarBiji\")\n);\nconst EditBiji = lazy(() =>\n  import(\"./components/Grosir/MasterData/Biji/EditBiji\")\n);\n\n//SKU\nconst DaftarSKU = lazy(() =>\n  import(\"./components/Grosir/MasterData/SKU/DaftarSKU\")\n);\nconst EditSKU = lazy(() =>\n  import(\"./components/Grosir/MasterData/SKU/EditSKU\")\n);\n\n// PO\nconst DaftarPO = lazy(() =>\n  import(\"./components/Grosir/MasterData/PO/DaftarPO\")\n);\nconst EditPO = lazy(() =>\n  import(\"./components/Grosir/MasterData/PO/EditPO\")\n);\n\n//Varietas\nconst DaftarVarietas = lazy(() =>\n  import(\"./components/Grosir/MasterData/Varietas/DaftarVarietas\")\n);\nconst EditVarietas = lazy(() =>\n  import(\"./components/Grosir/MasterData/Varietas/EditVarietas\")\n);\n\n//Proses\nconst DaftarProses = lazy(() =>\n  import(\"./components/Grosir/MasterData/Proses/DaftarProses\")\n);\nconst EditProses = lazy(() =>\n  import(\"./components/Grosir/MasterData/Proses/EditProses\")\n);\n\n//Unit\nconst DaftarUnit = lazy(() =>\n  import(\"./components/Grosir/MasterData/Unit/DaftarUnit\")\n);\nconst EditUnit = lazy(() =>\n  import(\"./components/Grosir/MasterData/Unit/EditUnit\")\n);\n\n//Supplier\nconst ListSupplier = lazy(() =>\n  import(\"./components/Grosir/Supplier/ListSupplier\")\n);\nconst DaftarSupplier = lazy(() =>\n  import(\"./components/Grosir/Supplier/DaftarSupplier\")\n);\nconst EditSupplier = lazy(() =>\n  import(\"./components/Grosir/Supplier/EditSupplier\")\n);\n\n//Batch\nconst ListBatch = lazy(() => import(\"./components/Grosir/Batch/ListBatch\"));\nconst DaftarBatch = lazy(() => import(\"./components/Grosir/Batch/DaftarBatch\"));\nconst EditBatch = lazy(() => import(\"./components/Grosir/Batch/EditBatch\"));\nconst GetBatchID = lazy(() => import(\"./components/Grosir/GreenBean/GetBatchID\"));\n\n//CNF\nconst ListCNF = lazy(() => import('./components/Grosir/CNF/ListCNF'));\nconst AddCNF = lazy(() => import('./components/Grosir/CNF/AddCNF'));\n\n//Produk\nconst ListProduk = lazy(() => import(\"./components/Grosir/Produk/ListProduk\"));\nconst DaftarProduk = lazy(() =>\n  import(\"./components/Grosir/Produk/DaftarProduk\")\n);\nconst ShowProduk = lazy(() => import(\"./components/Grosir/Produk/ShowProduk\"));\n// const EditProduk = lazy(() => import(\"./components/Grosir/Produk/EditProduk\"));\n\n// green bean\nconst listGreenBean = lazy(() => import(\"./components/Grosir/GreenBean/ListGreenBean\"));\nconst DaftarGreenBean = lazy(() =>\n  import(\"./components/Grosir/GreenBean/DaftarGreenBean\")\n);\nconst ShowGreenBean = lazy(() => import(\"./components/Grosir/GreenBean/ShowGreenBean\"));\nconst EditGreenBean = lazy(() => import(\"./components/Grosir/GreenBean/EditGreenBean\"));\n\n//Transaction\nconst ListTransaction = lazy(() =>\n  import(\"./components/Grosir/TransactionExplorer/ListTransaction\")\n);\n\n// roaster\n  //Header\n  const HeaderRoaster = lazy(() => import(\"./components/Roaster/Header/Header\"));\n\n  //Detail Roaster\n  const GetIdRoaster = lazy(() => import(\"./components/Roaster/Roaster/MainPage/GetID\"));\n\n  const MasterDataLists = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/MasterDataLists\")\n  );\n\n  const AddRoastingProfile = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfile\")\n  );\n  const EditRoastingProfile = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfile\")\n  );\n\n  const GetCupping = lazy(() => import(\"./components/Roaster/Roaster/MasterData/Cupping/CuppingScan\"));\n\n  const ListCupping = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Cupping/ListCupping\")\n  );\n  const AddCupping = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Cupping/AddCupping\")\n  );\n\n  const EditCupping = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Cupping/EditCupping\")\n  );\n\n  const AddUnit = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Unit/AddUnit\")\n  );\n  const EditUnitRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Unit/EditUnit\")\n  );\n\n  const AddGroundWhole = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGround\")\n  );\n  const EditWholeBeanGround = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGround\")\n  );\n\n  const AddBeans = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Beans/AddBeans\")\n  );\n  const EditBeans = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Beans/EditBeans\")\n  );\n\n  const DaftarVarietasRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Varietas/DaftarVarietas\")\n  );\n  const EditVarietasRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Varietas/EditVarietas\")\n  );\n\n  const DaftarProsesRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Proses/DaftarProses\")\n  );\n  const EditProsesRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Proses/EditProses\")\n  );\n\n  const DaftarSupplierRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Supplier/DaftarSupplier\")\n  );\n  const EditSupplierRoaster = lazy(() =>\n    import(\"./components/Roaster/Roaster/MasterData/Supplier/EditSupplier\")\n  );\n\n  const ProductLists = lazy(() =>\n    import(\"./components/Roaster/Roaster/Products/ProductLists\")\n  );\n  const AddProducts = lazy(() =>\n    import(\"./components/Roaster/Roaster/Products/AddProducts\")\n  );\n  const EditProduct = lazy(() =>\n    import(\"./components/Roaster/Roaster/Products/EditProducts\")\n  );\n\n  const RoastingLists = lazy(() =>\n    import(\"./components/Roaster/Roaster/Roasting/RoastingLists\")\n  );\n  const AddRoasting = lazy(() =>\n    import(\"./components/Roaster/Roaster/Roasting/AddRoasting\")\n  );\n  const EditRoasting = lazy(() =>\n    import(\"./components/Roaster/Roaster/Roasting/EditRoasting\")\n  );\n\n  //LOG API\n  const ListLogAPI = lazy(() => import('./components/Roaster/Roaster/MainPage/ListLogAPI'));\n// end roaster\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    console.log('propsnya nih', props);\n\n    this.state = {\n      currentUser: undefined,\n      role: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        role: user.role,\n      });\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    const { isLoggedIn } = this.props;\n\n    if (!isLoggedIn) {\n      // history.push(\"/login\");\n    } else {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      if (user !== null) {\n        const exampleJWT = user.token;\n        function getPayload(jwt) {\n          return atob(jwt.split(\".\")[1]);\n        }\n        const payload = getPayload(exampleJWT);\n        if (payload.exp < Date.now() / 1000) {\n          localStorage.removeItem(\"user\");\n          history.push(\"/\");\n        }\n      }\n    }\n\n    return (\n      <Router history={history}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Route path=\"/\" exact component={Login} />\n          {currentUser && (\n            <div>\n              {/* <Header logoutClick={this.logOut} /> */}\n              {(() => {\n                if (currentUser.role === \"roaster\") { // jika login roaster\n                  return (\n                    <HeaderRoaster logoutClick={this.logOut} />\n                  )\n                } else {\n                  return (\n                    <Header logoutClick={this.logOut} />\n                  )\n                }\n              })()}\n            </div>\n          )}\n          <Route path=\"/detailProduk/:code/:id\" exact component={GetId} />\n\n          {currentUser && (\n            <Fragment>\n              {/* halaman CNF */}\n              <Route path=\"/listCNF\" exact component={ListCNF} />\n              <Route path=\"/AddCNF\" exact component={AddCNF} />\n              \n              {/* Halaman PO */}\n              <Route path=\"/listBiji/daftarPO\" exact component={DaftarPO} />\n              <Route\n                path=\"/listBiji/editPO/:id\"\n                exact\n                component={EditPO}\n              />\n\n              {/* Halaman SKU */}\n              <Route path=\"/listBiji/daftarSKU\" exact component={DaftarSKU} />\n              <Route\n                path=\"/listBiji/editSKU/:id\"\n                exact\n                component={EditSKU}\n              />\n\n              {/* Halaman Biji */}\n              <Route path=\"/listBiji\" exact component={ListBiji} />\n              <Route path=\"/listBiji/daftarBiji\" exact component={DaftarBiji} />\n              <Route path=\"/listBiji/editBiji/:id\" exact component={EditBiji} />\n              <Route\n                path=\"/listBiji/daftarVarietas\"\n                exact\n                component={DaftarVarietas}\n              />\n              <Route\n                path=\"/listBiji/editVarietas/:id\"\n                exact\n                component={EditVarietas}\n              />\n              <Route\n                path=\"/listBiji/daftarProses\"\n                exact\n                component={DaftarProses}\n              />\n              <Route\n                path=\"/listBiji/editProses/:id\"\n                exact\n                component={EditProses}\n              />\n              <Route path=\"/listBiji/daftarUnit\" exact component={DaftarUnit} />\n              <Route path=\"/listBiji/editUnit/:id\" exact component={EditUnit} />\n\n              {/* Halaman Supplier */}\n              <Route path=\"/listSupplier\" exact component={ListSupplier} />\n              <Route\n                path=\"/listSupplier/daftar\"\n                exact\n                component={DaftarSupplier}\n              />\n              <Route\n                path=\"/listSupplier/editSupplier/:id\"\n                exact\n                component={EditSupplier}\n              />\n\n              {/* Halaman Batch */}\n              <Route path=\"/listBatch\" exact component={ListBatch} />\n              <Route path=\"/listBatch/daftar\" exact component={DaftarBatch} />\n              <Route\n                path=\"/listBatch/editBatch/:id\"\n                exact\n                component={EditBatch}\n              />\n\n              {/* Halaman Produk */}\n              <Route path=\"/listProduk\" exact component={ListProduk} />\n              {currentUser && (\n                <Route exact path=\"/listProduk/daftar\">\n                  <DaftarProduk code={currentUser.user_detail.group.code} />\n                </Route>\n              )}\n              <Route\n                path=\"/listProduk/detailProduk/:id\"\n                exact\n                component={ShowProduk}\n              />\n              {/* <Route\n                path=\"/produk/edit/:id\"\n                exact\n                component={EditProduk}\n              /> */}\n\n              {/* halaman green bean */}\n              <Route path=\"/listGreenBean\" exact component={listGreenBean} />\n              {currentUser && (\n                <Route exact path=\"/listGreenBean/daftar\">\n                  <DaftarGreenBean code={currentUser.user_detail.group.code} />\n                </Route>\n              )}\n              <Route\n                path=\"/listGreenBean/detailProduk/:id\"\n                exact\n                component={ShowGreenBean}\n              />\n              <Route\n                path=\"/greenBean/edit/:id\"\n                exact\n                component={EditGreenBean}\n              />\n              \n              {/* Halaman Produk */}\n              <Route\n                path=\"/transactionExplorer\"\n                exact\n                component={ListTransaction}\n              />\n            </Fragment>\n          )}\n\n          {/* roaster */}\n          <Route path=\"/detailRoasting/:code/:id\" exact component={GetIdRoaster} />\n\n          {/* Cupping */}\n          <Route path=\"/Cupping/:code/:id\" exact component={GetCupping} />\n\n          {/* Batch */}\n          <Route path=\"/detailBatch/:code/:id\" exact component={GetBatchID} />\n\n          <Route path=\"/List-Log-API\" exact component={ListLogAPI} />\n\n          {currentUser && (\n            <Fragment>\n              <Route path=\"/masterData\" exact component={MasterDataLists} />\n\n              <Route\n                path=\"/masterData/addRoastingProfile\"\n                exact\n                component={AddRoastingProfile}\n              />\n              <Route\n                path=\"/masterData/editRoastingProfile/:id\"\n                exact\n                component={EditRoastingProfile}\n              />\n\n              <Route\n                path=\"/ListCupping\"\n                exact\n                component={ListCupping}\n              />\n              {currentUser && (\n                <Route exact path=\"/masterData/addCupping\">\n                  <AddCupping code={currentUser.user_detail.group.code} />\n                </Route>\n              )}\n\n              {/* <Route\n                path=\"/masterData/addCupping\"\n                exact\n                component={AddCupping}\n              /> */}\n\n              <Route\n                path=\"/masterData/editCupping/:id\"\n                exact\n                component={EditCupping}\n              />\n\n              <Route\n                path=\"/masterData/addWholeBean-Ground\"\n                exact\n                component={AddGroundWhole}\n              />\n              <Route\n                path=\"/masterData/editWholeBean-Ground/:id\"\n                exact\n                component={EditWholeBeanGround}\n              />\n\n              <Route path=\"/masterData/addUnit\" exact component={AddUnit} />\n              <Route\n                path=\"/masterData/editUnit/:id\"\n                exact\n                component={EditUnit}\n              />\n\n              <Route path=\"/masterData/addBeans\" exact component={AddBeans} />\n              <Route\n                path=\"/masterData/editBeans/:id\"\n                exact\n                component={EditBeans}\n              />\n\n              <Route\n                path=\"/masterData/addVariety\"\n                exact\n                component={DaftarVarietas}\n              />\n              <Route\n                path=\"/masterData/editVariety/:id\"\n                exact\n                component={EditVarietas}\n              />\n              <Route\n                path=\"/masterData/addVariety/Roaster\"\n                exact\n                component={DaftarVarietasRoaster}\n              />\n              <Route\n                path=\"/masterData/editVariety/Roaster/:id\"\n                exact\n                component={EditVarietasRoaster}\n              />\n\n              <Route\n                path=\"/masterData/addProcess/Roaster\"\n                exact\n                component={DaftarProsesRoaster}\n              />\n              <Route\n                path=\"/masterData/editProcess/Roaster/:id\"\n                exact\n                component={EditProsesRoaster}\n              />\n\n              <Route\n                path=\"/masterData/addProcess\"\n                exact\n                component={DaftarProses}\n              />\n              <Route\n                path=\"/masterData/editProcess/:id\"\n                exact\n                component={EditProses}\n              />\n\n              <Route\n                path=\"/masterData/addOrigin\"\n                exact\n                component={DaftarSupplier}\n              />\n              <Route\n                path=\"/masterData/editOrigin/:id\"\n                exact\n                component={EditSupplier}\n              />\n              <Route\n                path=\"/masterData/addOrigin/Roaster\"\n                exact\n                component={DaftarSupplierRoaster}\n              />\n              <Route\n                path=\"/masterData/editOrigin/Roaster/:id\"\n                exact\n                component={EditSupplierRoaster}\n              />\n\n              <Route path=\"/greenBeans\" exact component={ProductLists} />\n              <Route\n                path=\"/greenBeans/addGreenBeans\"\n                exact\n                component={AddProducts}\n              />\n              <Route\n                path=\"/greenBeans/editGreenBeans/:id\"\n                exact\n                component={EditProduct}\n              />\n\n              <Route path=\"/roasting\" exact component={RoastingLists} />\n              {currentUser && (\n                <Route exact path=\"/roasting/addRoasting\">\n                  <AddRoasting code={currentUser.user_detail.group.code} />\n                </Route>\n              )}\n              <Route\n                path=\"/roasting/editRoasting/:id\"\n                exact\n                component={EditRoasting}\n              />\n            </Fragment>\n          )}\n        </Suspense>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  const { isLoggedIn } = state.auth;\n  return {\n    user,\n    isLoggedIn,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","/Applications/MAMP/htdocs/blockchain_project/src/serviceWorker.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/login.component.js",["1118"],"import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { CButton, CRow, CCol, CImg } from \"@coreui/react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.email, this.state.password))\n        .then(() => {\n          history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false,\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (isLoggedIn === true) {\n      if(user) {\n        if(user.role === 'grosir'){\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/listBiji\" />;\n          // } else {\n          //   return <Redirect to=\"/listProduk\" />;\n          // }\n          \n          return <Redirect to=\"/listBiji\" />;\n\n        } else {\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/masterData\" />;\n          // } else {\n          //   return <Redirect to=\"/roasting\" />;\n          // }\n          \n          return <Redirect to=\"/masterData\" />;\n\n        }\n      } else {\n        console.log(\"LOGIN FAILED\");\n      }\n    }\n\n    return (\n      <div\n        className=\"c-app c-default-layout  align-items-center justify-content-center\"\n        style={{ backgroundColor: \"white\" }}\n      >\n        <CImg\n          src=\"/images/login form-04.png\"\n          className=\"d-inline-block align-top\"\n          alt=\"login-form\"\n          style={{ position: \"absolute\", maxWidth: \"600px\" }}\n        />\n\n        <div\n          className=\"justify-content-center\"\n          style={{\n            width: \"400px\",\n            zIndex: \"99\",\n            maxHeight: \"1000px\",\n            position: \"absolute\",\n          }}\n        >\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div\n              className=\"form-group\"\n              style={{ marginTop: \"13em\", paddingLeft: \"5em\" }}\n            >\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                // validations={[required]}\n              />\n            </div>\n\n            <div style={{ marginTop: \"3em\", paddingLeft: \"5em\" }}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                // validations={[required]}\n              />\n            </div>\n\n            <CRow style={{ marginTop: \"12em\" }}>\n              <CCol xs=\"6\">\n                <div>\n                  <button\n                    className=\"btn btn-light btn-block\"\n                    style={{ backgroundColor: \"white\" }}\n                    disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                    <span>Login</span>\n                  </button>\n                </div>\n              </CCol>\n              <CCol xs=\"6\" className=\"text-right\">\n                <CButton color=\"link\" className=\"px-0\">\n                  Forgot password?\n                </CButton>\n              </CCol>\n            </CRow>\n\n            {/* {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )} */}\n\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n\n        {/* <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"4\"></CCol>\n          </CRow>\n        </CContainer> */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","/Applications/MAMP/htdocs/blockchain_project/src/actions/message.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/EditBiji.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/EditUnit.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/DaftarUnit.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Header/Header.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/EditVarietas.js",["1119"],"import { Fragment } from \"react\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditProsesForm from \"./EditVarietasForm\";\nimport EditVarietasForm from \"./EditVarietasForm\";\n\nconst EditVarietas = () => {\n  const { id } = useParams();\n\n  const handleSubmit = (values) => {\n    var raw = JSON.stringify(values);\n    UserService.editJenis(id, raw).then(showResults(\"Data has been changed\"));\n  };\n\n  return (\n    <Fragment>\n      <EditVarietasForm onSubmit={handleSubmit} jenisID={id} />\n    </Fragment>\n  );\n};\n\nexport default EditVarietas;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/EditSupplier.js",["1120","1121","1122"],"import { Fragment, React, useState } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditSupplierForm from \"./EditSupplierForm\";\n\nconst EditSupplier = () => {\n  const { id } = useParams();\n\n  const [files, imageFile] = useState(\"\");\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const onFileChange = (file) => {\n    imageFile(file);\n  };\n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n    if (values.nama_supplier != null) {\n      formData.append(\"nama_supplier\", values.nama_supplier);\n    }\n    if (values.lokasi_supplier != null) {\n      formData.append(\"lokasi_supplier\", values.lokasi_supplier);\n    }\n    if (values.nama_petani != null) {\n      formData.append(\"nama_petani\", values.nama_petani);\n    }\n\n    if (lat != \"\" && long != \"\") {\n      formData.append(\"latitude\", lat);\n      formData.append(\"longitude\", long);\n    }\n\n    if (values.linkMaps != null) {\n      formData.append(\"link_maps\", values.linkMaps);\n    }\n\n    if (values.estimatedProduction != null) {\n      formData.append(\"estimatedProduction\", values.estimatedProduction);\n    }\n\n    if (values.elevation != null) {\n      formData.append(\"elevation\", values.elevation);\n    }\n\n    if (values.unit != null) {\n      formData.append(\"unit\", values.unit);\n    }\n\n    if (files != \"\") {\n      formData.append(\"files\", files);\n      formData.append(\"fileName\", files.name);\n    }\n\n    UserService.editSupplier(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  return (\n    <Fragment>\n      <EditSupplierForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        supplierID={id}\n        onSelectLat={onLatChange}\n        onSelectLong={onLongChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default EditSupplier;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/DaftarVarietas.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatch.js",["1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134"],"import { Fragment, Component } from \"react\";\nimport DaftarBatchForm from \"./DaftarBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\n\nexport default class DaftarBatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListBatchAsc().then((response) => {\n      this.setState({\n        content: response.data.batch,\n      });\n    });\n  }\n\n  onFileChange = (file) => {\n    this.setState({\n      imageFile: file,\n    });\n  };\n\n  onCertificateChange = (file) => {\n    this.setState({\n      certificateFile: file,\n    });\n  };\n\n  wait = (ms) => {\n    var start = new Date().getTime();\n    var end = start;\n    while(end < start + ms) {\n      end = new Date().getTime();\n   }\n }\n\n  handleSubmit = (values) => {\n    const formData = new FormData();\n    const batchID = this.handleIDBatch();\n\n    if(values.batch_id) {\n      formData.append(\"batch_id\", values.batch_id);\n      console.log('masuk value batch id');\n    } else {\n      formData.append(\"batch_id\", batchID);\n      console.log('masuk increment batch id');\n    }\n\n    if (\n      values.biji_id != undefined &&\n      values.jenis_id != undefined &&\n      // values.biji_id != undefined &&\n      // values.jenis_id != undefined &&\n      values.proses_id != undefined &&\n      values.supplier_id != undefined &&\n      values.tgl_panen != undefined &&\n      values.volume != undefined &&\n\n      //Form Baru\n      values.moisture != undefined &&\n      values.videoCulture != undefined &&\n      values.storytelling != undefined &&\n      \n      this.state.imageFile != \"\" &&\n      this.state.certificateFile != \"\"\n    ) {\n      \n      formData.append(\"biji_id\", values.biji_id);\n      formData.append(\"jenis_id\", values.jenis_id);\n      formData.append(\"proses_id\", values.proses_id);\n      formData.append(\"supplier_id\", values.supplier_id);\n      formData.append(\"tgl_panen\", values.tgl_panen);\n      formData.append(\"volume\", values.volume);\n\n      //Form Baru\n      formData.append(\"moisture\", values.moisture);\n      formData.append(\"video_culture\", values.videoCulture);\n      formData.append(\"storytelling\", values.storytelling);\n\n      formData.append(\"files[]\", this.state.imageFile);\n      // for (let i = 0; i < this.state.imageFile.length; i++) {\n      //   formData.append(\"files[]\", this.state.imageFile[i]);\n      // }\n\n      formData.append(\"certificate[]\", this.state.certificateFile);\n      // for (let i = 0; i < this.state.certificateFile.length; i++) {\n      //   formData.append(\"certificate[]\", this.state.certificateFile[i]);\n      // }\n\n      UserService.addBatch(formData).then(\n        showResults(\"Data has been added\")\n      );\n\n      this.wait(5000);\n      window.location.reload();\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  handleIDBatch = () => {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear().toString().substr(-2);\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let increment = 1;\n    let incrementalResultIDBatch = \"0\" + increment;\n    let resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n\n    for (let i = 0; i < this.state.content.length; i++) {\n      if (this.state.content[i].batch_id == resultIDBatch) {\n        increment += 1;\n        if (increment < 10) {\n          incrementalResultIDBatch = \"0\" + increment;\n        }\n        else {\n          incrementalResultIDBatch = increment;\n        }\n        resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n      }\n    }\n\n    return resultIDBatch;\n  };\n\n  render() {\n    this.handleIDBatch();\n    return (\n      <Fragment>\n        <DaftarBatchForm\n          onSubmit={this.handleSubmit}\n          onSelectImage={this.onFileChange}\n          onSelectCertificate={this.onCertificateChange}\n        />\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/ListSupplier.js",["1135","1136"],"import { Fragment, React, useState, useEffect, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\n\nexport default class ListSupplier extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListSupplier().then((response) => {\n      this.setState({\n        content: response.data,\n      });\n    });\n  }\n\n  deleteSupplier = (item) => {\n    UserService.deleteSupplier(item.id).then(showResults(\"Data has been deleted\"));\n  };\n\n  render() {\n    const fields = [\n      {\n        key: \"nama_supplier\",\n        label: \"Coffee Processor\",\n        _style: { width: \"40%\" },\n      },\n      { key: \"lokasi_supplier\", label: \"Origin\", _style: { width: \"30%\" } },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"30%\" },\n        filter: false,\n      },\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>\n                          Coffee Processor Data\n                        </h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/listSupplier/daftar\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content.supplier}\n                      fields={fields}\n                      itemsPerPage={10}\n                      pagination\n                      scopedSlots={{\n                        show_details: (item) => {\n                          return (\n                            <td\n                              className=\"py-2\"\n                              style={{\n                                textAlign: \"center\",\n                                verticalAlign: \"center\",\n                              }}\n                            >\n                              <CButton\n                                size=\"sm\"\n                                color=\"info\"\n                                to={`/listSupplier/editSupplier/${item.id}`}\n                                style={{ backgroundColor: \"#178d88\" }}\n                              >\n                                Edit\n                              </CButton>\n                              <CButton\n                                size=\"sm\"\n                                color=\"danger\"\n                                className=\"ml-1\"\n                                onClick={() => this.deleteSupplier(item)}\n                                style={{ backgroundColor: \"#e2602c\" }}\n                              >\n                                Delete\n                              </CButton>\n                            </td>\n                          );\n                        },\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/DaftarBiji.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/ListBatch.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/helpers/history.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/TransactionExplorer/ListTransaction.js",["1137","1138","1139","1140","1141"],"import { Fragment, React, useState, useEffect, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\n\nexport default class ListTransaction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListTransactionHash().then((response) => {\n      this.setState({\n        content: response.data,\n      });\n    });\n  }\n\n  render() {\n    const scopedSlots = {\n      t_hash: (item) => (\n        <td>\n          <a\n            href={\"https://ropsten.etherscan.io/tx/\" + item.t_hash}\n            target=\"_blank\"\n          >\n            {item.t_hash}\n          </a>\n        </td>\n      ),\n    };\n    const fields = [\n      { key: \"t_hash\", label: \"Transaction Hash\", _style: { width: \"20%\" } },\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={12} md={12} lg={12} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>List Transaction</h4>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content.transaction_explorer}\n                      fields={fields}\n                      itemsPerPage={10}\n                      pagination\n                      scopedSlots={scopedSlots}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/HalamanUtama/GetID.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/DaftarProses.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ListProduk.js",["1142","1143","1144","1145","1146","1147","1148","1149"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\n\nexport default class ListProduk extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListProduct().then((response) => {\n      this.setState({\n        content: response.data.product,\n      });\n    });\n  }\n\n  render() {\n    const scopedSlots = {\n      name: (item) => (\n        <td>\n          {this.state.content.map((value) => {\n            if (value.id == item.id) {\n              return value.product.name;\n            }\n          })}\n        </td>\n      ),\n      description: (item) => (\n        <td>\n          {this.state.content.map((value) => {\n            if (value.id == item.id) {\n              return value.product.description;\n            }\n          })}\n        </td>\n      ),\n      price: (item) => (\n        <td>\n          {this.state.content.map((value) => {\n            if (value.id == item.id) {\n              return value.product.price;\n            }\n          })}\n        </td>\n      ),\n      sku: (item) => (\n        <td>\n          {this.state.content.map((value) => {\n            if (value.id == item.id) {\n              return value.product.sku;\n            }\n          })}\n        </td>\n      ),\n      show_details: (item) => (\n        <td\n          className=\"py-2\"\n          style={{\n            textAlign: \"center\",\n            verticalAlign: \"center\",\n          }}\n        >\n          <CButton\n            size=\"sm\"\n            color=\"info\"\n            to={`/listProduk/detailProduk/${item.id}`}\n            style={{ backgroundColor: \"#178d88\" }}\n          >\n            Show\n          </CButton>\n        </td>\n      ),\n    };\n    const fields = [\n      { key: \"name\", label: \"Name\", _style: { width: \"20%\" } },\n      { key: \"description\", label: \"Description\", _style: { width: \"20%\" } },\n      { key: \"price\", label: \"Price\", _style: { width: \"20%\" } },\n      { key: \"sku\", label: \"SKU\", _style: { width: \"20%\" } },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"14%\" },\n        filter: false,\n      },\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>Product Data</h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/listProduk/daftar\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content}\n                      fields={fields}\n                      itemsPerPage={10}\n                      pagination\n                      scopedSlots={scopedSlots}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/DaftarSupplier.js",["1150","1151","1152"],"import { Fragment, React, useState } from \"react\";\nimport DaftarSupplierForm from \"./DaftarSupplierForm\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\n\nconst DaftarSupplier = () => {\n  const [files, imageFile] = useState(\"\");\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const onFileChange = (file) => {\n    imageFile(file);\n  };\n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (\n      values.nama_supplier != null &&\n      values.lokasi_supplier != null &&\n      values.nama_petani != null &&\n      lat != \"\" &&\n      long != \"\" &&\n      values.estimatedProduction != null &&\n      values.elevation != null &&\n      values.unit != null &&\n      files != \"\"\n    ) {\n      formData.append(\"nama_supplier\", values.nama_supplier);\n      formData.append(\"lokasi_supplier\", values.lokasi_supplier);\n      formData.append(\"nama_petani\", values.nama_petani);\n      formData.append(\"latitude\", lat);\n      formData.append(\"longitude\", long);\n      formData.append(\"link_maps\", values.linkMaps);\n      formData.append(\"estimatedProduction\", values.estimatedProduction);\n      formData.append(\"elevation\", values.elevation);\n      formData.append(\"unit\", values.unit);\n\n      formData.append(\"files\", files);\n      formData.append(\"fileName\", files.name);\n\n      UserService.addSupplier(formData).then(showResults(\"Data has been added\"));\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <DaftarSupplierForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        onSelectLat={onLatChange}\n        onSelectLong={onLongChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default DaftarSupplier;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatch.js",["1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163"],"import { Fragment, useState } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditBatchForm from \"./EditBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport { useParams } from \"react-router\";\n\nconst EditBatch = () => {\n  const { id } = useParams();\n\n  const [imageFile, setImage] = useState(\"\");\n  const [certificateFile, setCertificate] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (values.biji_id != undefined) {\n      formData.append(\"biji_id\", values.biji_id);\n    }\n    if (values.jenis_id != undefined) {\n      formData.append(\"jenis_id\", values.jenis_id);\n    }\n    if (values.proses_id != undefined) {\n      formData.append(\"proses_id\", values.proses_id);\n    }\n    if (values.supplier_id != undefined) {\n      formData.append(\"supplier_id\", values.supplier_id);\n    }\n    if (values.tgl_panen != undefined) {\n      formData.append(\"tgl_panen\", values.tgl_panen);\n    }\n    if (values.volume != undefined) {\n      formData.append(\"volume\", values.volume);\n    }\n\n    //Form Baru\n    if (values.moisture != undefined) {\n      formData.append(\"moisture\", values.moisture);\n    }\n    if (values.videoCulture != undefined) {\n      formData.append(\"video_culture\", values.videoCulture);\n    }\n    if (values.storytelling != undefined) {\n      formData.append(\"storytelling\", values.storytelling);\n    }\n\n    if (imageFile != \"\") {\n      formData.append(\"files[]\", imageFile);\n      // for (let i = 0; i < imageFile.length; i++) {\n      //   formData.append(\"files[]\", imageFile[i]);\n      // }\n    }\n    if (certificateFile != \"\") {\n      formData.append(\"certificate[]\", certificateFile);\n      // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificate[]\", certificateFile[i]);\n      // }\n    }\n\n    UserService.editBatch(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  const onFileChange = (file) => {\n    setImage(file);\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificate(file);\n  };\n\n  return (\n    <Fragment>\n      <EditBatchForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        batchID={id}\n        onSelectCertificate={onCertificateChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default EditBatch;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/EditProses.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/actions/auth.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/ListBiji.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/DaftarProduk.js",["1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"import { Fragment, useState, useEffect } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport DaftarProdukForm from \"./DaftarProdukForm\";\nimport UserService from \"../../../services/user.service\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../abi/abi\";\n\nimport QRcode from \"qrcode.react\";\nimport { sha256 } from \"js-sha256\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst DaftarProduk = (props) => {\n  const provider = new HDWalletProvider(\n    process.env.REACT_APP_MNEMONIC,\n    \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n  );\n  const web3 = new Web3(provider);\n  provider.engine.stop();\n\n  // const contractAddress = \"0xEb8eF83cB027D9d3594b77eCd05051E138741e5B\";\n  const contractAddress = \"0x061Bca64852219aA03a9615ef66Dc301e075F6d9\";\n\n  const code = props.code;\n\n  const [files, imageFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState(\"\");\n\n  const [currencyID, setCurrencyID] = useState([]);\n\n  const onFileChange = (file) => {\n    imageFile(file);\n  };\n\n  const onFileChangeGambar = (file) => {\n    imageFileGambar(file);\n  };\n\n  const getWallet = async () => {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        alert(\"An error occurred: \" + err);\n      } else if (accounts.length == 0) {\n        alert(\"User is not logged in to MetaMask\");\n      } else {\n        setAccount(accounts[0]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getWallet();\n    getDefaultCurrency();\n  }, []);\n\n  const getDefaultCurrency = () => {\n    UserService.getAddDetailProduct().then((response) => {\n      response.data.currencies.map((value) => {\n        if (value.code == response.data.defaultCurrencies) {\n          setCurrencyID(value.id);\n        }\n      });\n    });\n  };\n\n  const [qr, setQr] = useState(\"test\");\n  const handleChange = (value) => {\n    setQr(value);\n  };\n\n  const downloadQR = (product_id) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + product_id + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const handleSubmit = async (values) => {\n    if (\n      values.roastingMenu &&\n      values.batch_id &&\n      values.name &&\n      values.productGroup &&\n      values.category &&\n      values.subcategory &&\n      values.description &&\n      values.short_description &&\n      values.price &&\n      values.unit &&\n      values.stock &&\n      values.sku &&\n      values.weight &&\n      values.tgl_produksi &&\n      files != \"\" &&\n      filesGambar != \"\"\n    ) {\n      const formData = new FormData();\n\n      if (values.roastingMenu == \"Single\") {\n        formData.append(\"batch_id\", values.batch_id);\n      }\n\n      if (values.roastingMenu == \"Blended\") {\n        formData.append(\"beans\", JSON.stringify(values.beans));\n      }\n\n      formData.append(\"name\", values.name);\n      formData.append(\"product_group\", values.productGroup);\n      formData.append(\"category\", values.category);\n      formData.append(\"subcategory\", values.subcategory);\n      formData.append(\"description\", values.description);\n      formData.append(\"short_description\", values.short_description);\n      formData.append(\"price\", values.price);\n\n      if (values.currency == undefined) {\n        formData.append(\"currency\", currencyID);\n      } else {\n        formData.append(\"currency\", values.currency);\n      }\n\n      formData.append(\"unit\", values.unit);\n      formData.append(\"stock\", values.stock);\n      formData.append(\"sku\", values.sku);\n      // formData.append(\"vendor_sku\", values.vendor_sku);\n      formData.append(\"weight\", values.weight);\n      formData.append(\"tgl_produksi\", values.tgl_produksi);\n\n      for (let i = 0; i < files.length; i++) {\n        console.log(\"gambar files i\", files[i]);\n        formData.append(\"files[]\", files[i]);\n      }\n\n      formData.append(\"files_gambar\", filesGambar);\n      console.log(\"gambar gambar\", filesGambar);\n      formData.append(\"fileName_gambar\", filesGambar.name);\n\n      UserService.addProduct(formData).then(async (response) => {\n        const product_id = response.data.product.id;\n        // const linkQRCode = \"http://127.0.0.1:3000/detailProduk/\" + product_id;\n        const linkQRCode =\n          process.env.REACT_APP_PROD_URL +\n          \"detailProduk/\" +\n          code +\n          \"/\" +\n          product_id;\n        await handleChange(linkQRCode);\n\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise((resolve) =>\n          canvas.toBlob(resolve, \"image/png\")\n        );\n\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + product_id + \".png\");\n        console.log(\"gambar qr\", imageBlob, \"\" + product_id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + product_id + \".png\");\n\n        downloadQR(product_id);\n\n        UserService.pushQRCodeImage(product_id, formDataQR);\n\n        UserService.getDetailProduk(product_id).then(async (response) => {\n          console.log(response.data);\n          var object = response.data;\n          // formData.forEach(function (value, key) {\n          //   object[key] = value;\n          // });\n          var json = JSON.stringify(object);\n          // console.log(json);\n          console.log(sha256(json));\n          // console.log(contractAddress);\n          console.log(account);\n\n          let date_ob = new Date();\n          let date = (\"0\" + date_ob.getDate()).slice(-2);\n          let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n          let year = date_ob.getFullYear();\n          let hours = date_ob.getHours();\n          let minutes = date_ob.getMinutes();\n          let seconds = date_ob.getSeconds();\n          console.log(year + \"-\" + month + \"-\" + date);\n\n          // Blockchain Function\n          const storageContract = new web3.eth.Contract(\n            AddProduct,\n            contractAddress\n          );\n          const gas = await storageContract.methods\n          .tambahProduct(\n            sha256(json),\n            year + \"-\" + month + \"-\" + date\n          )\n          .estimateGas();\n\n          var post = await storageContract.methods\n            .tambahProduct(sha256(json), year + \"-\" + month + \"-\" + date)\n            .send(\n              {\n                from: account,\n                // gas,\n              },\n              (error, transactionHash) => {\n                const formData = new FormData();\n                formData.append(\"product_id\", product_id);\n                formData.append(\"t_hash\", transactionHash);\n\n                UserService.addTransactionHash(formData);\n                console.log(transactionHash);\n              }\n            );\n          console.log(post);          \n        });\n\n        showResults(\"Data has been added\");\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <DaftarProdukForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        onSelectImageGambar={onFileChangeGambar}\n      />\n      <div style={{ visibility: \"hidden\" }}>\n        {qr ? (\n          <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n        ) : (\n          <p>No QR code preview</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\nexport default DaftarProduk;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ShowProduk.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/reducers/index.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/actions/types.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/EditVarietasForm.js",["1179"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditVarietasForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaVarietas, setNama] = useState(\"\");\n  const [deskripsiVarietas, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.jenisID;\n    UserService.getDetailJenis(id).then((response) => {\n      setNama(response.data.jenis.nama_jenis);\n      setDeskripsi(response.data.jenis.deskripsi_jenis);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Variety</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaJenis\">Variety Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_jenis\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaVarietas}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiJenis\">\n                    Variety Description\n                  </CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_jenis\"\n                    component=\"textarea\"\n                    placeholder={deskripsiVarietas}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editVarietas\", // a unique identifier for this form\n})(EditVarietasForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/EditBijiForm.js",["1180"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditBijiForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaBiji, setNama] = useState(\"\");\n  const [deskripsiBiji, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.bijiID;\n    UserService.detailBiji(id).then((response) => {\n      setNama(response.data.biji.nama_biji);\n      setDeskripsi(response.data.biji.deskripsi_biji);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Beans</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaBiji\">Beans Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_biji\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaBiji}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiBiji\">Beans Description</CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_biji\"\n                    component=\"textarea\"\n                    placeholder={deskripsiBiji}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editBiji\", // a unique identifier for this form\n})(EditBijiForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/EditUnitForm.js",["1181"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditUnitForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaUnit, setNama] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.unitID;\n    UserService.detailUnit(id).then((response) => {\n      setNama(response.data.unit.nama_unit);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Unit</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaJenis\">Unit Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_unit\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaUnit}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editUnit\", // a unique identifier for this form\n})(EditUnitForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Unit/DaftarUnitForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/EditSupplierForm.js",["1182","1183","1184","1185","1186","1187"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\nimport MyGoogleMap from \"./Google Maps/MyGoogleMap\";\n\nconst EditSupplierForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImage(file);\n  };\n\n  const [namaSupplier, setNama] = useState(\"\");\n  const [lokasiSupplier, setLokasi] = useState(\"\");\n  const [namaPetani, setNamaPetani] = useState(\"\");\n  const [estimatedProduction, setEstimatedProduction] = useState(\"\");\n  const [elevation, setElevation] = useState(\"\");\n  const [supplierUnit, setSupplierUnit] = useState(\"\");\n\n  const [long, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [linkMaps, setLinkMaps] = useState(\"\");\n  const [unit, setUnit] = useState([]);\n\n  const markerHandle = (lat, long) => {\n    setLong(long);\n    setLat(lat);\n    props.onSelectLat(lat);\n    props.onSelectLong(long);\n  };\n\n  useEffect(() => {\n    getData();\n    getUnit();\n  }, []);\n\n  const getData = () => {\n    let id = props.supplierID;\n    UserService.getDetailSupplier(id).then((response) => {\n      setNama(response.data.supplier.nama_supplier);\n      setLokasi(response.data.supplier.lokasi_supplier);\n      setNamaPetani(response.data.supplier.nama_petani);\n      setEstimatedProduction(response.data.supplier.estimated_production);\n      setLat(response.data.supplier.lat);\n      setLong(response.data.supplier.long);\n      setLinkMaps(response.data.supplier.link_maps);\n      setSupplierUnit(response.data.unit.nama_unit);\n      setElevation(response.data.supplier.elevation);\n    });\n  };\n\n  const getUnit = () => {\n    UserService.getUnitDetail().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          disabled\n          defaultValue={lat}\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          disabled\n          defaultValue={long}\n        />\n      </div>\n    );\n  };\n\n  let googleMap;\n  if (lat != NaN && long != NaN) {\n    googleMap = (\n      <MyGoogleMap\n        onMarkerHandle={markerHandle}\n        latProps={lat}\n        longProps={long}\n      />\n    );\n  } else {\n    googleMap = <MyGoogleMap onMarkerHandle={markerHandle} />;\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Coffee Origin</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listSupplier\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaSupplier\">Processor Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaSupplier}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Processor Origin</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"lokasi_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={lokasiSupplier}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-kebun\">Farm</CLabel>\n                  <div style={{width: \"100%\", height: \"500px\"}}>{googleMap}</div>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                    Latitude\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                    Longitute\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLat}\n                      type=\"text\"\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLong}\n                      type=\"text\"\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Link Maps (optional)</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"linkMaps\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={linkMaps}\n                    // onChange={GetLinkLokasi}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-elevation\">\n                    Elevation\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-unit\">\n                    Unit\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"elevation\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder={elevation}\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"unit\"\n                      component=\"select\"\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        {supplierUnit}\n                      </option>\n                      {unit &&\n                        unit.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_unit}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaPetani\">Farmer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_petani\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaPetani}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-estimatedProduction\">\n                    Estimated Production\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"estimatedProduction\"\n                      component=\"input\"\n                      type=\"number\"\n                      placeholder={estimatedProduction}\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Ton</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-gambarPetani\">\n                    Farmer Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"gambar_petani\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editSupplier\", // a unique identifier for this form\n})(EditSupplierForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Varietas/DaftarVarietasForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatchForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Biji/DaftarBijiForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/ShowProdukForm.js",["1188","1189","1190","1191","1192","1193","1194","1195"],"import { React, useState, useEffect, Fragment } from \"react\";\nimport { Field, reduxForm, FieldArray } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CRow,\n  CCol,\n  CImg,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst ShowProdukForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [batch, setBatch] = useState([]);\n  // const [category, setCategory] = useState([]);\n  // const [productGroup, setProductGroup] = useState([]);\n  // const [subcategory, setSubCategory] = useState([]);\n  const [batchID, setBatchID] = useState(\"\");\n  const [unit, setUnit] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n\n  const [imageProducts, setImageProducts] = useState([]);\n  const [product, setProduct] = useState([]);\n  const [productVendor, setProductVendor] = useState([]);\n  const [blendedBeans, setBlendedBeans] = useState([]);\n\n  useEffect(() => {\n    getData();\n    getBatch();\n    getUnit();\n  }, []);\n\n  const getData = () => {\n    let id = props.productID;\n    UserService.getDetailProduct(id).then((response) => {\n      setProductVendor(response.data.product);\n      UserService.getDetailProduk(response.data.product.product_id).then(\n        (response) => {\n          if (response.data.product[0].batch != null) {\n            setBatchID(response.data.product[0].batch.batch_id);\n          }\n          setProduct(response.data.product[0]);\n          setImageProducts(response.data.imageProducts);\n          setBlendedBeans(response.data.blendedBeans);\n        }\n      );\n    });\n  };\n\n  const getBatch = () => {\n    UserService.getAddDetailProduct().then((response) => {\n      setCurrencies(response.data.currencies);\n      setBatch(response.data.batch);\n      // setCategory(response.data.category);\n      // setProductGroup(response.data.product_group_rules);\n    });\n  };\n\n  const getUnit = () => {\n    UserService.getUnitDetail().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  const onChangeCategory = (e) => {\n    // UserService.getSubCategory(e.target.value).then((response) => {\n    //   setSubCategory(response.data.subcategory);\n    // });\n  };\n\n  const renderCarouselImage = () => {\n    let menuItems = [];\n    for (let i = 0; i < imageProducts.length; i++) {\n      menuItems.push(\n        <CCarouselItem>\n          <CImg\n            src={MARKETPLACE_URL + imageProducts[i].images}\n            className=\"d-block w-100\"\n          />\n        </CCarouselItem>\n      );\n    }\n    return menuItems;\n  };\n\n  const renderBeans = () => (\n    <ul\n      style={{\n        listStyle: \"none\",\n        marginLeft: \"0px\",\n        padding: \"0px\",\n      }}\n    >\n      {blendedBeans.map((beans, index) => {\n        return (\n          <li key={index}>\n            <h4 style={{ marginTop: \"20px\" }}>Bean #{index + 1}</h4>\n            <Fragment>\n              <CFormGroup row>\n                <CLabel col xs=\"5\" htmlFor=\"selectBeanMultiple\">\n                  Batch ID\n                </CLabel>\n                <CLabel col xs=\"5\" htmlFor=\"persentase\">\n                  Persentase\n                </CLabel>\n                <CCol xs=\"5\">\n                  <Field\n                    className=\"textInput grosir\"\n                    name={`${index}.selectBean`}\n                    component=\"select\"\n                    disabled\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {batch.map((value2) => {\n                        if (value2.id == beans.batch_id) {\n                          return value2.batch_id;\n                        }\n                      })}\n                    </option>\n                  </Field>\n                </CCol>\n                <CCol xs=\"5\">\n                  <Field\n                    className=\"textInput grosir\"\n                    name={`${index}.persentase`}\n                    component=\"input\"\n                    type=\"number\"\n                    placeholder={beans.persentase}\n                    disabled\n                  />\n                </CCol>\n                <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                  <span>%</span>\n                </CCol>\n              </CFormGroup>\n            </Fragment>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Product Detail</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listProduk\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-productID\">\n                    Product ID <small>*</small>\n                  </CLabel>\n                  <input\n                    className=\"textInput grosir\"\n                    name=\"productID\"\n                    type=\"text\"\n                    disabled\n                    defaultValue={product.id}\n                  />\n                </CFormGroup>\n                {(() => {\n                  if (product.batch_id != null) {\n                    return (\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-batch_id\">\n                          ID Batch <small>*</small>\n                        </CLabel>\n                        <input\n                          className=\"textInput grosir\"\n                          name=\"productID\"\n                          type=\"text\"\n                          disabled\n                          defaultValue={batchID}\n                        />\n                      </CFormGroup>\n                    );\n                  } else {\n                    return <FieldArray name=\"beans\" component={renderBeans} />;\n                  }\n                })()}\n\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-name\">\n                    Product Name <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"name\"\n                    component=\"input\"\n                    type=\"text\"\n                    disabled\n                    placeholder={product.name}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-productGroup\">\n                    Product Group <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"productGroup\"\n                    component=\"select\"\n                    disabled\n                  >\n                    <option value=\"-----\">----</option>\n                    {/* {productGroup &&\n                      productGroup.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.rule_name}\n                          </option>\n                        );\n                      })} */}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-category\">\n                    Category <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"category\"\n                    component=\"select\"\n                    onChange={onChangeCategory}\n                    disabled\n                  >\n                    <option value=\"-----\">----</option>\n                    {/* {category &&\n                      category.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        );\n                      })} */}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-subcategory\">\n                    Sub Category <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"subcategory\"\n                    component=\"select\"\n                    disabled\n                  >\n                    <option value=\"-----\">----</option>\n                    {/* {subcategory &&\n                      subcategory.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.name}\n                          </option>\n                        );\n                      })} */}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-description\">\n                    Description <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"description\"\n                    component=\"textarea\"\n                    placeholder={product.description}\n                    disabled\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-short_description\">\n                    Short Description <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"short_description\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={product.short_description}\n                    disabled\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-price\">\n                    Price <small>*</small>\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-currency\">\n                    Currency\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"price\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder={productVendor.price}\n                      disabled\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"currency\"\n                      component=\"select\"\n                      disabled\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        {currencies.map((value) => {\n                          if (value.id == product.currency) {\n                            return value.name + \" - \" + value.code;\n                          }\n                        })}\n                      </option>\n                    </Field>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-unit\">\n                    Stock <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"stock\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={productVendor.stock}\n                    disabled\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-unit\">\n                    Unit <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"unit\"\n                    component=\"select\"\n                    disabled\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {unit.map((value) => {\n                        if (value.id == product.unit) {\n                          return value.nama_unit;\n                        }\n                      })}\n                    </option>\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-sku\">SKU</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"sku\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={product.sku}\n                    disabled\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-weight\">\n                    Weight <small>*</small>\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"weight\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder={product.weight}\n                      disabled\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Kg</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-tgl_produksi\">\n                    Production Date <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"tgl_produksi\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={product.tgl_produksi}\n                    disabled\n                  />\n                </CFormGroup>\n                <CRow>\n                  <CCol xs=\"12\" lg=\"6\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {renderCarouselImage()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" lg=\"6\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            <CCarouselItem>\n                              <CImg\n                                src={MARKETPLACE_URL + product.thumbnail}\n                                className=\"d-block w-100\"\n                              />\n                            </CCarouselItem>\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"showProduct\", // a unique identifier for this form\n})(ShowProdukForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/EditProsesForm.js",["1196"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditProsesForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaProses, setNama] = useState(\"\");\n  const [deskripsiProses, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.prosesID;\n    UserService.detailProses(id).then((response) => {\n      setNama(response.data.proses.nama_proses);\n      setDeskripsi(response.data.proses.deskripsi_proses);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Process</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaProses\">Process Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_proses\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaProses}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiProses\">\n                    Process Description\n                  </CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_proses\"\n                    component=\"textarea\"\n                    placeholder={deskripsiProses}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editProses\", // a unique identifier for this form\n})(EditProsesForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Produk/DaftarProdukForm.js",["1197","1198"],"import { React, useState, useEffect, Fragment } from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\n\nconst DaftarProdukForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [batch, setBatch] = useState([]);\n  const [category, setCategory] = useState([]);\n  const [productGroup, setProductGroup] = useState([]);\n  const [subcategory, setSubCategory] = useState([]);\n  const [unit, setUnit] = useState([]);\n  const [currencies, setCurrencies] = useState([]);\n  const [defaultCurrency, setDefaultCurrency] = useState(\"\");\n\n  const [selectedRoastingMenu, setSelectedRoastingMenu] = useState(\"-----\");\n\n  const getBatch = () => {\n    UserService.getAddDetailProduct().then(\n      (response) => {\n        setCurrencies(response.data.currencies);\n        setBatch(response.data.batch);\n        setCategory(response.data.category);\n        setProductGroup(response.data.product_group_rules);\n        setDefaultCurrency(response.data.defaultCurrencies);\n      },\n      (error) => {}\n    );\n  };\n\n  const getUnit = () => {\n    UserService.getUnitDetail().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  useEffect(() => {\n    getBatch();\n    getUnit();\n  }, []);\n\n  const onFileChange = (e) => {\n    const file = e.target.files;\n    props.onSelectImage(file);\n  };\n\n  const onFileChangeGambar = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImageGambar(file);\n  };\n\n  const onChangeCategory = (e) => {\n    UserService.getSubCategory(e.target.value).then((response) => {\n      setSubCategory(response.data.subcategory);\n    });\n  };\n\n  const handleChange = (e) => {\n    setSelectedRoastingMenu(e.target.value);\n  };\n\n  const renderBeans = ({ fields, meta: { error, submitFailed } }) => (\n    <ul style={{ listStyle: \"none\", marginLeft: \"0px\", padding: \"0px\" }}>\n      {fields.map((beans, index) => (\n        <li key={index} style={{ marginTop: \"40px\" }}>\n          <CButton\n            type=\"button\"\n            size=\"sm\"\n            color=\"dark\"\n            style={{\n              backgroundColor: \"#00c4cc\",\n              float: \"right\",\n              width: \"50px\",\n            }}\n            onClick={() => fields.remove(index)}\n          >\n            <span style={{ color: \"white\" }}>X</span>\n          </CButton>\n          <h4 style={{ marginTop: \"30px\" }}>Bean #{index + 1}</h4>\n          <Fragment>\n            <CFormGroup row>\n              <CLabel col xs=\"5\" htmlFor=\"selectBeanMultiple\">\n                Select Batch\n              </CLabel>\n              <CLabel col xs=\"5\" htmlFor=\"persentase\">\n                Persentase\n              </CLabel>\n              <CCol xs=\"5\">\n                <Field\n                  className=\"textInput grosir\"\n                  name={`${beans}.selectBean`}\n                  component=\"select\"\n                >\n                  <option value=\"\" selected disabled hidden>\n                    ----\n                  </option>\n                  {batch &&\n                    batch.map((value) => {\n                      return (\n                        <option key={value.id} value={value.id}>\n                          {value.batch_id}\n                        </option>\n                      );\n                    })}\n                </Field>\n              </CCol>\n              <CCol xs=\"5\">\n                <Field\n                  className=\"textInput grosir\"\n                  name={`${beans}.persentase`}\n                  component=\"input\"\n                  type=\"number\"\n                />\n              </CCol>\n              <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                <span>%</span>\n              </CCol>\n            </CFormGroup>\n          </Fragment>\n        </li>\n      ))}\n      <li>\n        <CButton\n          type=\"button\"\n          size=\"sm\"\n          color=\"primary\"\n          style={{ backgroundColor: \"#178d88\" }}\n          onClick={() => fields.push({})}\n        >\n          Add Bean\n        </CButton>\n        {submitFailed && error && <span>{error}</span>}\n      </li>\n    </ul>\n  );\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard>\n              <CCardHeader>\n                <CRow>\n                  <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                    <h4 style={{ margin: \"auto\" }}>Add Product</h4>\n                  </CCol>\n                  <CCol>\n                    <CButton\n                      block\n                      color=\"dark\"\n                      to=\"/listProduk\"\n                      style={{ backgroundColor: \"#00c4cc\" }}\n                    >\n                      <span style={{ color: \"white\" }}>X</span>\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CCardHeader>\n              <CCardBody>\n                <CForm action=\"\" method=\"post\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-roastingMenu\">Green Beans</CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      id=\"roastingMenu\"\n                      name=\"roastingMenu\"\n                      component=\"select\"\n                      value={selectedRoastingMenu}\n                      onChange={handleChange}\n                    >\n                      <option value=\"-----\">----</option>\n                      <option value=\"Single\">Single Origin</option>\n                      <option value=\"Blended\">Blended</option>\n                    </Field>\n                  </CFormGroup>\n\n                  {selectedRoastingMenu === \"Single\" && (\n                    <Fragment>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-batch_id\">\n                          ID Batch <small>*</small>\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"batch_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"-----\">----</option>\n                          {batch &&\n                            batch.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.batch_id}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                    </Fragment>\n                  )}\n\n                  {selectedRoastingMenu === \"Blended\" && (\n                    <FieldArray name=\"beans\" component={renderBeans} />\n                  )}\n\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-name\">\n                      Product Name <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"name\"\n                      component=\"input\"\n                      type=\"text\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-productGroup\">\n                      Product Group <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"productGroup\"\n                      component=\"select\"\n                    >\n                      <option value=\"-----\">----</option>\n                      {productGroup &&\n                        productGroup.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.rule_name}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-category\">\n                      Category <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"category\"\n                      component=\"select\"\n                      onChange={onChangeCategory}\n                    >\n                      <option value=\"-----\">----</option>\n                      {category &&\n                        category.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.name}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-subcategory\">\n                      Sub Category <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"subcategory\"\n                      component=\"select\"\n                    >\n                      <option value=\"-----\">----</option>\n                      {subcategory &&\n                        subcategory.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.name}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-description\">\n                      Description <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textAreaInput grosir\"\n                      name=\"description\"\n                      component=\"textarea\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-short_description\">\n                      Short Description <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"short_description\"\n                      component=\"input\"\n                      type=\"text\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CLabel col xs=\"6\" htmlFor=\"nf-price\">\n                      Price <small>*</small>\n                    </CLabel>\n                    <CLabel col xs=\"6\" htmlFor=\"nf-currency\">\n                      Currency\n                    </CLabel>\n                    <CCol xs=\"6\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"price\"\n                        component=\"input\"\n                        type=\"text\"\n                      />\n                    </CCol>\n                    <CCol xs=\"6\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"currency\"\n                        component=\"select\"\n                      >\n                        <option value=\"\" selected disabled hidden>\n                          {currencies.map((value) => {\n                            if (value.code == defaultCurrency) {\n                              return value.name + \" - \" + value.code;\n                            }\n                          })}\n                        </option>\n                        {currencies &&\n                          currencies.map((value) => {\n                            return (\n                              <option key={value.id} value={value.id}>\n                                {value.name} - {value.code}\n                              </option>\n                            );\n                          })}\n                      </Field>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Stock <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"stock\"\n                      component=\"input\"\n                      type=\"text\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Unit <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"unit\"\n                      component=\"select\"\n                    >\n                      <option value=\"-----\">----</option>\n                      {unit &&\n                        unit.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_unit}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-sku\">SKU</CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"sku\"\n                      component=\"input\"\n                      type=\"text\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CLabel col xs=\"12\" htmlFor=\"nf-weight\">\n                      Weight <small>*</small>\n                    </CLabel>\n                    <CCol xs=\"10\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"weight\"\n                        component=\"input\"\n                        type=\"text\"\n                      />\n                    </CCol>\n                    <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                      <span>Kg</span>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-tgl_produksi\">\n                      Production Date <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"tgl_produksi\"\n                      component=\"input\"\n                      type=\"date\"\n                    />\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CLabel col xs=\"12\" htmlFor=\"file-gambar_proses\">\n                      Process Image <small>*</small>\n                    </CLabel>\n                    <CCol xs=\"12\">\n                      <CInputFile\n                        id=\"file-input\"\n                        name=\"gambar_proses\"\n                        type=\"file\"\n                        onChange={onFileChange}\n                      />\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CLabel col xs=\"12\" htmlFor=\"file-files_gambar\">\n                      Product Image <small>*</small>\n                    </CLabel>\n                    <CCol xs=\"12\">\n                      <CInputFile\n                        id=\"file-input\"\n                        name=\"files_gambar\"\n                        type=\"file\"\n                        onChange={onFileChangeGambar}\n                      />\n                    </CCol>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  style={{ backgroundColor: \"#178d88\" }}\n                >\n                  Submit\n                </CButton>{\" \"}\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={reset}\n                  style={{ backgroundColor: \"#e2602c\" }}\n                >\n                  Reset\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </div>\n        </main>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarProduk\", // a unique identifier for this form\n})(DaftarProdukForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatchForm.js",["1199","1200","1201"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CInputFile,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\n\nconst EditBatchForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [bijiName, setBijiName] = useState(\"\");\n  const [varietasName, setVarietasName] = useState(\"\");\n  const [prosesName, setProsesName] = useState(\"\");\n  const [supplierName, setSupplierName] = useState(\"\");\n  const [volume, setVolume] = useState(\"\");\n\n  //Form Baru\n  const [moisture, setMoisture] = useState(\"\");\n  const [videoCulture, setVideoCulture] = useState(\"\");\n  const [storyTelling, setStorytelling] = useState(\"\");\n\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    UserService.getAddDetail().then((response) => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n\n    let id = props.batchID;\n    UserService.getDetailBatch(id).then((response) => {\n      if (response.data.batch[0].biji != null) {\n        setBijiName(response.data.batch[0].biji.nama_biji);\n      }\n      if (response.data.batch[0].jenis != null) {\n        setVarietasName(response.data.batch[0].jenis.nama_jenis);\n      }\n      if (response.data.batch[0].proses != null) {\n        setProsesName(response.data.batch[0].proses.nama_proses);\n      }\n      if (response.data.batch[0].supplier != null) {\n        setSupplierName(response.data.batch[0].supplier.lokasi_supplier);\n      }\n      setVolume(response.data.batch[0].volume);\n\n      //Form Baru\n      setMoisture(response.data.batch[0].moisture);\n      setVideoCulture(response.data.batch[0].video_culture);\n      setStorytelling(response.data.batch[0].storytelling);\n    });\n  };\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImage(file);\n  };\n\n  const onCertificateChanges = (e) => {\n    const file = e.target.files[0];\n    props.onSelectCertificate(file);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Batch</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBatch\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-pilihJenis\">Select Beans</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"biji_id\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {bijiName}\n                    </option>\n                    {biji &&\n                      biji.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.nama_biji}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-pilihSupplier\">Select Variety</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"jenis_id\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {varietasName}\n                    </option>\n                    {jenis &&\n                      jenis.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.nama_jenis}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-pilihSupplier\">Select Process</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"proses_id\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {prosesName}\n                    </option>\n                    {proses &&\n                      proses.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.nama_proses}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-pilihSupplier\">\n                    Select Coffee Origin\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"supplier_id\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {supplierName}\n                    </option>\n                    {supplier &&\n                      supplier.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.lokasi_supplier}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-moisture\">Moisture</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"moisture\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={moisture}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-volume\">\n                    Volume\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"volume\"\n                      component=\"input\"\n                      type=\"number\"\n                      placeholder={volume}\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>kg</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-gambarPanen\">\n                    Harvest Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"gambar\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-videoCulture\">Video Culture</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"videoCulture\"\n                    placeholder=\"https://youtube.com/\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={videoCulture}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-tanggalPanen\">Harvest Date</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"tgl_panen\"\n                    component=\"input\"\n                    type=\"month\"\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-certificate\">\n                    Certificate Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"certificate\"\n                      type=\"file\"\n                      onChange={onCertificateChanges}\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-storytelling\">Storytelling</CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"storytelling\"\n                    component=\"textarea\"\n                    placeholder={storyTelling}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editBatch\", // a unique identifier for this form\n})(EditBatchForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/Proses/DaftarProsesForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/HalamanUtama/HalamanUtama.js",["1202","1203","1204","1205","1206","1207","1208","1209","1210","1211","1212"],"import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      product_id: 0,\n      batch_id: 0,\n      code: \"\",\n      batch: [],\n      product: null,\n      harvestImage: null,\n      // currencies: [],\n      blendedBeans: null,\n      certificateBatch: [],\n\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 11,\n      address: \"\",\n      lat: \"\",\n      lng: \"\",\n      isOpen: false,\n    };\n  }\n\n  async componentDidMount() {\n    let id = this.props.productID;\n    this.setState({\n      product_id: id,\n    });\n\n    let code = this.props.code;\n    this.setState({\n      code: code,\n    });\n\n    UserService.getProdukGuest(code, id).then((response) => {\n      if (response.data.product != null) {\n        this.setState({\n          batch: response.data.batch[0],\n          product: response.data.product[0],\n          blendedBeans: response.data.blendedBeans,\n          lat: response.data.batch[0].supplier.lat,\n          lng: response.data.batch[0].supplier.long,\n        });\n\n        this.setState({\n          harvestImage: [],\n        });\n\n        if (response.data.blendedBeans.length > 1) {\n          response.data.blendedBeans.map((value) => {\n            UserService.getDetailBatchGuest(code, value.batch_id).then(\n              (response) => {\n                this.setState((prevState) => ({\n                  harvestImage: [\n                    ...prevState.harvestImage,\n                    response.data.imageBatch,\n                  ],\n                  certificateBatch: [\n                    ...prevState.certificateBatch,\n                    response.data.certificateBatch,\n                  ],\n                }));\n              }\n            );\n          });\n        } else {\n          UserService.getDetailBatchGuest(\n            code,\n            response.data.product[0].batch_id\n          ).then((response) => {\n            this.setState({\n              harvestImage: response.data.imageBatch,\n              certificateBatch: response.data.certificateBatch,\n            });\n          });\n        }\n      }\n    });\n\n    // UserService.getAddDetailProductGuest(code).then(\n    //   (response) => {\n    //     this.setState({\n    //       currencies: response.data.currencies,\n    //     });\n    //   }\n    // );\n  }\n  \n  renderMyMaps = () => {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 11;\n    const defaultCenter = { lat: parseFloat(this.state.lat), lng: parseFloat(this.state.lng) }\n    const locations = [\n      {\n        lat: parseFloat(this.state.lat),\n        lng: parseFloat(this.state.lng),\n        draggable: false,\n        title: this.state.address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => this.setState({isOpen: !this.state.isOpen})} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { this.state.isOpen &&\n            <InfoWindow onCloseClick={() => this.setState({isOpen: false})}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n  renderCarouselImage = () => {\n    let menuItems = [];\n    if (this.state.harvestImage != null) {\n      if (this.state.blendedBeans.length > 1) {\n        if (this.state.harvestImage.length > 1) {\n          this.state.harvestImage &&\n            this.state.harvestImage.map((value2) => {\n              if (value2.length > 1) {\n                for (let i = 0; i < value2.length; i++) {\n                  menuItems.push(\n                    <CCarouselItem>\n                      <CImg\n                        src={MARKETPLACE_URL + value2[i].images}\n                        className=\"d-block w-100\"\n                      />\n                    </CCarouselItem>\n                  );\n                }\n              } else if (value2.length == 1) {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2[0].images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              } else {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2.images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              }\n            });\n        }\n      } else {\n        for (let i = 0; i < this.state.harvestImage.length; i++) {\n          menuItems.push(\n            <CCarouselItem>\n              <CImg\n                src={MARKETPLACE_URL + this.state.harvestImage[i].images}\n                className=\"d-block w-100\"\n              />\n            </CCarouselItem>\n          );\n        }\n      }\n    }\n    return menuItems;\n  };\n\n  renderCarouselCertificate = () => {\n    let menuItems = [];\n\n    if (this.state.certificateBatch) {\n      for (let i = 0; i < this.state.certificateBatch.length; i++) {\n        let filename = MARKETPLACE_URL + this.state.certificateBatch[i].certificates;\n\n        if(filename.split('.').pop() === 'jpg' || filename.split('.').pop() === 'png' || filename.split('.').pop() === 'jpeg') {\n          menuItems.push(\n            // <CCarouselItem>\n              <CImg\n                src={\n                  MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n                }\n                className=\"d-block w-100\"\n              />\n            // </CCarouselItem>\n          );\n        } else {\n          menuItems.push(\n            <div class=\"iframe-container\">\n              <iframe class=\"responsive-iframe\" src={\n                  MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n                }\n              >\n              </iframe>\n              <p>{\" \"}</p>\n            </div>\n          );\n        }\n      }\n    }\n\n    if (this.state.certificateBatch) {\n      return menuItems;\n    }\n\n    // if (this.state.certificateBatch != null) {\n    //   if (this.state.blendedBeans.length > 1) {\n    //     if (this.state.certificateBatch.length > 1) {\n    //       this.state.certificateBatch &&\n    //         this.state.certificateBatch.map((value2) => {\n    //           if (value2.length > 1) {\n    //             for (let i = 0; i < value2.length; i++) {\n    //               menuItems.push(\n    //                 <CCarouselItem>\n    //                   <CImg\n    //                     src={MARKETPLACE_URL + value2[i].certificates}\n    //                     className=\"d-block w-100\"\n    //                   />\n    //                 </CCarouselItem>\n    //               );\n    //             }\n    //           } else if (value2.length == 1) {\n    //             menuItems.push(\n    //               <CCarouselItem>\n    //                 <CImg\n    //                   src={MARKETPLACE_URL + value2[0].certificates}\n    //                   className=\"d-block w-100\"\n    //                 />\n    //               </CCarouselItem>\n    //             );\n    //           } else {\n    //             menuItems.push(\n    //               <CCarouselItem>\n    //                 <CImg\n    //                   src={MARKETPLACE_URL + value2.certificates}\n    //                   className=\"d-block w-100\"\n    //                 />\n    //               </CCarouselItem>\n    //             );\n    //           }\n    //         });\n    //     }\n    //   } else {\n    //     for (let i = 0; i < this.state.certificateBatch.length; i++) {\n    //       menuItems.push(\n    //         <CCarouselItem>\n    //           <CImg\n    //             src={\n    //               MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n    //             }\n    //             className=\"d-block w-100\"\n    //           />\n    //         </CCarouselItem>\n    //       );\n    //     }\n    //   }\n    // }\n    // return menuItems;\n  };\n\n  renderDetailProduct = () => {\n    if (this.state.product != null) {\n      return (\n        <Fragment>\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 80%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>PRODUCT</strong>\n              </h1>\n            </CCol>\n            <CCol xs=\"10\" lg=\"7\">\n              <p>\n                <strong>SKU:</strong> {this.state.product.sku}\n              </p>\n              {(() => {\n                if (this.state.product.batch_id != null) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch Number:</strong> {this.state.batch.batch_id}\n                      </p>\n                    </Fragment>\n                  );\n                } else {\n                  let i = 0;\n                  return this.state.blendedBeans.map((value) => {\n                    i++;\n                    return (\n                      <Fragment>\n                        <p>\n                          <strong>Batch Number {i}:</strong> {value.batch.batch_id}\n                        </p>\n                      </Fragment>\n                    );\n                  });\n                }\n              })()}\n              <p>\n                <strong>Country of Origin:</strong> Indonesia\n              </p>\n              {(() => {\n                if (this.state.product.batch_id != null) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Origin:</strong>{\" \"}\n                        {this.state.batch.supplier.lokasi_supplier}\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {this.state.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>\n                        {this.state.batch.supplier.elevation}{\" \"}\n                        {this.state.batch.supplier.unit.nama_unit}\n                      </p>\n                      {(() => {\n                        if (this.state.product.batch_id != null) {\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Harvesting Year:</strong>{\" \"}\n                                {this.state.batch.tgl_panen}\n                              </p>\n                              <p>\n                                <strong>Variety:</strong>{\" \"}\n                                {this.state.batch.jenis.nama_jenis}\n                              </p>\n                              <p>\n                                <strong>Process:</strong>{\" \"}\n                                {this.state.batch.proses.nama_proses}\n                              </p>\n                              <p>\n                                <strong>Moisture:</strong>{\" \"}\n                                {this.state.batch.moisture}\n                              </p>\n                            </Fragment>\n                          );\n                        } else {\n                          let i = 0;\n                          return this.state.blendedBeans.map((value) => {\n                            i++;\n                            return (\n                              <Fragment>\n                                <p>\n                                  <strong>Harvesting Year {i}:</strong>{\" \"}\n                                  {value.batch.tgl_panen}\n                                </p>\n                                <p>\n                                  <strong>Variety {i}:</strong>{\" \"}\n                                  {value.batch.jenis.nama_jenis}\n                                </p>\n                                <p>\n                                  <strong>Process {i}:</strong>{\" \"}\n                                  {value.batch.proses.nama_proses}\n                                </p>\n                                <p>\n                                  <strong>Moisture {i}:</strong>{\" \"}\n                                  {value.batch.moisture}\n                                </p>\n                              </Fragment>\n                            );\n                          });\n                        }\n                      })()}\n                      {/* <p>\n                        <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '#'}>{this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '-'}</a>\n                      </p> */}\n                    </Fragment>\n                  );\n                } else {\n                  let i = 0;\n                  return this.state.blendedBeans.map((value) => {\n                    i++;\n                    return (\n                      <Fragment>\n                        <p>\n                          <strong>Origin {i}:</strong>{\" \"}\n                          {value.batch.supplier.lokasi_supplier}\n                        </p>\n                        <p>\n                          <strong>Farm {i}:</strong>{\" \"}\n                          {value.batch.supplier.nama_supplier}\n                        </p>\n                        <p>\n                          <strong>Elevation {i}:</strong>{\" \"}\n                          {value.batch.supplier.elevation}{\" \"}\n                          {value.batch.supplier.unit.nama_unit}\n                        </p>\n                        {/* <p>\n                          <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={value.batch.supplier.link_maps ? value.batch.supplier.link_maps : '#'}>{value.batch.supplier.link_maps ? value.batch.supplier.link_maps : '-'}</a>\n                        </p> */}\n                      </Fragment>\n                    );\n                  });\n                }\n              })()}\n              <p>\n                <strong>Google Map Location:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '#'}>{this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '-'}</a>\n              </p>\n              <div style={{width: \"100%\", height: \"400px\" }}>\n                {this.renderMyMaps()}\n              </div>\n              <p></p>\n              <p>\n                <strong>Storytelling:</strong>\n              </p>\n              <p>{this.state.batch.storytelling}</p>\n              <p>\n                <strong>Photo & Video Culture:</strong>{\" \"}\n              </p>\n              <div class=\"iframe-container\">\n                <iframe class=\"responsive-iframe\"\n                  // src={this.state.batch.video_culture}>\n                  src={this.state.batch.video_culture.replace(\"watch?v=\", \"embed/\")}>\n                </iframe>\n                <p>{\" \"}</p>\n              </div>\n              <p></p>\n              <p>\n                <strong>Process Photo:</strong> {\" \"}\n                <CImg\n                  src={MARKETPLACE_URL + this.state.product.thumbnail}\n                  className=\"d-block w-100\"\n                />\n              </p>\n              <p>\n                <strong>Volume:</strong> {this.state.batch.volume}\n              </p>\n              {/* <p>\n                <strong>Product ID:</strong> {this.state.product.id}\n              </p>\n              <p>\n                <strong>Product Name:</strong> {this.state.product.name}\n              </p> */}\n              {/* <p>\n                <strong>Price:</strong> {this.state.product.price}\n                {this.state.currencies.map((value) => {\n                  if (value.id == this.state.product.currency) {\n                    return \" \" + value.code;\n                  }\n                })}\n              </p> */}\n              {/* <p>\n                <strong>Description:</strong> {this.state.product.description}\n              </p> */}\n              {/* <p>\n                <strong>Production Date:</strong>{\" \"}\n                {this.state.product.tgl_produksi}\n              </p> */}\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n\n          {/* {(() => {\n            if (this.state.product.thumbnail != null) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 48%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CImg\n                        src={MARKETPLACE_URL + this.state.product.thumbnail}\n                        className=\"d-block w-100\"\n                        alt={this.state.product.name}\n                      />\n                    </CCol>\n\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 70%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>BATCH</strong>\n              </h1>\n            </CCol>\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.product.batch_id != null) {\n                  console.log(this.state.batch);\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch Number:</strong> {this.state.batch.batch_id}\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong>{\" \"}\n                        {this.state.batch.tgl_panen}\n                      </p>\n                      <p>\n                        <strong>Variety:</strong>{\" \"}\n                        {this.state.batch.jenis.nama_jenis}\n                      </p>\n                      <p>\n                        <strong>Process:</strong>{\" \"}\n                        {this.state.batch.proses.nama_proses}\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {this.state.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div class=\"iframe-container\">\n                        <iframe class=\"responsive-iframe\"\n                          src={this.state.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.batch.storytelling}</p>\n                    </Fragment>\n                  );\n                } else {\n                  let i = 0;\n                  return this.state.blendedBeans.map((value) => {\n                    i++;\n                    return (\n                      <Fragment>\n                        <p>\n                          <strong>Batch Number {i}:</strong> {value.batch.batch_id}\n                        </p>\n                        <p>\n                          <strong>Harvesting Year {i}:</strong>{\" \"}\n                          {value.batch.tgl_panen}\n                        </p>\n                        <p>\n                          <strong>Variety {i}:</strong>{\" \"}\n                          {value.batch.jenis.nama_jenis}\n                        </p>\n                        <p>\n                          <strong>Process {i}:</strong>{\" \"}\n                          {value.batch.proses.nama_proses}\n                        </p>\n                        <p>\n                          <strong>Processor {i}:</strong>{\" \"}\n                          {value.batch.supplier.nama_supplier}\n                        </p>\n                      </Fragment>\n                    );\n                  });\n                }\n              })()}\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.harvestImage != null) {\n              if (this.state.harvestImage.length >= 1) {\n                return (\n                  <CRow style={{ marginTop: \"40px\" }}>\n                    <CCol xs=\"2\" lg=\"5\">\n                      <h1\n                        style={{\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"20% 70%\",\n                          writingMode: \"vertical-lr\",\n                          color: \"darkOrange\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <strong>IMAGE</strong>\n                      </h1>\n                    </CCol>\n                    <CCol xs=\"10\" lg=\"7\">\n                      <CCol xs=\"12\" lg=\"7\">\n                        <CCard>\n                          <CCardBody>\n                            <CCarousel>\n                              <CCarouselInner>\n                                {this.renderCarouselImage()}\n                              </CCarouselInner>\n                              <CCarouselControl direction=\"prev\" />\n                              <CCarouselControl direction=\"next\" />\n                            </CCarousel>\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                      <hr\n                        style={{\n                          marginTop: \"60px\",\n                          color: \"#178d88\",\n                          backgroundColor: \"#178d88\",\n                          height: 2,\n                        }}\n                      />\n                    </CCol>\n                  </CRow>\n                );\n              }\n            }\n          })()} */}\n\n          {(() => {\n            if (this.state.certificateBatch != null) {\n              if (this.state.certificateBatch.length >= 1) {\n                return (\n                  <CRow style={{ marginTop: \"40px\" }}>\n                    <CCol xs=\"2\" lg=\"5\">\n                      <h1\n                        style={{\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"20% 55%\",\n                          writingMode: \"vertical-lr\",\n                          color: \"darkOrange\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <strong>CERTIFICATE</strong>\n                      </h1>\n                    </CCol>\n                    <CCol xs=\"10\" lg=\"7\">\n                      <CCol xs=\"12\" lg=\"7\">\n                        <p>\n                          <strong>Certification Photos:</strong> {\" \"}\n                        </p>\n                        <CCard>\n                          <CCardBody>\n                            <CCarousel>\n                              <CCarouselInner>\n                                {this.renderCarouselCertificate()}\n                              </CCarouselInner>\n                              <CCarouselControl direction=\"prev\" />\n                              <CCarouselControl direction=\"next\" />\n                            </CCarousel>\n                          </CCardBody>\n                        </CCard>\n                      </CCol>\n                      <hr\n                        style={{\n                          marginTop: \"60px\",\n                          color: \"#178d88\",\n                          backgroundColor: \"#178d88\",\n                          height: 2,\n                        }}\n                      />\n                    </CCol>\n                  </CRow>\n                );\n              }\n            }\n          })()}\n\n          <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>QR CODE</strong>\n              </h1>\n            </CCol>\n            <CCol xs=\"10\" lg=\"7\">\n              <CCol xs=\"12\" lg=\"7\">\n                <CImg\n                  src={MARKETPLACE_URL + this.state.product.qrcode}\n                  className=\"d-block w-100\"\n                  alt={this.state.product.product_id}\n                />\n              </CCol>\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailProduct()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/DaftarSupplierForm.js",["1213","1214","1215"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm, change } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport MyGoogleMap from \"./Google Maps/MyGoogleMap\";\nimport UserService from \"../../../services/user.service\";\n\nconst DaftarSupplierForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [long, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [link, setlink] = useState('');\n  const [unit, setUnit] = useState([]);\n\n  // const GetLinkLokasi = (value) => {\n  //   if(value && value != ''){\n  //     console.log('cek value link', value.target.value);\n  //     let val = value.target.value;\n  //     // var URL =  \"https://www.google.com/maps/search/maps/@-6.2226989,106.9904117,18.5z\";\n\n  //     var URL =  val;\n\n  //     setlink(URL);\n\n  //     var splitUrl = URL.split('!3d');\n  //     var latLong = splitUrl[splitUrl.length-1].split('!4d');\n  //     var longitude;\n\n  //     if (latLong.indexOf('?') !== -1) {\n  //         longitude = latLong[1].split('\\\\?')[0];\n  //     } else {\n  //         longitude = latLong[1];\n  //     }\n  //     var latitude = latLong[0];\n\n  //     setLat(latitude);\n  //     setLong(longitude);\n\n  //     console.log('cek latitude',latitude);\n  //     console.log('cek longitud',longitude);\n\n  //     markerHandle(latitude, longitude);\n  //   }\n  // }\n\n  // const getLink = (link) => {\n  //   console.log(link);\n  // }\n\n  const markerHandle = (lat, long) => {\n    setLong(long);\n    setLat(lat);\n    props.onSelectLat(lat);\n    props.onSelectLong(long);\n  };\n\n  const getUnit = async () => {\n    UserService.getUnitDetail().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  const setCurrentLocation = async () => {\n    setLong(112.43025439999997);\n    setLat(-1.2235008616709613);\n  };\n\n  useEffect(() => {\n    setCurrentLocation();\n    getUnit();\n  }, []);\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImage(file);\n  };\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          disabled\n          defaultValue={lat}\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          disabled\n          defaultValue={long}\n        />\n      </div>\n    );\n  };\n\n  let googleMap;\n  googleMap = (\n    <MyGoogleMap\n      onMarkerHandle={markerHandle}\n      latProps={lat}\n      longProps={long}\n    />\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add Coffee Origin</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listSupplier\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaSupplier\">Processor Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    required\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Processor Origin</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"lokasi_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    required\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-kebun\">Farm</CLabel>\n                  <div style={{width: \"100%\", height: \"500px\"}}>{googleMap}</div>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                    Latitude\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                    Longitute\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLat}\n                      type=\"text\"\n                      required\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLong}\n                      type=\"text\"\n                      required\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Link Maps (optional)</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"linkMaps\"\n                    component=\"input\"\n                    type=\"text\"\n                    // onChange={GetLinkLokasi}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-elevation\">\n                    Elevation\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-unit\">\n                    Unit\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"elevation\"\n                      component=\"input\"\n                      type=\"text\"\n                      required\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"unit\"\n                      component=\"select\"\n                      required\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        ----\n                      </option>\n                      {unit &&\n                        unit.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_unit}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaPetani\">Farmer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_petani\"\n                    component=\"input\"\n                    type=\"text\"\n                    required\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-estimatedProduction\">\n                    Estimated Production\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"estimatedProduction\"\n                      component=\"input\"\n                      type=\"number\"\n                      required\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Ton</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-gambarPetani\">\n                    Farmer Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"gambar_petani\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarSupplier\", // a unique identifier for this form\n})(DaftarSupplierForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/showResults/showResults.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/services/auth.service.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/services/user.service.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/abi/abi.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/reducers/message.js",["1216"],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}","/Applications/MAMP/htdocs/blockchain_project/src/reducers/auth.js",["1217"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n  } from \"../actions/types\";\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  \n  const initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n  \n  export default function (state = initialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case REGISTER_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case REGISTER_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n        };\n      case LOGIN_SUCCESS:\n        return {\n          ...state,\n          isLoggedIn: true,\n          user: payload.user,\n        };\n      case LOGIN_FAIL:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      case LOGOUT:\n        return {\n          ...state,\n          isLoggedIn: false,\n          user: null,\n        };\n      default:\n        return state;\n    }\n  }","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/Google Maps/MyGoogleMap.js",["1218","1219","1220","1221","1222"],"// MyGoogleMaps.js\nimport React, { Component } from \"react\";\n\nimport GoogleMapReact from \"google-map-react\";\n\nimport styled from \"styled-components\";\n\nimport Marker from \"./Marker\";\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nclass MyGoogleMap extends Component {\n  state = {\n    mapApiLoaded: false,\n    mapInstance: null,\n    mapApi: null,\n    geoCoder: null,\n    places: [],\n    center: [],\n    zoom: 9,\n    address: \"\",\n    draggable: true,\n    lat: null,\n    lng: null,\n  };\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.longProps !== prevProps.longProps) {\n      var lat = parseFloat(this.props.latProps);\n      var long = parseFloat(this.props.longProps);\n      this.setState({\n        center: [lat, long],\n        lat: lat,\n        lng: long,\n      });\n    }\n  }\n  componentWillMount() {\n    this.setCurrentLocation();\n  }\n\n  onMarkerInteraction = (childKey, childProps, mouse) => {\n    this.setState({\n      draggable: false,\n      lat: mouse.lat,\n      lng: mouse.lng,\n    });\n    this.props.onMarkerHandle(mouse.lat, mouse.lng);\n  };\n\n  onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n    this.setState({ draggable: true });\n    this._generateAddress();\n  };\n\n  _onChange = ({ center, zoom }) => {\n    this.setState({\n      center: center,\n      zoom: zoom,\n    });\n  };\n\n  _onClick = (value) => {\n    this.setState({\n      lat: value.lat,\n      lng: value.lng,\n    });\n    this.props.onMarkerHandle(value.lat, value.lng);\n  };\n\n  apiHasLoaded = (map, maps) => {\n    this.setState({\n      mapApiLoaded: true,\n      mapInstance: map,\n      mapApi: maps,\n    });\n\n    this._generateAddress();\n  };\n\n  addPlace = (place) => {\n    this.setState({\n      places: [place],\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng(),\n    });\n    this._generateAddress();\n  };\n\n  _generateAddress() {\n    const { mapApi } = this.state;\n\n    // const geocoder = new mapApi.Geocoder();\n\n    // geocoder.geocode(\n    //   { location: { lat: this.state.lat, lng: this.state.lng } },\n    //   (results, status) => {\n    //     console.log(results);\n    //     console.log(status);\n    //     if (status === \"OK\") {\n    //       if (results[0]) {\n    //         this.zoom = 12;\n    //         this.setState({ address: results[0].formatted_address });\n    //       } else {\n    //         window.alert(\"No results found\");\n    //       }\n    //     } else {\n    //       window.alert(\"Geocoder failed due to: \" + status);\n    //     }\n    //   }\n    // );\n  }\n\n  // Get Current Location Coordinates\n\n  setCurrentLocation() {\n    if (this.props.longProps == null && this.props.latProps == null) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          center: [position.coords.latitude, position.coords.longitude],\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  }\n\n  render() {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    return (\n      <Wrapper>\n        <GoogleMapReact\n          center={this.state.center}\n          zoom={this.state.zoom}\n          draggable={this.state.draggable}\n          onChange={this._onChange}\n          onChildMouseDown={this.onMarkerInteraction}\n          onChildMouseUp={this.onMarkerInteractionMouseUp}\n          onChildMouseMove={this.onMarkerInteraction}\n          onChildClick={() => console.log(\"child click\")}\n          onClick={this._onClick}\n          bootstrapURLKeys={{\n            key: \"AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4\",\n            libraries: [\"places\", \"geometry\"],\n          }}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n        >\n          <Marker\n            text={this.state.address}\n            lat={this.state.lat}\n            lng={this.state.lng}\n          />\n        </GoogleMapReact>\n\n        {/* <div className=\"info-wrapper\">\n          <div className=\"map-details\">\n            Latitude: <span>{this.state.lat}</span>, Longitude:{\" \"}\n            <span>{this.state.lng}</span>\n          </div>\n          <div className=\"map-details\">\n            Zoom: <span>{this.state.zoom}</span>\n          </div>\n        </div> */}\n      </Wrapper>\n    );\n  }\n}\n\nexport default MyGoogleMap;\n","/Applications/MAMP/htdocs/blockchain_project/src/services/auth-header-image.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/services/auth-header.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Supplier/Google Maps/Marker.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/ListCNF.js",["1223","1224","1225","1226","1227"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\nimport { AddCNF } from \"../../../abi/cnf\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport default class ListCNF extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n      account: '',\n    };\n  }\n\n  async componentDidMount() {\n    const provider = new HDWalletProvider(\n      process.env.REACT_APP_MNEMONIC,\n      \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n    );\n    const web3 = new Web3(provider);\n    provider.engine.stop();\n\n    let account = await web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        return \"0\";\n      } else if (accounts.length === 0) {\n        return \"0\";\n      } else {\n        return accounts[0];\n      }\n    });\n    const transaction = new web3.eth.Contract(\n        AddCNF,\n        process.env.REACT_APP_ADDRESS_CNF\n    );\n    const trx = await transaction.methods.getAllData().call({from: account[0]});\n    var arr = [];\n    await trx.forEach(async function (value, index) {\n      arr.push(value);\n    });\n\n    this.setState({\n      content: arr,\n    })\n    // manggil metamask untuk konfirmasi\n      // const web3Modal = new Web3Modal();\n      // const connection = await web3Modal.connect();\n      // const provider = new ethers.providers.Web3Provider(connection);\n      // const signer = provider.getSigner();\n\n      // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, AddCNF, signer);\n      // let transaction = await contract.getAllData();\n    // end transaksi blockchain\n\n    // this.setState({\n    //   content: transaction,\n    // });\n\n    console.log(\"data dari blockchainya nih\", arr);\n  }\n\n  render() {\n    const fields = [\n      // { key: \"walletAddress\", label: \"Signer\"},\n      { key: \"role_pembuat\", label: \"Created By\"},\n      { key: \"nomor_dokumen\", label: \"Document Number\"},\n      { key: \"tanggal_dokumen\", label: \"Document Date\"},\n      { key: \"created\", label: \"Created\"},\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>CNF</h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/AddCNF\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                      {/* {(() => {\n                        if (user && (user.status_role === \"grosir\" || user.status_role === \"roaster\")) {\n                          return(\n                            <CCol>\n                              <CButton\n                                block\n                                color=\"dark\"\n                                to=\"/AddCNF\"\n                                style={{ backgroundColor: \"#00c4cc\" }}\n                              >\n                                Add\n                              </CButton>\n                            </CCol>\n                          )\n                        }\n                      })()} */}\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content}\n                      fields={fields}\n                      itemsPerPage={10}\n                      tableFilter\n                      cleaner\n                      itemsPerPageSelect\n                      hover\n                      sorter\n                      pagination\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNF.js",["1228","1229","1230","1231","1232","1233","1234"],"import { Fragment, Component, useEffect } from \"react\";\nimport AddCNFForm from \"./AddCNFForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport Loader from \"react-spinners/DotLoader\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { AddCNF as CNF } from \"../../../abi/cnf\";\nimport { css } from \"@emotion/react\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nvar m = new Date();\nvar dateString =\n    m.getUTCFullYear() + \"-\" +\n    (\"0\" + (m.getUTCMonth()+1)).slice(-2) + \"-\" +\n    (\"0\" + m.getUTCDate()).slice(-2);\n\nvar override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      `\n    ;\nvar provider = new HDWalletProvider(\n  process.env.REACT_APP_MNEMONIC,\n  \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n);\nvar web3 = new Web3(provider);\n\nvar user = JSON.parse(localStorage.getItem(\"user\"));\n\nconsole.log(\"usernya mal:\", user);\n\nprovider.engine.stop();\nexport default class AddCNFVi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n      date: \"\",\n      loading: false,\n      color: \"#3c4b64\",\n      akun: \"\",\n    };\n  }\n\n  handleDate = (tgl) => {\n    this.setState({\n      date: tgl,\n    });\n  };\n\n  handleSubmit = async (values) => {\n    this.setState({\n      loading: true,\n    });\n\n    const formData = new FormData();\n\n    if (\n      values.nomor_dokumen != undefined &&\n      (this.state.date != undefined || this.state.date === 'Invalid date')\n    ) {\n      formData.append(\"pembuat\", user.status_role);\n      formData.append(\"nomor_dokumen\", values.nomor_dokumen);\n      formData.append(\"tanggal_dokumen\", this.state.date);\n\n      // try{\n      // // get wallet\n      // const web3Modal = new Web3Modal();\n      // const connection = await web3Modal.connect();\n      // const provider = new ethers.providers.Web3Provider(connection);\n      // var signer = provider.getSigner();\n\n      // // const accounts = await window.ethereum.enable();\n      // // const signer = accounts[0];\n      // // end get wallet\n      // } catch(err) {\n      //   this.setState({\n      //     loading: false,\n      //   });\n      //   showResults(\"Failed, No wallet selected\");\n      // }\n\n      UserService.addCNF(formData).then(\n        async (response) => {\n          console.log('response', response);\n\n          const provider = new HDWalletProvider(\n            process.env.REACT_APP_MNEMONIC,\n            \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n          );\n          const web3 = new Web3(provider);\n          provider.engine.stop();\n\n          let account = await web3.eth.getAccounts(function (err, accounts) {\n            if (err != null) {\n              return \"0\";\n            } else if (accounts.length === 0) {\n              return \"0\";\n            } else {\n              return accounts[0];\n            }\n          });\n\n          console.log('akun yang digunakan', account[0]);\n\n          if(response.data.data){ // cek apakah data sudah ada atau belum\n            // input cnf to blockchain\n            // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, CNF, signer)\n\n            if(!account[0]) {\n              this.setState({\n                loading: false,\n              });\n\n              showResults(\"Failed, wallet not found\");\n            }\n\n            const storageContract = new web3.eth.Contract(\n              CNF,\n              process.env.REACT_APP_ADDRESS_CNF\n            );\n\n            try{\n              // let transaction = await contract.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n              // this.setState({\n              //   loading: false,\n              // });\n              // showResults(\"Data has been added\")\n              \n              const gas = await storageContract.methods.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString).estimateGas();\n\n              var post = await storageContract.methods\n                .addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n                .send(\n                  {\n                    from: account[0],\n                    // gas,\n                  },\n                  (error, transactionHash) => {\n                    // get transaction hash blockchain\n                    console.log(transactionHash);\n                  }\n                );\n              console.log(post);\n\n              this.setState({\n                loading: false,\n              });\n              showResults(\"Data has been added\")\n\n            } catch(e) {\n              UserService.deleteCNF(response.data.data.id);\n              this.setState({\n                loading: false,\n              });\n              showResults(`Failed, Transaction rejected : ${e.message}`);\n            }\n          } else {\n            this.setState({\n              loading: false,\n            });\n            showResults(`Failed, Document Number already exist`);\n          }\n\n          // await transaction.wait()\n          // end input cnf to blockchain\n        },\n        (error) => {\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  render() {\n\n    return (\n      <Fragment>\n        {(() => {\n          if(this.state.loading === true) {\n            return(\n              <div style={{textAlign : 'center', verticalAlign : 'middle', paddingTop : \"150px\"}}>\n                <div className=\"sweet-loading\">\n                  <h5>The transaction will be written to the Blockchain</h5><br></br>\n                  <br></br>\n                    <Loader color={this.state.color} loading={this.state.loading} css={override} size={150} />\n                  <br></br>\n                  <br></br>\n                  <h5>Please Wait...</h5>\n                </div>\n            </div>\n            )\n          } else {\n            return(\n              <AddCNFForm\n                onSubmit={this.handleSubmit}\n                onSelectImage={this.onFileChange}\n                onSelectCertificate={this.onCertificateChange}\n                onSelectDate={this.handleDate}\n              />\n            )\n          }\n        })()}\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNFForm.js",["1235","1236","1237","1238","1239","1240","1241","1242"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\nimport DatePicker from \"react-datepicker\";\nimport \"../react-datepicker.css\";\nimport moment from 'moment';\n\nconst AddCNFForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n  const [tgl, setStartDate] = useState('');\n\n  props.onSelectDate(moment(tgl).format('YYYY-MM-DD'));\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    UserService.getAddDetail().then((response) => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n  };\n\n  const onFileChange = (e) => {\n    const file = e.target.files;\n    props.onSelectImage(file);\n  };\n\n  const onCertificateChanges = (e) => {\n    const file = e.target.files;\n    props.onSelectCertificate(file);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add CNF</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/ListCNF\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              {/* <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\"> */}\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-moisture\">Document Number</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nomor_dokumen\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-tanggalPanen\">Dokumen Date</CLabel>\n                  <DatePicker\n                    selected={tgl}\n                    className=\"textInput grosir\"\n                    onChange={(date) => setStartDate(date)}\n                    maxDate={new Date()}\n                    dateFormat=\"dd/MM/yyyy\"\n                    name=\"tanggal_dokumen\"\n                    placeholderText=\"Select a date\"\n                  />\n                </CFormGroup>\n              {/* </CForm> */}\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"AddCNF\", // a unique identifier for this form\n})(AddCNFForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/abi/cnf.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/GetID.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGround.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/AddBeans.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/EditBeans.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGround.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/DaftarProses.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/EditUnit.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietas.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/EditProses.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietas.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Header/Header.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfile.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplier.js",["1243","1244"],"import { Fragment, React, useState } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditSupplierForm from \"./EditSupplierForm\";\n\nconst EditSupplier = () => {\n  const { id } = useParams();\n\n  const [files, imageFile] = useState(\"\");\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const onFileChange = (file) => {\n    imageFile(file);\n  };\n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n    if (values.nama_supplier != null) {\n      formData.append(\"nama_supplier\", values.nama_supplier);\n    }\n    if (values.lokasi_supplier != null) {\n      formData.append(\"lokasi_supplier\", values.lokasi_supplier);\n    }\n    if (values.nama_petani != null) {\n      formData.append(\"nama_petani\", values.nama_petani);\n    }\n\n    if (lat != \"\" && long != \"\") {\n      formData.append(\"latitude\", lat);\n      formData.append(\"longitude\", long);\n    }\n\n    if (values.estimatedProduction != null) {\n      formData.append(\"estimatedProduction\", values.estimatedProduction);\n    }\n\n    if (values.elevation != null) {\n      formData.append(\"elevation\", values.elevation);\n    }\n\n    if (values.unit != null) {\n      formData.append(\"unit\", values.unit);\n    }\n\n    formData.append(\"files\", files);\n    formData.append(\"fileName\", files.name);\n\n    UserService.editSupplierRoaster(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  return (\n    <Fragment>\n      <EditSupplierForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        supplierID={id}\n        onSelectLat={onLatChange}\n        onSelectLong={onLongChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default EditSupplier;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfile.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoasting.js",["1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257"],"import { Fragment, useState, useEffect } from \"react\";\nimport AddRoastingForm from \"./AddRoastingForm\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport QRcode from \"qrcode.react\";\nimport { sha256 } from \"js-sha256\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../../abi/abi\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst AddRoasting = (props) => {\n  const provider = new HDWalletProvider(\n    process.env.REACT_APP_MNEMONIC,\n    \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n  );\n  const web3 = new Web3(provider);\n  provider.engine.stop()\n  const contractAddress = \"0x061Bca64852219aA03a9615ef66Dc301e075F6d9\";\n\n  const code = props.code;\n  const [qr, setQr] = useState(\"test\");\n  const [roastingFile, setRoastingFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    getData();\n    handleIDBatch();\n  }, []);\n\n  const getData = () => {\n    UserService.getListRoastingProductsAsc().then((response) => {\n      setContent(response.data.roasting);\n    });\n  };\n\n  const getWallet = async () => {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        alert(\"An error occurred: \" + err);\n      } else if (accounts.length == 0) {\n        alert(\"User is not logged in to MetaMask\");\n      } else {\n        setAccount(accounts[0]);\n      }\n    });\n  };\n\n  const handleChange = (value) => {\n    setQr(value);\n  };\n\n  const onFileChangeGambar = (file) => {\n    imageFileGambar(file);\n  };\n\n  const downloadQR = (roasting_id) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + roasting_id + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const onRoastingChange = (file) => {\n    setRoastingFile(file);\n  };\n\n  useEffect(() => {\n    getWallet();\n  }, []);\n\n  const handleSubmit = async (values) => {\n    if (\n      values.roastingMenu &&\n      values.roastingProfile &&\n      values.roastingName &&\n      values.flavorNote &&\n      values.acidity &&\n      values.intensity &&\n      values.weight &&\n      roastingFile != \"\" &&\n      filesGambar != \"\"\n    ) {\n      // console.log(process.env.REACT_APP_MNEMONIC);\n      // console.log(\"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n      const formData = new FormData();\n      const batchID = handleIDBatch();\n      formData.append(\"roasting_batch_id\", batchID);\n\n      if (values.roastingMenu == \"Single\") {\n        formData.append(\"bean_id\", values.bean);\n      }\n      if (values.roastingMenu == \"Blended\") {\n        formData.append(\"beans\", JSON.stringify(values.beans));\n      }\n\n      formData.append(\"roasting_profile_id\", values.roastingProfile);\n      formData.append(\"cupping_id\", values.roastingCupping);\n      formData.append(\"roasting_name\", values.roastingName);\n      formData.append(\"roastingMenu\", values.roastingMenu);\n      formData.append(\"flavor_note\", values.flavorNote);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"intensity\", values.intensity);\n      formData.append(\"weight\", values.weight);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"tgl_roasting\", values.tgl_roasting);\n      formData.append(\"roaster_name\", values.roaster_name);\n\n      formData.append(\"roastingFile\", roastingFile);\n      formData.append(\"roastingFileName\", roastingFile.name);\n      // for (let i = 0; i < roastingFile.length; i++) {\n      //   formData.append(\"roastingFile[]\", roastingFile[i]);\n      // }\n\n      formData.append(\"files_gambar\", filesGambar);\n      formData.append(\"fileName_gambar\", filesGambar.name);\n\n      UserService.addRoastingProduct(formData).then(async (response) => {\n        const roasting_id = response.data.roasting.id;\n        const linkQRCode =\n          process.env.REACT_APP_PROD_URL +\n          \"detailRoasting/\" +\n          code +\n          \"/\" +\n          roasting_id;\n        await handleChange(linkQRCode);\n\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise((resolve) =>\n          canvas.toBlob(resolve, \"image/png\")\n        );\n\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + roasting_id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + roasting_id + \".png\");\n\n        downloadQR(roasting_id);\n\n        UserService.pushQRCodeImageRoasting(roasting_id, formDataQR);\n\n        UserService.getDetailRoastingProduct(roasting_id).then(\n          async (response) => {\n            console.log(\"data get setelah submit\",response.data);\n            var object = response.data;\n            // formData.forEach(function (value, key) {\n            //   object[key] = value;\n            // });\n            var json = JSON.stringify(object);\n            // console.log(json);\n            console.log(sha256(json));\n            // console.log(contractAddress);\n            console.log(account);\n\n            let date_ob = new Date();\n            let date = (\"0\" + date_ob.getDate()).slice(-2);\n            let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n            let year = date_ob.getFullYear();\n            let hours = date_ob.getHours();\n            let minutes = date_ob.getMinutes();\n            let seconds = date_ob.getSeconds();\n            console.log(year + \"-\" + month + \"-\" + date);\n\n            //Blockchain Function\n            // const storageContract = new web3.eth.Contract(\n            //   AddProduct,\n            //   contractAddress\n            // );\n            // // const gas = await storageContract.methods\n            // // .tambahProduct(\n            // //   sha256(json),\n            // //   year + \"-\" + month + \"-\" + date\n            // // )\n            // // .estimateGas();\n\n            // var post = await storageContract.methods\n            //   .tambahProduct(sha256(json), year + \"-\" + month + \"-\" + date)\n            //   .send(\n            //     {\n            //       from: account,\n            //       // gas,\n            //     },\n            //     (error, transactionHash) => {\n            //       console.log(transactionHash);\n            //     }\n            //   );\n            // console.log(post);\n\n\n            // queued post api marketplace kk\n            var arrFiles = [];\n\n            var formdata = new FormData();\n            formdata.append(\"code\", code);\n            formdata.append(\"roasted_id\", roasting_id);\n            formdata.append(\"category_id\", 115);\n            formdata.append(\"name\", values.roastingName);\n            if(values.roastingMenu === 'Single') {\n              formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n            } else {\n              formdata.append(\"description\", json);\n            }\n            formdata.append(\"indonesia_price\", 1000);\n            formdata.append(\"usd_price\", 10);\n            formdata.append(\"aed_price\", 50);\n            formdata.append(\"weight\", values.weight);\n\n            for (let i = 0; i < (roastingFile.length + 2); i++) {\n              arrFiles.push(roastingFile[i]);\n            }\n\n            arrFiles.push(filesGambar)\n            arrFiles.push(imageBlob)\n\n            for (let i = 0; i < arrFiles.length; i++) {\n              if((i+1) === arrFiles.length) {\n                formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\")\n              } else {\n                formdata.append('image[]', arrFiles[i])\n              }\n            }\n\n            UserService.apiPostToMarketpalceKK(formdata).then(async (response) => {\n              console.log('cek ini mal', response);\n            })\n\n            //Postman Kopi Ketjil (sekarang di hanlde di backend laravel)\n            // try{\n            //   var myHeaders = new Headers();\n            //   myHeaders.append(\"x-api-key\", \"kk-blockchain-2021-dev\");\n\n            //   var arrFiles = [];\n\n            //   var formdata = new FormData();\n            //   formdata.append(\"category_id\", \"115\");\n            //   formdata.append(\"name\", values.roastingName);\n            //   if(values.roastingMenu === 'Single') {\n            //     formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n            //   } else {\n            //     formdata.append(\"description\", json);\n            //   }\n            //   formdata.append(\"indonesia_price\", \"1000\");\n            //   formdata.append(\"usd_price\", \"10\");\n            //   formdata.append(\"aed_price\", \"50\");\n\n            //   for (let i = 0; i < (roastingFile.length + 2); i++) {\n            //     arrFiles.push(roastingFile[i]);\n            //   }\n\n            //   arrFiles.push(filesGambar)\n            //   arrFiles.push(imageBlob)\n\n            //   for (let i = 0; i < arrFiles.length; i++) {\n            //     if((i+1) === arrFiles.length) {\n            //       formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\")\n            //     } else {\n            //       formdata.append('image[]', arrFiles[i])\n            //     }\n            //   }\n\n            //   var requestOptions = {\n            //     method: \"POST\",\n            //     headers: myHeaders,\n            //     body: formdata,\n            //     redirect: \"follow\",\n            //   };\n\n            //   fetch(\n            //     \"https://api-staging.kopiketjil.com/api/kopiketjil/insert-product\",\n            //     requestOptions\n            //   )\n            //     .then((response) => showResults(`Response API, ${response}`))\n            //     .then((result) => console.log('result API',result))\n            //     .catch((error) => showResults(`Response API, ${error}`));\n            // } catch (e) {\n            //   showResults(`Error Post To Kopi Ketjil, ${e}`);\n            // }\n          }\n        );\n      });\n\n      showResults(\"Data has been added\");\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const handleIDBatch = () => {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear().toString().substr(-2);\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let increment = 1;\n    let incrementalResultIDBatch = \"0\" + increment;\n    let resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n\n    for (let i = 0; i < content.length; i++) {\n      if (content[i].roasting_batch_id == resultIDBatch) {\n        increment += 1;\n        if (increment < 10) {\n          incrementalResultIDBatch = \"0\" + increment;\n        }\n        else {\n          incrementalResultIDBatch = increment;\n        }\n        resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n      }\n    }\n\n    return resultIDBatch;\n  };\n\n  return (\n    <Fragment>\n      <AddRoastingForm\n        onSubmit={handleSubmit}\n        onSelectRoasting={onRoastingChange}\n        onSelectImageGambar={onFileChangeGambar}\n      />\n      <div style={{ visibility: \"hidden\" }}>\n        {qr ? (\n          <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n        ) : (\n          <p>No QR code preview</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AddRoasting;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/MasterDataLists.js",["1258"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CTabs,\n} from \"@coreui/react\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\n\nexport default class MasterDataLists extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListMasterData().then((response) => {\n      this.setState({\n        content: response.data,\n      });\n    });\n  }\n\n  deleteRoastingProfile = (item) => {\n    UserService.deleteRoastingProfile(item.id).then(\n      showResults(\"Data has been deleted\")\n    );\n  };\n\n  deleteCupping = (item) => {\n    UserService.deleteCupping(item.id).then(\n      showResults(\"Data has been deleted\")\n    );\n  };\n\n  // deleteUnit = (item) => {\n  //   UserService.deleteUnitRoaster(item.id).then(showResults(\"Data has been deleted\"));\n  // };\n\n  // deleteBeans = (item) => {\n  //   UserService.deleteBijiRoaster(item.id).then(showResults(\"Data has been deleted\"));\n  // };\n\n  // deleteVariety = (item) => {\n  //   UserService.deleteJenisRoaster(item.id).then(showResults(\"Data has been deleted\"));\n  // };\n\n  // deleteProcess = (item) => {\n  //   UserService.deleteProsesRoaster(item.id).then(\n  //     showResults(\"Data has been deleted\")\n  //   );\n  // };\n\n  // deleteOrigin = (item) => {\n  //   UserService.deleteSupplierRoaster(item.id).then(\n  //     showResults(\"Data has been deleted\")\n  //   );\n  // };\n\n  render() {\n    const fieldRoastingProfile = [\n      {\n        key: \"roasting_profile\",\n        label: \"Roasting Profile\",\n        _style: { width: \"80%\" },\n      },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"20%\" },\n        filter: false,\n      },\n    ];\n    const fieldCupping = [\n      {\n        key: \"curated_date\",\n        label: \"Curated Date\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"fragrance_aroma\",\n        label: \"Fragrance / Aroma\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"flavor\",\n        label: \"Flavor\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"aftertaste\",\n        label: \"Aftertaste\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"acidity\",\n        label: \"Acidity\",\n        _style: { width: \"16%\" },\n      },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"16%\" },\n        filter: false,\n      },\n    ];\n    // const fieldUnit = [\n    //   {\n    //     key: \"nama_unit\",\n    //     label: \"Unit\",\n    //     _style: { width: \"80%\" },\n    //   },\n    //   {\n    //     key: \"show_details\",\n    //     label: \"\",\n    //     _style: { width: \"20%\" },\n    //     filter: false,\n    //   },\n    // ];\n    // const fieldBeans = [\n    //   {\n    //     key: \"nama_biji\",\n    //     label: \"Beans Name\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"deskripsi_biji\",\n    //     label: \"Beans Description\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"show_details\",\n    //     label: \"\",\n    //     _style: { width: \"20%\" },\n    //     filter: false,\n    //   },\n    // ];\n    // const fieldVariety = [\n    //   {\n    //     key: \"nama_jenis\",\n    //     label: \"Variety Name\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"deskripsi_jenis\",\n    //     label: \"Variety Description\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"show_details\",\n    //     label: \"\",\n    //     _style: { width: \"20%\" },\n    //     filter: false,\n    //   },\n    // ];\n    // const fieldProcess = [\n    //   {\n    //     key: \"nama_proses\",\n    //     label: \"Process Name\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"deskripsi_proses\",\n    //     label: \"Process Description\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"show_details\",\n    //     label: \"\",\n    //     _style: { width: \"20%\" },\n    //     filter: false,\n    //   },\n    // ];\n    // const fieldOrigin = [\n    //   {\n    //     key: \"nama_supplier\",\n    //     label: \"Processor Name\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"lokasi_supplier\",\n    //     label: \"Origin\",\n    //     _style: { width: \"40%\" },\n    //   },\n    //   {\n    //     key: \"show_details\",\n    //     label: \"\",\n    //     _style: { width: \"20%\" },\n    //     filter: false,\n    //   },\n    // ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard>\n              <CCardBody>\n                <CTabs>\n                  <CNav variant=\"tabs\">\n                    <CNavItem>\n                      <CNavLink>Roasting Profile</CNavLink>\n                    </CNavItem>\n                    {/* <CNavItem>\n                      <CNavLink>Cupping</CNavLink>\n                    </CNavItem> */}\n                    {/* <CNavItem>\n                      <CNavLink>Unit</CNavLink>\n                    </CNavItem>\n                    <CNavItem>\n                      <CNavLink>Beans</CNavLink>\n                    </CNavItem>\n                    <CNavItem>\n                      <CNavLink>Variety</CNavLink>\n                    </CNavItem>\n                    <CNavItem>\n                      <CNavLink>Process</CNavLink>\n                    </CNavItem>\n                    <CNavItem>\n                      <CNavLink>Origin</CNavLink>\n                    </CNavItem> */}\n                  </CNav>\n                  <CTabContent>\n                    <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>\n                                  Roasting Profile Data\n                                </h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addRoastingProfile\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.roasting_profile}\n                              fields={fieldRoastingProfile}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                        to={`/masterData/editRoastingProfile/${item.id}`}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() =>\n                                          this.deleteRoastingProfile(item)\n                                        }\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane>\n                    {/* <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>\n                                  Cupping Data\n                                </h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addCupping\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.roasting_cupping}\n                              fields={fieldCupping}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                        to={`/masterData/editCupping/${item.id}`}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() =>\n                                          this.deleteCupping(item)\n                                        }\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane> */}\n                    {/* <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>Unit Data</h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addUnit\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.unit}\n                              fields={fieldUnit}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                        to={`/masterData/editUnit/${item.id}`}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() => this.deleteUnit(item)}\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane>\n                    <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>Beans Data</h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addBeans\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.biji}\n                              fields={fieldBeans}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                        to={`/masterData/editBeans/${item.id}`}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() => this.deleteBeans(item)}\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane>\n                    <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>Variety Data</h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"masterData/addVariety/Roaster\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.jenis}\n                              fields={fieldVariety}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        to={`/masterData/editVariety/Roaster/${item.id}`}\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() => this.deleteVariety(item)}\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane>\n                    <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>Process Data</h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addProcess/Roaster\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.proses}\n                              fields={fieldProcess}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        to={`/masterData/editProcess/Roaster/${item.id}`}\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() => this.deleteProcess(item)}\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane>\n                    <CTabPane>\n                      <CRow>\n                        <CCol xs=\"12\">\n                          <CCardHeader>\n                            <CRow>\n                              <CCol\n                                xs={6}\n                                md={7}\n                                lg={10}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <h4 style={{ margin: \"auto\" }}>Origin Data</h4>\n                              </CCol>\n                              <CCol>\n                                <CButton\n                                  block\n                                  color=\"dark\"\n                                  to=\"/masterData/addOrigin/Roaster\"\n                                  style={{ backgroundColor: \"#00c4cc\" }}\n                                >\n                                  Add\n                                </CButton>\n                              </CCol>\n                            </CRow>\n                          </CCardHeader>\n                          <CCardBody>\n                            <CDataTable\n                              items={this.state.content.supplier}\n                              fields={fieldOrigin}\n                              itemsPerPage={10}\n                              pagination\n                              scopedSlots={{\n                                show_details: (item) => {\n                                  return (\n                                    <td className=\"py-2\">\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"info\"\n                                        style={{ backgroundColor: \"#178d88\" }}\n                                        to={`/masterData/editOrigin/Roaster/${item.id}`}\n                                      >\n                                        Edit\n                                      </CButton>\n                                      <CButton\n                                        size=\"sm\"\n                                        color=\"danger\"\n                                        className=\"ml-1\"\n                                        onClick={() => this.deleteOrigin(item)}\n                                        style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                        Delete\n                                      </CButton>\n                                    </td>\n                                  );\n                                },\n                              }}\n                            />\n                          </CCardBody>\n                        </CCol>\n                      </CRow>\n                    </CTabPane> */}\n                  </CTabContent>\n                </CTabs>\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/RoastingLists.js",["1259","1260"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\n\nexport default class RoastingLists extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListRoastingProducts().then((response) => {\n      this.setState({\n        content: response.data,\n      });\n    });\n  }\n\n  deleteRoasting = (item) => {\n    UserService.deleteRoastingProduct(item.id).then(\n      showResults(\"Data has been deleted\")\n    );\n  };\n\n  render() {\n    const scopedSlots1 = {\n      bean_id: (item) => (\n        <td>\n          {(() => {\n            if (item.roasting_menu == \"Blended\") {\n              return \"Blended\";\n            } else if (item.roasting_menu == \"Single\") {\n              if (item.product != null) {\n                return item.product.name;\n              }\n            }\n          })()}\n        </td>\n      ),\n      roasting_profile_id: (item) => (\n        <td>\n          {item.roasting_profile ? item.roasting_profile.roasting_profile : ''}\n        </td>\n      ),\n      show_details: (item) => {\n        return (\n          <td className=\"py-2\">\n            <CButton\n              size=\"sm\"\n              color=\"info\"\n              to={`/roasting/editRoasting/${item.id}`}\n              style={{ backgroundColor: \"#178d88\" }}\n            >\n              Edit\n            </CButton>\n            <CButton\n              size=\"sm\"\n              color=\"danger\"\n              className=\"ml-1\"\n              onClick={() => this.deleteRoasting(item)}\n              style={{ backgroundColor: \"#e2602c\" }}\n            >\n              Delete\n            </CButton>\n          </td>\n        );\n      },\n    };\n\n    const scopedSlots2 = {\n      bean_id: (item) => <td>{item.product ? item.product.name : '-'}</td>,\n    };\n\n    const fieldsRoasting = [\n      {\n        key: \"roasting_batch_id\",\n        label: \"Batch ID\",\n        _style: { width: \"10%\" },\n      },\n      {\n        key: \"roasting_name\",\n        label: \"Roasting Name\",\n        _style: { width: \"14%\" },\n      },\n      {\n        key: \"bean_id\",\n        label: \"Bean Name\",\n        _style: { width: \"14%\" },\n      },\n      {\n        key: \"roasting_profile_id\",\n        label: \"Roasting Product\",\n        _style: { width: \"13%\" },\n      },\n      {\n        key: \"flavor_note\",\n        label: \"Flavor Note\",\n        _style: { width: \"13%\" },\n      },\n      {\n        key: \"volume\",\n        label: \"Volume\",\n        _style: { width: \"10%\" },\n      },\n      {\n        key: \"tgl_roasting\",\n        label: \"Tanggal Roasting\",\n        _style: { width: \"16%\" },\n      },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"10%\" },\n        filter: false,\n      },\n    ];\n\n    const fieldsInventory = [\n      {\n        key: \"bean_id\",\n        label: \"Bean Name\",\n        _style: { width: \"80%\" },\n      },\n      {\n        key: \"weight\",\n        label: \"Weight\",\n        _style: { width: \"10%\" },\n      },\n      {\n        key: \"unit\",\n        label: \"Unit\",\n        _style: { width: \"10%\" },\n      },\n    ];\n\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>Roasting Data</h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/roasting/addRoasting\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content.roasting}\n                      fields={fieldsRoasting}\n                      itemsPerPage={10}\n                      pagination\n                      scopedSlots={scopedSlots1}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={12} md={12} lg={12} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>Inventory Data</h4>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content.inventory}\n                      fields={fieldsInventory}\n                      itemsPerPage={10}\n                      pagination\n                      scopedSlots={scopedSlots2}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProducts.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/AddUnit.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/EditProducts.js",["1261","1262","1263","1264"],"import { Fragment, useState, useEffect, useCallback, Component } from \"react\";\nimport EditProductForm from \"./EditProductForm\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport { useParams } from \"react-router\";\n\nconst EditProduct = () => {\n  const { id } = useParams();\n\n  const handleSubmit = async (values) => {\n    if (values.product_id) {\n      const formData = new FormData();\n      formData.append(\"productID\", values.product_id);\n      UserService.editProduct(id, formData).then(\n        showResults(\"Data has been changed\")\n      );\n    } else {\n      const formData = new FormData();\n\n      if (values.product_name != null) {\n        formData.append(\"name\", values.product_name);\n      }\n      if (values.biji_id != null) {\n        formData.append(\"biji_id\", values.biji_id);\n      }\n      if (values.jenis_id != null) {\n        formData.append(\"jenis_id\", values.jenis_id);\n      }\n      if (values.proses_id != null) {\n        formData.append(\"proses_id\", values.proses_id);\n      }\n      if (values.supplier_id != null) {\n        formData.append(\"supplier_id\", values.supplier_id);\n      }\n      UserService.editProduct(id, formData).then(\n        showResults(\"Data has been changed\")\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <EditProductForm onSubmit={handleSubmit} productID={id} />\n    </Fragment>\n  );\n};\n\nexport default EditProduct;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplier.js",["1265","1266","1267"],"import { Fragment, React, useState } from \"react\";\nimport DaftarSupplierForm from \"./DaftarSupplierForm\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst DaftarSupplier = () => {\n  const [files, imageFile] = useState(\"\");\n\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n\n  const onFileChange = (file) => {\n    imageFile(file);\n  };\n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = (values) => {\n    if (\n      values.nama_supplier &&\n      values.lokasi_supplier &&\n      values.nama_petani &&\n      lat != \"\" &&\n      long != \"\" &&\n      values.estimatedProduction &&\n      values.elevation &&\n      values.unit &&\n      files != \"\"\n    ) {\n      const formData = new FormData();\n      formData.append(\"nama_supplier\", values.nama_supplier);\n      formData.append(\"lokasi_supplier\", values.lokasi_supplier);\n      formData.append(\"nama_petani\", values.nama_petani);\n      formData.append(\"latitude\", lat);\n      formData.append(\"longitude\", long);\n      formData.append(\"estimatedProduction\", values.estimatedProduction);\n      formData.append(\"elevation\", values.elevation);\n      formData.append(\"unit\", values.unit);\n\n      formData.append(\"files\", files);\n      formData.append(\"fileName\", files.name);\n\n      UserService.addSupplierRoaster(formData).then(\n        showResults(\"Data has been added\")\n      );\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <DaftarSupplierForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        onSelectLat={onLatChange}\n        onSelectLong={onLongChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default DaftarSupplier;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/ProductLists.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/EditRoasting.js",["1268","1269"],"import { Fragment, useState } from \"react\";\nimport EditRoastingForm from \"./EditRoastingForm\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport { useParams } from \"react-router\";\n\nconst EditRoasting = () => {\n  const { id } = useParams();\n\n  const [roastingFile, setRoastingFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n\n  const onFileChangeGambar = (file) => {\n    imageFileGambar(file);\n  };\n\n  const handleSubmit = async (values) => {\n    const formData = new FormData();\n    \n    if (values.roastingName != null) {\n      formData.append(\"roasting_name\", values.roastingName);\n    }\n    if (values.roastingCupping != null) {\n      formData.append(\"cupping_id\", values.roastingCupping);\n    }\n    if (values.roastingProfile != null) {\n      formData.append(\"roasting_profile_id\", values.roastingProfile);\n    }\n    if (values.flavorNote != null) {\n      formData.append(\"flavor_note\", values.flavorNote);\n    }\n    if (values.acidity != null) {\n      formData.append(\"acidity\", values.acidity);\n    }\n    if (values.intensity != null) {\n      formData.append(\"intensity\", values.intensity);\n    }\n    if (values.tgl_roasting != null) {\n      formData.append(\"tgl_roasting\", values.tgl_roasting);\n    }\n    if (values.sku != null) {\n      formData.append(\"sku\", values.sku);\n    }\n    if (values.roaster_name != null) {\n      formData.append(\"roaster_name\", values.roaster_name);\n    }\n    if (values.bean != null) {\n      formData.append(\"bean_id\", values.bean);\n    }\n    if (roastingFile != undefined) {\n      formData.append(\"roastingFile\", roastingFile);\n      formData.append(\"roastingFileName\", roastingFile.name);\n      // for (let i = 0; i < roastingFile.length; i++) {\n      //   formData.append(\"roastingFile[]\", roastingFile[i]);\n      // }\n    }\n    if (filesGambar != \"\") {\n      formData.append(\"files_gambar\", filesGambar);\n      formData.append(\"fileName_gambar\", filesGambar.name);\n    }\n\n    UserService.editRoastingProduct(id, formData);\n    showResults(\"Data has been changed\");\n  };\n\n  const onRoastingChange = (file) => {\n    setRoastingFile(file);\n  };\n\n  return (\n    <Fragment>\n      <EditRoastingForm\n        onSubmit={handleSubmit}\n        roastingID={id}\n        onSelectRoasting={onRoastingChange}\n        onSelectImageGambar={onFileChangeGambar}\n      />\n    </Fragment>\n  );\n};\n\nexport default EditRoasting;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplierForm.js",["1270"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm, change } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport MyGoogleMap from \"./Google Maps/MyGoogleMap\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst DaftarSupplierForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [long, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [unit, setUnit] = useState([]);\n\n  const markerHandle = (lat, long) => {\n    setLong(long);\n    setLat(lat);\n    props.onSelectLat(lat);\n    props.onSelectLong(long);\n  };\n\n  const getUnit = async () => {\n    UserService.getListMasterData().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  useEffect(() => {\n    getUnit();\n  }, []);\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImage(file);\n  };\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          defaultValue={lat}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          defaultValue={long}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add Origin</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaSupplier\">Processor Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Processor Origin</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"lokasi_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-kebun\">Farm</CLabel>\n                  <div className=\"main-wrapper\">\n                    <MyGoogleMap onMarkerHandle={markerHandle} />\n                  </div>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                    Latitude\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                    Longitute\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLat}\n                      type=\"text\"\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLong}\n                      type=\"text\"\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-elevation\">\n                    Elevation\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-unit\">\n                    Unit\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"elevation\"\n                      component=\"input\"\n                      type=\"text\"\n                      required\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"unit\"\n                      component=\"select\"\n                      required\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        ----\n                      </option>\n                      {unit &&\n                        unit.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_unit}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaPetani\">Farmer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_petani\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-estimatedProduction\">\n                    Estimated Production\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"estimatedProduction\"\n                      component=\"input\"\n                      type=\"number\"\n                      required\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Ton</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-gambarPetani\">\n                    Farmer Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"gambar_petani\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarSupplier\", // a unique identifier for this form\n})(DaftarSupplierForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/EditRoastingForm.js",["1271","1272","1273"],"import { React, useState, useEffect } from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport { Fragment } from \"react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditRoastingForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [roastingProfile, setRoastingProfile] = useState([]);\n\n  const [roastingName, setRoastingName] = useState(\"\");\n  const [roastingCupping, setRoastingCupping] = useState(\"\");\n  const [roastingProfileName, setRoastingProfileName] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [beanID, setBeanID] = useState(\"\");\n  const [flavorNote, setFlavorNote] = useState(\"\");\n  const [acidity, setAcidity] = useState(\"\");\n  const [intensity, setIntensity] = useState(\"\");\n  const [volume, setVolume] = useState(\"\");\n  const [sku, setSKU] = useState(\"\");\n  const [roasterName, setRoasterName] = useState(\"\");\n\n  const [roastingMenu, setRoastingMenu] = useState(\"\");\n  const [blendedBeans, setBlendedBeans] = useState([]);\n\n  const [cupping, setCupping] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    UserService.getListMasterData().then((response) => {\n      setRoastingProfile(response.data.roasting_profile);\n    });\n\n    let id = props.roastingID;\n    UserService.getListCupping().then((response) => {\n      setCupping(response.data.roasting_cupping);\n    });\n    UserService.getDetailRoastingProduct(id).then((response) => {\n\n      console.log(response.data.roasting[0].roasting_cupping.curated_date);\n      setRoastingName(response.data.roasting[0].roasting_name);\n      setRoastingCupping(response.data.roasting[0].roasting_cupping.curated_date);\n      setRoastingMenu(response.data.roasting[0].roasting_menu);\n      setRoastingProfileName(\n        response.data.roasting[0].roasting_profile.roasting_profile\n      );\n\n      if (response.data.roasting[0].product != null) {\n        setProductName(response.data.roasting[0].product.name);\n      }\n\n      setBeanID(response.data.roasting[0].bean_id);\n      setFlavorNote(response.data.roasting[0].flavor_note);\n      setAcidity(response.data.roasting[0].acidity);\n      setIntensity(response.data.roasting[0].intensity);\n      setVolume(response.data.roasting[0].volume);\n      setSKU(response.data.roasting[0].sku);\n      setRoasterName(response.data.roasting[0].roaster_name);\n      setBlendedBeans(response.data.blendedBeans);\n    });\n  };\n\n  const renderBeans = () => (\n    <ul\n      style={{\n        listStyle: \"none\",\n        marginLeft: \"0px\",\n        padding: \"0px\",\n      }}\n    >\n      {blendedBeans.map((beans, index) => {\n        return (\n          <li key={index}>\n            <h4 style={{ marginTop: \"30px\" }}>Bean #{index + 1}</h4>\n            <Fragment>\n              <CFormGroup row>\n                <CLabel col xs=\"5\" htmlFor=\"selectBeanMultiple\">\n                  Select Bean\n                </CLabel>\n                <CLabel col xs=\"5\" htmlFor=\"persentase\">\n                  Persentase\n                </CLabel>\n                <CCol xs=\"5\">\n                  <Field\n                    className=\"textInput grosir\"\n                    name={`${index}.selectBean`}\n                    component=\"select\"\n                    disabled\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {(() => {\n                        if (beans.product != null) {\n                          return beans.product.name;\n                        } else {\n                          return \"DELETED\";\n                        }\n                      })()}\n                    </option>\n                  </Field>\n                </CCol>\n                <CCol xs=\"5\">\n                  <Field\n                    className=\"textInput grosir\"\n                    name={`${index}.persentase`}\n                    component=\"input\"\n                    type=\"number\"\n                    placeholder={beans.persentase}\n                    disabled\n                  />\n                </CCol>\n                <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                  <span>%</span>\n                </CCol>\n              </CFormGroup>\n            </Fragment>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  const onRoastingChanges = (e) => {\n    const file = e.target.files[0];\n    props.onSelectRoasting(file);\n  };\n\n  const onFileChangeGambar = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImageGambar(file);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Roasting Data</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/roasting\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-roastingName\">Roasting Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"roastingName\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={roastingName}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-roastingCupping\">Roasting Cupping</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"roastingCupping\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {roastingCupping}\n                    </option>\n                    {cupping &&\n                      cupping.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.curated_date}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-roastingProfile\">Roasting Profile</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"roastingProfile\"\n                    component=\"select\"\n                  >\n                    <option value=\"\" selected disabled hidden>\n                      {roastingProfileName}\n                    </option>\n                    {roastingProfile &&\n                      roastingProfile.map((value) => {\n                        return (\n                          <option key={value.id} value={value.id}>\n                            {value.roasting_profile}\n                          </option>\n                        );\n                      })}\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-flavorNote\">Flavor Note</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"flavorNote\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={flavorNote}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-acidity\">Acidity</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"acidity\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={acidity}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-intensity\">Intensity</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"intensity\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={intensity}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-weight\">\n                    Volume <small>*</small>\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"weight\"\n                      component=\"input\"\n                      type=\"number\"\n                      disabled\n                      placeholder={volume}\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Kg</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-sku\">SKU</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"sku\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={sku}\n                  />\n                </CFormGroup>\n\n                {roastingMenu == \"Single\" && (\n                  <Fragment>\n                    <CFormGroup row>\n                      <CLabel col xs=\"12\" htmlFor=\"nf-bean\">\n                        Select Bean\n                      </CLabel>\n                      <CCol xs=\"12\">\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"bean\"\n                          component=\"select\"\n                          disabled\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            {productName}\n                          </option>\n                        </Field>\n                      </CCol>\n                    </CFormGroup>\n                  </Fragment>\n                )}\n                {roastingMenu === \"Blended\" && (\n                  <FieldArray name=\"beans\" component={renderBeans} />\n                )}\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-tgl_roasting\">\n                    Roasting Date <small>*</small>\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"tgl_roasting\"\n                    component=\"input\"\n                    type=\"date\"\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-roaster_name\">Roaster Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"roaster_name\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={roasterName}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-roasting_process\">\n                    Roasting Process\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"roastingProcess\"\n                      type=\"file\"\n                      onChange={onRoastingChanges}\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-files_gambar\">\n                    Roasting Image <small>*</small>\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"files_gambar\"\n                      type=\"file\"\n                      onChange={onFileChangeGambar}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editRoasting\", // a unique identifier for this form\n})(EditRoastingForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/EditProductForm.js",["1274","1275","1276","1277","1278","1279","1280","1281","1282","1283"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CCollapse,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst AddProductForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n\n  const [productID, setProductID] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [bijiName, setBijiName] = useState(\"\");\n  const [varietasName, setVarietasName] = useState(\"\");\n  const [prosesName, setProsesName] = useState(\"\");\n  const [supplierName, setSupplierName] = useState(\"\");\n\n  const [accordion, setAccordion] = useState(0);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    UserService.getAddDetailRoaster().then((response) => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n\n    let id = props.productID;\n    UserService.getDetailProductRoaster(id).then((response) => {\n      if (response.data.product[0].productID) {\n        setAccordion(0);\n      }\n\n      setProductID(response.data.product[0].productID);\n      setProductName(response.data.product[0].name);\n\n      if (response.data.product[0].biji) {\n        setBijiName(response.data.product[0].biji.nama_biji);\n      }\n      if (response.data.product[0].jenis) {\n        setVarietasName(response.data.product[0].jenis.nama_jenis);\n      }\n      if (response.data.product[0].proses) {\n        setProsesName(response.data.product[0].proses.nama_proses);\n      }\n      if (response.data.product[0].supplier) {\n        setSupplierName(response.data.product[0].supplier.lokasi_supplier);\n      }\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Green Beans</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/greenBeans\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <div id=\"accordion\">\n                  <CCard className=\"mb-0\">\n                    <CCardHeader id=\"headingOne\">\n                      <CButton\n                        block\n                        className=\"text-left m-0 p-0\"\n                        onClick={() => setAccordion(accordion === 0 ? null : 0)}\n                      >\n                        <h5 className=\"m-0 p-0\">Import Green Beans Product</h5>\n                      </CButton>\n                    </CCardHeader>\n                    <CCollapse show={accordion === 0}>\n                      <CCardBody>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-product_id\">Product ID</CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"product_id\"\n                            component=\"input\"\n                            type=\"text\"\n                            placeholder={productID}\n                          />\n                        </CFormGroup>\n                      </CCardBody>\n                    </CCollapse>\n                  </CCard>\n                  {/* <CCard className=\"mb-0\">\n                    <CCardHeader id=\"headingTwo\">\n                      <CButton\n                        block\n                        className=\"text-left m-0 p-0\"\n                        onClick={() => setAccordion(accordion === 1 ? null : 1)}\n                      >\n                        <h5 className=\"m-0 p-0\">\n                          Create New Green Beans Product\n                        </h5>\n                      </CButton>\n                    </CCardHeader>\n                    <CCollapse show={accordion === 1}>\n                      <CCardBody>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-name\">\n                            Product Name <small>*</small>\n                          </CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"product_name\"\n                            component=\"input\"\n                            type=\"text\"\n                            placeholder={productName}\n                          />\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-pilihJenis\">Select Beans</CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"biji_id\"\n                            component=\"select\"\n                          >\n                            <option value=\"\" selected disabled hidden>\n                              {bijiName}\n                            </option>\n                            {biji &&\n                              biji.map((value) => {\n                                return (\n                                  <option key={value.id} value={value.id}>\n                                    {value.nama_biji}\n                                  </option>\n                                );\n                              })}\n                          </Field>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-pilihSupplier\">\n                            Select Variety\n                          </CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"jenis_id\"\n                            component=\"select\"\n                          >\n                            <option value=\"\" selected disabled hidden>\n                              {varietasName}\n                            </option>\n                            {jenis &&\n                              jenis.map((value) => {\n                                return (\n                                  <option key={value.id} value={value.id}>\n                                    {value.nama_jenis}\n                                  </option>\n                                );\n                              })}\n                          </Field>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-pilihProses\">\n                            Select Process\n                          </CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"proses_id\"\n                            component=\"select\"\n                          >\n                            <option value=\"\" selected disabled hidden>\n                              {prosesName}\n                            </option>\n                            {proses &&\n                              proses.map((value) => {\n                                return (\n                                  <option key={value.id} value={value.id}>\n                                    {value.nama_proses}\n                                  </option>\n                                );\n                              })}\n                          </Field>\n                        </CFormGroup>\n                        <CFormGroup>\n                          <CLabel htmlFor=\"nf-pilihSupplier\">\n                            Select Origin\n                          </CLabel>\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"supplier_id\"\n                            component=\"select\"\n                          >\n                            <option value=\"\" selected disabled hidden>\n                              {supplierName}\n                            </option>\n                            {supplier &&\n                              supplier.map((value) => {\n                                return (\n                                  <option key={value.id} value={value.id}>\n                                    {value.lokasi_supplier}\n                                  </option>\n                                );\n                              })}\n                          </Field>\n                        </CFormGroup>\n                      </CCardBody>\n                    </CCollapse>\n                  </CCard> */}\n                </div>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"addProduct\", // a unique identifier for this form\n})(AddProductForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/AddUnitForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProductForm.js",["1284","1285","1286","1287","1288","1289","1290"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CCollapse,\n  CRow,\n  CCol,\n  CDataTable,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst AddProductForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n  const [product, setProduct] = useState([]);\n\n  const [accordion, setAccordion] = useState(0);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const arrProduct = [];\n\n\n  const getData = async () => {\n    UserService.getAddDetailRoaster().then((response) => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n    UserService.getListProduct().then((response) => {\n\n      response.data.product.map((value, index) => {\n        arrProduct.push(value.product);\n      })\n\n      setProduct(arrProduct);\n    });\n\n  };\n\n  const Data = [\n    { key: \"id\", label: \"Product ID\"},\n    { key: \"name\", label: \"Name\"},\n    { key: \"created_at\", label: \"Created Date\"},\n  ];\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                items={product}\n                fields={Data}\n                itemsPerPage={5}\n                tableFilter\n                cleaner\n                itemsPerPageSelect\n                hover\n                sorter\n                pagination\n                // scopedSlots={{\n                //   getName: (item) => {\n                //     return (\n                //       <td className=\"py-2\">\n                //         <div>\n                //           {item.name}\n                //         </div>\n                //       </td>\n                //     );\n                //   },\n                // }}\n              />\n            </CCardBody>\n          </CCard>\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add Green Beans</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/greenBeans\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <div id=\"accordion\">\n                <CCard className=\"mb-0\">\n                  <CCardHeader id=\"headingOne\">\n                    <CButton\n                      block\n                      className=\"text-left m-0 p-0\"\n                      onClick={() => setAccordion(accordion === 0 ? null : 0)}\n                    >\n                      <h5 className=\"m-0 p-0\">Import Green Beans Product</h5>\n                    </CButton>\n                  </CCardHeader>\n                  <CCollapse show={accordion === 0}>\n                    <CCardBody>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-product_id\">Product ID</CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"product_id\"\n                          component=\"input\"\n                          type=\"text\"\n                        />\n                      </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard>\n                {/* <CCard className=\"mb-0\">\n                  <CCardHeader id=\"headingTwo\">\n                    <CButton\n                      block\n                      className=\"text-left m-0 p-0\"\n                      onClick={() => setAccordion(accordion === 1 ? null : 1)}\n                    >\n                      <h5 className=\"m-0 p-0\">\n                        Create New Green Beans Product\n                      </h5>\n                    </CButton>\n                  </CCardHeader>\n                  <CCollapse show={accordion === 1}>\n                    <CCardBody>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-name\">\n                          Product Name <small>*</small>\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"product_name\"\n                          component=\"input\"\n                          type=\"text\"\n                        />\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihJenis\">Select Beans</CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"biji_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {biji &&\n                            biji.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_biji}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Variety\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"jenis_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {jenis &&\n                            jenis.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_jenis}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Process\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"proses_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {proses &&\n                            proses.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_proses}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Origin\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"supplier_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {supplier &&\n                            supplier.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.lokasi_supplier}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CLabel col xs=\"12\" htmlFor=\"nf-weight\">\n                          Weight <small>*</small>\n                        </CLabel>\n                        <CCol xs=\"10\">\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"weight\"\n                            component=\"input\"\n                            type=\"text\"\n                          />\n                        </CCol>\n                        <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                          <span>Kg</span>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard> */}\n              </div>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"addProduct\", // a unique identifier for this form\n})(AddProductForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfileForm.js",["1291"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditRoastingProfileForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [roastingProfile, setRoastingProfile] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.roastingProfileID;\n    UserService.getDetailRoastingProfile(id).then((response) => {\n      setRoastingProfile(response.data.roasting_profile.roasting_profile);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Proses</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-roasting_profile\">\n                    Roasting Profile\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"roasting_profile\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={roastingProfile}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editRoastingProfile\", // a unique identifier for this form\n})(EditRoastingProfileForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplierForm.js",["1292","1293","1294","1295"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\nimport MyGoogleMap from \"./Google Maps/MyGoogleMap\";\n\nconst EditSupplierForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    props.onSelectImage(file);\n  };\n\n  const [namaSupplier, setNama] = useState(\"\");\n  const [lokasiSupplier, setLokasi] = useState(\"\");\n  const [namaPetani, setNamaPetani] = useState(\"\");\n  const [estimatedProduction, setEstimatedProduction] = useState(\"\");\n  const [elevation, setElevation] = useState(\"\");\n  const [supplierUnit, setSupplierUnit] = useState(\"\");\n\n  const [long, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [unit, setUnit] = useState([]);\n\n  const markerHandle = (lat, long) => {\n    setLong(long);\n    setLat(lat);\n    props.onSelectLat(lat);\n    props.onSelectLong(long);\n  };\n\n  const getUnit = async () => {\n    UserService.getListMasterData().then((response) => {\n      setUnit(response.data.unit);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    getUnit();\n  }, []);\n\n  const getData = async () => {\n    let id = props.supplierID;\n    UserService.getDetailSupplierRoaster(id).then((response) => {\n      setNama(response.data.supplier.nama_supplier);\n      setLokasi(response.data.supplier.lokasi_supplier);\n      setNamaPetani(response.data.supplier.nama_petani);\n      setEstimatedProduction(response.data.supplier.estimated_production);\n      setLat(response.data.supplier.lat);\n      setLong(response.data.supplier.long);\n      setSupplierUnit(response.data.supplier.unit);\n      setElevation(response.data.supplier.elevation);\n    });\n  };\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          defaultValue={lat}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          defaultValue={long}\n          disabled\n        />\n      </div>\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Origin</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaSupplier\">Processor Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaSupplier}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-lokasiSupplier\">Processor Origin</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"lokasi_supplier\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={lokasiSupplier}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-kebun\">Farm</CLabel>\n                  <div className=\"main-wrapper\">\n                    <MyGoogleMap\n                      onMarkerHandle={markerHandle}\n                      latProps={lat}\n                      longProps={long}\n                    />\n                  </div>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                    Latitude\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                    Longitute\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLat}\n                      type=\"text\"\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"longitude\"\n                      component={customInputLong}\n                      type=\"text\"\n                    />\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-elevation\">\n                    Elevation\n                  </CLabel>\n                  <CLabel col xs=\"6\" htmlFor=\"nf-unit\">\n                    Unit\n                  </CLabel>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"elevation\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder={elevation}\n                    />\n                  </CCol>\n                  <CCol xs=\"6\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"unit\"\n                      component=\"select\"\n                    >\n                      <option value=\"\" selected disabled hidden>\n                        {unit.map((value) => {\n                          if (value.id == supplierUnit) {\n                            return value.nama_unit;\n                          }\n                        })}\n                      </option>\n                      {unit &&\n                        unit.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_unit}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaPetani\">Farmer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_petani\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaPetani}\n                  />\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"nf-estimatedProduction\">\n                    Estimated Production\n                  </CLabel>\n                  <CCol xs=\"10\">\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"estimatedProduction\"\n                      component=\"input\"\n                      type=\"number\"\n                      placeholder={estimatedProduction}\n                    />\n                  </CCol>\n                  <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Ton</span>\n                  </CCol>\n                </CFormGroup>\n                <CFormGroup row>\n                  <CLabel col xs=\"12\" htmlFor=\"file-gambarPetani\">\n                    Farmer Image\n                  </CLabel>\n                  <CCol xs=\"12\">\n                    <CInputFile\n                      id=\"file-input\"\n                      name=\"gambar_petani\"\n                      type=\"file\"\n                      onChange={onFileChange}\n                    />\n                  </CCol>\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editSupplier\", // a unique identifier for this form\n})(EditSupplierForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoastingForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfileForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietasForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/EditProsesForm.js",["1296"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditProsesForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaProses, setNama] = useState(\"\");\n  const [deskripsiProses, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let id = props.prosesID;\n    UserService.detailProsesRoaster(id).then((response) => {\n      setNama(response.data.proses.nama_proses);\n      setDeskripsi(response.data.proses.deskripsi_proses);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Proses</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaProses\">Process Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_proses\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaProses}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiProses\">\n                    Process Description\n                  </CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_proses\"\n                    component=\"textarea\"\n                    placeholder={deskripsiProses}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editProses\", // a unique identifier for this form\n})(EditProsesForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Proses/DaftarProsesForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Unit/EditUnitForm.js",["1297"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditUnitForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaUnit, setNama] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let id = props.unitID;\n    UserService.detailUnitRoaster(id).then((response) => {\n      setNama(response.data.unit.nama_unit);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Unit</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaJenis\">Unit Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_unit\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaUnit}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editUnit\", // a unique identifier for this form\n})(EditUnitForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietasForm.js",["1298"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditVarietasForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaVarietas, setNama] = useState(\"\");\n  const [deskripsiVarietas, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let id = props.jenisID;\n    UserService.getDetailJenisRoaster(id).then(\n      (response) => {\n        setNama(response.data.jenis.nama_jenis);\n        setDeskripsi(response.data.jenis.deskripsi_jenis);\n      },\n      (error) => {}\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Variety</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaJenis\">Variety Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_jenis\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaVarietas}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiJenis\">\n                    Variety Description\n                  </CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_jenis\"\n                    component=\"textarea\"\n                    placeholder={deskripsiVarietas}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editVarietas\", // a unique identifier for this form\n})(EditVarietasForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGroundForm.js",["1299","1300"],"import { React, useState } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport { Fragment } from \"react\";\n\nconst AddWholeBeanGroundForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add Whole Bean / Ground</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-whole_bean\">\n                    Whole Bean / Ground\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"whole_bean\"\n                    component=\"input\"\n                    type=\"text\"\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"addWholeBeanGround\", // a unique identifier for this form\n})(AddWholeBeanGroundForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGroundForm.js",["1301","1302"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditRoastingProfileForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [wholeBean, setWholeBean] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let id = props.wholeBeanID;\n    UserService.getDetailWholeBean(id).then(\n      (response) => {\n        setWholeBean(response.data.whole_bean.whole_bean);\n      },\n      (error) => {}\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Whole Bean / Ground</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-whole_bean\">Roasting Profile</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"whole_bean\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={wholeBean}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editRoastingProfile\", // a unique identifier for this form\n})(EditRoastingProfileForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/AddBeansForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Beans/EditBeansForm.js",["1303"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditBijiForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [namaBiji, setNama] = useState(\"\");\n  const [deskripsiBiji, setDeskripsi] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    let id = props.bijiID;\n    UserService.detailBijiRoaster(id).then(\n      (response) => {\n        setNama(response.data.biji.nama_biji);\n        setDeskripsi(response.data.biji.deskripsi_biji);\n      },\n      (error) => {}\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Beans</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/masterData\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaBiji\">Beans Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"nama_biji\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={namaBiji}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-deskripsiBiji\">Beans Description</CLabel>\n                  <Field\n                    className=\"textAreaInput grosir\"\n                    name=\"deskripsi_biji\"\n                    component=\"textarea\"\n                    placeholder={deskripsiBiji}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editBiji\", // a unique identifier for this form\n})(EditBijiForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js",["1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321"],"import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      roasting_id: 0,\n      product_id: 0,\n      code: \"\",\n      roasting: null,\n      cupping: null,\n      blendedBeans: [],\n      harvestImage: [],\n      certificateRoasting: null,\n      certificateBatch: null,\n      roastingProcessImg: null,\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 11,\n      address: \"\",\n      // draggable: true,\n      lat: null,\n      lng: null,\n      isOpen: false,\n    };\n  }\n\n  renderMyMaps = () => {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 11;\n    const defaultCenter = { lat: parseFloat(this.state.lat), lng: parseFloat(this.state.lng) }\n    const locations = [\n      {\n        lat: parseFloat(this.state.lat),\n        lng: parseFloat(this.state.lng),\n        draggable: false,\n        title: this.state.address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => this.setState({isOpen: !this.state.isOpen})} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { this.state.isOpen &&\n            <InfoWindow onCloseClick={() => this.setState({isOpen: false})}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n\n  async componentDidMount() {\n    let id = this.props.roastingID;\n    this.setState({ roasting_id: id });\n\n    let code = this.props.code;\n    this.setState({\n      code: code,\n    });\n\n    await UserService.getDetailRoastingProductGuest(code, id).then((response) => {\n      console.log('cek', response.data);\n      if (response.data.roasting[0]) {\n        this.setState({\n          roasting: response.data.roasting,\n          blendedBeans: response.data.blendedBeans,\n          cupping: response.data.roasting_cupping,\n          certificateRoasting: response.data.cuppingCertificate,\n          roastingProcessImg: response.data.roastingProcessImg,\n          // lat: response.data.roasting[0].product.supplier.lat,\n          // lng: response.data.roasting[0].product.supplier.long,\n        })\n\n        if(response.data.roasting[0].product.supplier) {\n          this.setState({\n            lat: response.data.roasting[0].product.supplier.lat,\n            lng: response.data.roasting[0].product.supplier.long,\n          })\n        } else {\n          this.setState({\n            lat: response.data.roasting[0].product.green_beans.batch.supplier.lat,\n            lng: response.data.roasting[0].product.green_beans.batch.supplier.long,\n          })\n        }\n\n        // UserService.getDetailCuppingGuest(code, response.data.roasting[0].cupping_id).then((response) => {\n        //   this.setState({\n        //     cupping: response.data.roasting_cupping,\n        //     certificateRoasting: response.data.cuppingCertificate,\n        //   });\n        // });\n\n        //Single Origin\n        if (response.data.roasting[0].roasting_menu == \"Single\") {\n          //Single Origin Create Product\n          if (response.data.roasting[0].product.productID == null) {\n            this.setState({\n              status: \"Single Origin\",\n              certificateBatch: [],\n            });\n          } else {\n            //Single Origin Import Green Beans\n            if (response.data.roasting[0].product.green_beans.batch != null) {\n              this.setState({\n                status: \"Single Origin Import Green Beans\",\n              });\n\n              let id = response.data.roasting[0].product.green_beans.batch.id;\n              UserService.getDetailBatchGuest(code, id).then((response) => {\n                this.setState({\n                  harvestImage: response.data.imageBatch,\n                  certificateBatch: response.data.certificateBatch,\n                });\n              });\n            }\n            //Single Origin Import Blended Green Beans\n            else {\n              this.setState({\n                status: \"Single Origin Import Blended Green Beans\",\n              });\n              let id = response.data.roasting[0].product.productID;\n              UserService.getDetailGreenBeansGuest(code, id).then(\n                (response) => {\n                  this.setState({\n                    blendedBeans: response.data.blendedBeans,\n                  });\n                  response.data.blendedBeans.map((value) => {\n                    if (value.batch != null) {\n                      let id = value.batch.batch_id;\n                      UserService.getDetailBatchByBatchIDGuest(code, id).then(\n                        (response) => {\n                          this.setState((prevState) => ({\n                            harvestImage: [\n                              ...prevState.harvestImage,\n                              response.data.imageBatch,\n                            ],\n                            certificateBatch: [\n                              ...prevState.certificateBatch,\n                              response.data.certificateBatch,\n                            ],\n                          }));\n                        }\n                      );\n                    }\n                  });\n                }\n              );\n            }\n          }\n        }\n        //Blended Beans\n        else {\n          this.setState({\n            status: \"Blended Beans\",\n            certificateBatch: [],\n          });\n          response.data.blendedBeans.map((value) => {\n            if (value.product != null) {\n              if (value.product.productID != null) {\n                if (value.product.green_beans.batch != null) {\n                  let id = value.product.green_beans.batch.id;\n                  UserService.getDetailBatchGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      harvestImage: [\n                        ...prevState.harvestImage,\n                        response.data.imageBatch,\n                      ],\n                      certificateBatch: [\n                        ...prevState.certificateBatch,\n                        response.data.certificateBatch,\n                      ],\n                    }));\n                  });\n                } else {\n                  //Get Blended Beans Import Green Beans\n                  let id = value.product.productID;\n                  UserService.getProdukGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      blendedBeans: [\n                        ...prevState.blendedBeans,\n                        response.data.blendedBeans[0],\n                        response.data.blendedBeans[1],\n                      ],\n                    }));\n                  });\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n\n  }\n\n  renderCarouselImage = () => {\n    let menuItems = [];\n    if (this.state.harvestImage != null) {\n      if (this.state.harvestImage.length >= 1) {\n        this.state.harvestImage &&\n          this.state.harvestImage.map((value2) => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2[i].images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              }\n            } else if (value2.length == 1) {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2[0].images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            } else {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2.images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            }\n          });\n      }\n    }\n    return menuItems;\n  };\n\n  renderCuppingCertificate = () => {\n    let menuItems = [];\n\n    if (this.state.certificateRoasting) {\n      for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n        let filename = MARKETPLACE_URL + this.state.certificateRoasting[i].certificates;\n\n        if(filename.split('.').pop() === 'jpg' || filename.split('.').pop() === 'png' || filename.split('.').pop() === 'jpeg') {\n          menuItems.push(\n            // <CCarouselItem>\n              <CImg\n                src={\n                  MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n                }\n                className=\"d-block w-100\"\n              />\n            // </CCarouselItem>\n          );\n        } else {\n          menuItems.push(\n            <div className=\"iframe-container\">\n              <iframe className=\"responsive-iframe\" src={\n                  MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n                }\n              >\n              </iframe>\n              <p>{\" \"}</p>\n            </div>\n          );\n        }\n        // menuItems.push(\n        //   <CCarouselItem>\n        //     <CImg\n        //       src={\n        //         MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n        //       }\n        //       className=\"d-block w-100\"\n        //     />\n        //   </CCarouselItem>\n        // );\n      }\n    }\n\n    if (this.state.certificateRoasting) {\n      return menuItems;\n    }\n  };\n\n  renderBatchCertificate = () => {\n    let menuItems = [];\n    if (this.state.certificateBatch) {\n      for (let i = 0; i < this.state.certificateBatch.length; i++) {\n        menuItems.push(\n          <CCarouselItem>\n            <CImg\n              src={\n                MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n              }\n              className=\"d-block w-100\"\n            />\n          </CCarouselItem>\n        );\n      }\n    }\n\n    if (this.state.certificateBatch) {\n      return menuItems;\n    }\n  }\n\n  // renderCarouselCertificate = () => {\n  //   let menuItems = [];\n  //   if (this.state.certificateRoasting != null) {\n  //     for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch != null) {\n  //     for (let i = 0; i < this.state.certificateBatch.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch && this.state.certificateRoasting) {\n  //     return menuItems;\n  //   }\n  // };\n\n  renderDetailRoasting = () => {\n    if (this.state.roasting) {\n      return (\n        <Fragment>\n\n          {/* data green bean */}\n          <CRow>\n            {(() => {\n              if(this.state.blendedBeans.length > 0) {\n                return this.state.blendedBeans.map((value, index) => {\n                  return (\n                    <Fragment key={index}>\n                      <CCol xs=\"2\" lg=\"5\">\n                        <h1\n                          style={{\n                            transform: \"rotate(180deg)\",\n                            transformOrigin: \"20% 100%\",\n                            writingMode: \"vertical-lr\",\n                            color: \"darkOrange\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          <strong>Green Bean Blended {index + 1}</strong>\n                        </h1>\n                      </CCol>\n\n                      <CCol xs=\"10\" lg=\"7\">\n                        <p>\n                          <strong>SKU {index + 1}:</strong> {value.product.green_beans.sku}\n                        </p>\n                        <p>\n                          <strong>Batch Number {index + 1}:</strong> {value.product.green_beans.batch.batch_id}\n                        </p>\n                        <p>\n                          <strong>Country Of Origin {index + 1}:</strong> Indonesia\n                        </p>\n                        <p>\n                          <strong>Origin {index + 1}:</strong> {value.product.green_beans.batch.supplier.lokasi_supplier}\n                        </p>\n                        <p>\n                          <strong>Farm {index + 1}:</strong> {value.product.green_beans.batch.supplier.nama_supplier}\n                        </p>\n                        <p>\n                          <strong>Elevation {index + 1}:</strong> {value.product.green_beans.batch.supplier.elevation}\n                        </p>\n                        <p>\n                          <strong>Harvesting Year {index + 1}:</strong> {value.product.green_beans.batch.tgl_panen}\n                        </p>\n                        <p>\n                          <strong>Variety {index + 1}:</strong> {value.product.green_beans.batch.jenis.deskripsi_jenis}\n                        </p>\n                        <p>\n                          <strong>Process {index + 1}:</strong> {value.product.green_beans.batch.proses.deskripsi_proses}\n                        </p>\n                        <p>\n                          <strong>Moisture {index + 1}:</strong> {value.product.green_beans.batch.moisture}\n                        </p>\n                        <p>\n                          <strong>Google Map Location {index + 1}:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={value.product.green_beans.batch.supplier.link_maps ? value.product.green_beans.batch.supplier.link_maps : '#'}>{value.product.green_beans.batch.supplier.link_maps ? value.product.green_beans.batch.supplier.link_maps : '-'}</a>\n                        </p>\n                        {/* <CCard>\n                          <CCardBody>\n                            {this.renderMaps()}\n                          </CCardBody>\n                        </CCard> */}\n                        <div style={{width: \"100%\", height: \"400px\" }}>\n                          {this.renderMyMaps()}\n                        </div>\n                        <p></p>\n                        {/* <p>\n                          <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '#'}>{this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '-'}</a>\n                        </p> */}\n                        <p>\n                          <strong>Storytelling {index + 1}:</strong> {value.product.green_beans.batch.storytelling}\n                        </p>\n                        <p>\n                          <strong>Photo and Video Culture {index + 1}:</strong> {\" \"}\n                        </p>\n                        <div className=\"iframe-container\">\n                          {/* <iframe className=\"responsive-iframe\"\n                            src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                          </iframe> */}\n                          <iframe className=\"responsive-iframe\"\n                            // src={this.state.batch.video_culture}>\n                            src={value.product.green_beans.batch.video_culture.replace(\"watch?v=\", \"embed/\")}>\n                          </iframe>\n                          <p>{\" \"}</p>\n                        </div>\n                        <p>\n                          <strong>Process Photo {index}:</strong> {\" \"}\n                          <CImg\n                            src={MARKETPLACE_URL + value.product.green_beans.thumbnail}\n                            className=\"d-block w-100\"\n                          />\n                        </p>\n                        <p>\n                          <strong>Volume {index}:</strong> {value.product.green_beans.batch.volume}\n                        </p>\n\n                        <hr\n                          style={{\n                            marginTop: \"60px\",\n                            color: \"#178d88\",\n                            backgroundColor: \"#178d88\",\n                            height: 2,\n                          }}\n                        />\n                      </CCol>\n                    </Fragment>\n                  )\n                })\n              } else {\n                return (\n                  <Fragment>\n                    <CCol xs=\"2\" lg=\"5\">\n                      <h1\n                        style={{\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"20% 100%\",\n                          writingMode: \"vertical-lr\",\n                          color: \"darkOrange\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        <strong>Green Bean</strong>\n                      </h1>\n                    </CCol>\n\n                    <CCol xs=\"10\" lg=\"7\">\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].product.green_beans.sku}\n                      </p>\n                      <p>\n                        <strong>Batch Number:</strong> {this.state.roasting[0].product.green_beans.batch.batch_id}\n                      </p>\n                      <p>\n                        <strong>Country Of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Origin:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.lokasi_supplier}\n                      </p>\n                      <p>\n                        <strong>Farm:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.elevation}\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong> {this.state.roasting[0].product.green_beans.batch.tgl_panen}\n                      </p>\n                      <p>\n                        <strong>Variety:</strong> {this.state.roasting[0].product.green_beans.batch.jenis.deskripsi_jenis}\n                      </p>\n                      <p>\n                        <strong>Process:</strong> {this.state.roasting[0].product.green_beans.batch.proses.deskripsi_proses}\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong> {this.state.roasting[0].product.green_beans.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Google Map Location:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '#'}>{this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '-'}</a>\n                      </p>\n                      {/* <CCard>\n                        <CCardBody>\n                          {this.renderMaps()}\n                        </CCardBody>\n                      </CCard> */}\n                      <div style={{width: \"100%\", height: \"400px\" }}>\n                        {this.renderMyMaps()}\n                      </div>\n                      <p></p>\n                      {/* <p>\n                        <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '#'}>{this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '-'}</a>\n                      </p> */}\n                      <p>\n                        <strong>Storytelling:</strong> {this.state.roasting[0].product.green_beans.batch.storytelling}\n                      </p>\n                      <p>\n                        <strong>Photo and Video Culture:</strong> {\" \"}\n                      </p>\n                      <div className=\"iframe-container\">\n                        {/* <iframe className=\"responsive-iframe\"\n                          src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                        </iframe> */}\n                        <iframe className=\"responsive-iframe\"\n                          // src={this.state.batch.video_culture}>\n                          src={this.state.roasting[0].product.green_beans.batch.video_culture.replace(\"watch?v=\", \"embed/\")}>\n                        </iframe>\n                        <p>{\" \"}</p>\n                      </div>\n                      <p>\n                        <strong>Process Photo:</strong> {\" \"}\n                        <CImg\n                          src={MARKETPLACE_URL + this.state.roasting[0].product.green_beans.thumbnail}\n                          className=\"d-block w-100\"\n                        />\n                      </p>\n                      <p>\n                        <strong>Volume:</strong> {this.state.roasting[0].product.green_beans.batch.volume}\n                      </p>\n                      {/* <p>\n                        <strong>Certification Photos:</strong> {\" \"}\n                      </p>\n                      <CCol xs=\"10\" lg=\"7\">\n                        <CCol xs=\"12\" lg=\"7\">\n                          <CCard>\n                            <CCardBody>\n                              <CCarousel>\n                                <CCarouselInner>\n                                  {this.renderBatchCertificate()}\n                                </CCarouselInner>\n                                <CCarouselControl direction=\"prev\" />\n                                <CCarouselControl direction=\"next\" />\n                              </CCarousel>\n                            </CCardBody>\n                          </CCard>\n                        </CCol> \n                        <hr\n                          style={{\n                            marginTop: \"60px\",\n                            color: \"#178d88\",\n                            backgroundColor: \"#178d88\",\n                            height: 2,\n                          }}\n                        />\n                      </CCol>*/}\n                      <hr\n                        style={{\n                          marginTop: \"60px\",\n                          color: \"#178d88\",\n                          backgroundColor: \"#178d88\",\n                          height: 2,\n                        }}\n                      />\n\n                    </CCol>\n                  </Fragment>\n                )\n              }\n            })()}\n\n          </CRow>\n          {/* end data green bean */}\n\n\n          {/* data cupping */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Cupping</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>Curated Date:</strong> {this.state.cupping.curated_date}\n                </p>\n                <p>\n                  <strong>Curated By:</strong> {this.state.cupping.curated_by}\n                </p>\n                <p>\n                  <strong>Fragrance / Aroma:</strong> {this.state.cupping.fragrance_aroma}\n                </p>\n                <p>\n                  <strong>Flavor:</strong> {this.state.cupping.flavor}\n                </p>\n                <p>\n                  <strong>Aftertaste:</strong> {this.state.cupping.aftertaste}\n                </p>\n                <p>\n                  <strong>Acidity:</strong> {this.state.cupping.acidity}\n                </p>\n                <p>\n                  <strong>Body:</strong> {this.state.cupping.body}\n                </p>\n                <p>\n                  <strong>Cupping Score:</strong> {this.state.cupping.cupping_score}\n                </p>\n                <p>\n                  <strong>Category (options):</strong> {this.state.cupping.category}\n                </p>\n                <p>\n                  <strong>Cupping Certificates:</strong> {\" \"}\n                </p>\n                {this.renderCuppingCertificate()}\n                {/* <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderCuppingCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol> */}\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data cupping */}\n\n          {/* data roaster */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Roaster</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Roasted Bean:</strong> {this.state.roasting[0].sku}\n                </p>\n                <p>\n                  <strong>Tanggal Roasted:</strong> {this.state.roasting[0].tgl_roasting}\n                </p>\n                <p>\n                  <strong>Roaster Name:</strong> {this.state.roasting[0].roasting_name}\n                </p>\n                <p>\n                  <strong>Roasted Profile:</strong> {this.state.roasting[0].roasting_profile.roasting_profile}\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.roasting[0].volume}\n                </p>\n                <p>\n                  <strong>Foto Roasting Process:</strong> {\" \"}\n                </p>\n                {(() => {\n                  if(this.state.roastingProcessImg) {\n                    return (\n                      <CImg\n                        src={MARKETPLACE_URL + this.state.roastingProcessImg.roasting_process}\n                        className=\"d-block w-100\"\n                      />\n                    )\n                  } else {\n                    return (\n                      <>\n                        {`-`}\n                      </>\n                    )\n                  }\n                })()}\n                <p>\n                  <strong>Foto Produk:</strong> {\" \"}\n                </p>\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                  className=\"d-block w-100\"\n                />\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data roaster */}\n\n          {/* <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>ROAST</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.supplier\n                            .lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {this.state.roasting[0].product.supplier.elevation}{\" \"}\n                        {this.state.roasting[0].product.supplier.unit.nama_unit}\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date:</strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.elevation\n                        }{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.unit.nama_unit\n                        }\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Farm {i}:</strong>{\" \"}\n                                {value.batch.supplier.lokasi_supplier}\n                              </p>\n                              <p>\n                                <strong>Elevation {i}:</strong>{\" \"}\n                                {value.batch.supplier.elevation}{\" \"}\n                                {value.batch.supplier.unit.nama_unit}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.product.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.product.supplier.elevation}{\" \"}\n                                      {value.product.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            } else if (value.batch != null) {\n                              if (value.batch.batch_id != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .lokasi_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .elevation\n                                      }{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .unit.nama_unit\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          } else {\n                            if (value.batch != null) {\n                              i++;\n                              return (\n                                <Fragment>\n                                  <p>\n                                    <strong>Farm {i}:</strong>{\" \"}\n                                    {value.batch.supplier.lokasi_supplier}\n                                  </p>\n                                  <p>\n                                    <strong>Elevation {i}:</strong>{\" \"}\n                                    {value.batch.supplier.elevation}{\" \"}\n                                    {value.batch.supplier.unit.nama_unit}\n                                  </p>\n                                </Fragment>\n                              );\n                            }\n                          }\n                        })}\n                      <p>\n                        <strong>Flavor Note: </strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity: </strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity: </strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                }\n              })()}\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.roasting[0].thumbnail != null) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 48%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CImg\n                        src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                        className=\"d-block w-100\"\n                        alt={this.state.roasting.name}\n                      />\n                    </CCol>\n\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 70%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>BATCH</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong> -\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong> -\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.jenis.nama_jenis}\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.proses.nama_proses}\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {this.state.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div className=\"iframe-container\">\n                        <iframe className=\"responsive-iframe\"\n                          src={this.state.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong> -\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .batch_id\n                        }\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .tgl_panen\n                        }\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch.jenis\n                            .nama_jenis\n                        }\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .proses.nama_proses\n                        }\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.roasting[0].product.green_beans.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.nama_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div className=\"iframe-container\">\n                        <iframe className=\"responsive-iframe\"\n                          src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.roasting[0].product.green_beans.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .created_at\n                        }\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Batch ID {i}:</strong>{\" \"}\n                                {value.batch.batch_id}\n                              </p>\n                              <p>\n                                <strong>Harvesting Year {i}:</strong>{\" \"}\n                                {value.batch.tgl_panen}\n                              </p>\n                              <p>\n                                <strong>Variety Name {i}:</strong>{\" \"}\n                                {value.batch.jenis.nama_jenis}\n                              </p>\n                              <p>\n                                <strong>Process Name {i}:</strong>{\" \"}\n                                {value.batch.proses.nama_proses}\n                              </p>\n                              <p>\n                                <strong>Moisture:</strong>{\" \"}\n                                {value.batch.moisture}\n                              </p>\n                              <p>\n                                <strong>Processor {i}:</strong>{\" \"}\n                                {value.batch.supplier.nama_supplier}\n                              </p>\n                              <p>\n                                <strong>Video Culture:</strong>{\" \"}\n                              </p>\n                              <div className=\"iframe-container\">\n                                <iframe className=\"responsive-iframe\"\n                                  src={value.batch.video_culture}>\n                                </iframe>\n                              </div>\n                              <p></p>\n                              <p>\n                                <strong>Storytelling:</strong>\n                              </p>\n                              <p>{value.batch.storytelling}</p>\n                              <p>\n                                <strong>Processing Year {i}:</strong>{\" \"}\n                                {value.created_at}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {value.batch.tgl_panen}\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.batch.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.batch.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.batch.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div className=\"iframe-container\">\n                                      <iframe className=\"responsive-iframe\"\n                                        src={value.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {value.created_at}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.product.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.product.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.product.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong> -\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.product.green_beans.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .tgl_panen\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.jenis\n                                          .nama_jenis\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.proses\n                                          .nama_proses\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.product.green_beans.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .nama_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div className=\"iframe-container\">\n                                      <iframe className=\"responsive-iframe\"\n                                        src={value.product.green_beans.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.product.green_beans.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .created_at\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          }\n                        })}\n                    </Fragment>\n                  );\n                }\n              })()}\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.harvestImage.length >= 1) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 70%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselImage()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* {(() => {\n            if (this.state.certificateRoasting || this.state.certificateBatch) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 55%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>CERTIFICATE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselCertificate()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>QR CODE</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <CCol xs=\"12\" lg=\"7\">\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].qrcode}\n                  className=\"d-block w-100\"\n                  alt={this.state.roasting[0].product_id}\n                />\n              </CCol>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailRoasting()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/MyGoogleMap.js",["1322","1323","1324","1325","1326"],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/showResults/showResults.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/Marker.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js",["1327","1328","1329","1330","1331","1332","1333","1334","1335","1336"],"import { Fragment, useState } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\n\nconst EditCupping = () => {\n  const { id } = useParams();\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (values.curated_date != undefined) {\n      formData.append(\"curated_date\", values.curated_date);\n    }\n    if (values.curated_by != undefined) {\n      formData.append(\"curated_by\", values.curated_by);\n    }\n    if (values.fragrance_aroma != undefined) {\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n    }\n    if (values.flavor != undefined) {\n      formData.append(\"flavor\", values.flavor);\n    }\n    if (values.aftertaste != undefined) {\n      formData.append(\"aftertaste\", values.aftertaste);\n    }\n    if (values.acidity != undefined) {\n      formData.append(\"acidity\", values.acidity);\n    }\n    if (values.body != undefined) {\n      formData.append(\"body\", values.body);\n    }\n    if (values.cupping_score != undefined) {\n      formData.append(\"cupping_score\", values.cupping_score);\n    }\n    if (values.category != undefined) {\n      formData.append(\"category\", values.category);\n    }\n    if (certificateFile != \"\") {\n       formData.append(\"certificateFile\", certificateFile);\n       formData.append(\"certificateFileName\", certificateFile.name);\n      //  formData.append(\"certificateFile[]\", certificateFile);\n      // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificateFile[]\", certificateFile[i]);\n      // }\n    }\n    UserService.editCupping(id, formData).then(\n      showResults(\"Data has been changed\")\n    );\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <EditCuppingForm \n        onSubmit={handleSubmit} \n        cuppingID={id} \n        onSelectCertificate={onCertificateChange} />\n    </Fragment>\n  );\n};\n\nexport default EditCupping;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js",["1337","1338"],"import { Fragment, useState, useEffect } from \"react\";\nimport AddCuppingForm from \"./AddCuppingForm\";\nimport QRcode from \"qrcode.react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst AddCupping = (props) => {\n  const code = props.code;\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const [qr, setQr] = useState(\"test\");\n  const handleChange = (value) => {\n    setQr(value);\n  };\n\n  const downloadQR = (produkId, cuppingId) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + produkId + \"/\" + cuppingId + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const handleSubmit = (values) => {\n\n    console.log('cek valuenya nih', values);\n    const formData = new FormData();\n\n     if (\n      values.productId &&\n      values.curated_date &&\n      values.curated_by &&\n      values.fragrance_aroma &&\n      values.flavor &&\n      values.aftertaste &&\n      values.acidity &&\n      values.body &&\n      values.cupping_score &&\n      values.category &&\n      certificateFile != \"\"\n    ) {\n      formData.append(\"productId\", values.productId);\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      // formData.append(\"certificateFile[]\", certificateFile);\n      // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificateFile[]\", certificateFile[i]);\n      // }\n      formData.append(\"certificateFile\", certificateFile);\n      formData.append(\"certificateFileName\", certificateFile.name);\n\n      UserService.addCupping(formData).then(async (response) => {\n      console.log(\"cek response cupping\", response);\n        const linkQRCode =\n          process.env.REACT_APP_PROD_URL +\n          \"Cupping/\" +\n          code +\n          \"/\" +\n          response.data.data.id;\n        await handleChange(linkQRCode);\n\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise((resolve) =>\n          canvas.toBlob(resolve, \"image/png\")\n        );\n\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        console.log(\"gambar qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + response.data.data.id + \".png\");\n\n        downloadQR(values.productId, response.data.data.id);\n\n        UserService.pushQRCodeImageCupping(response.data.data.id, formDataQR);\n\n        showResults(\"Data has been added\")\n      });\n\n\n\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <AddCuppingForm \n        onSubmit={handleSubmit}\n        onSelectCertificate={onCertificateChange} \n      />\n      <div style={{ visibility: \"hidden\" }}>\n        {qr ? (\n          <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n        ) : (\n          <p>No QR code preview</p>\n        )}\n      </div>\n\n    </Fragment>\n  );\n};\n\nexport default AddCupping;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCuppingForm.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCuppingForm.js",["1339"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n} from \"@coreui/react\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst EditCuppingForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [curatedDate, setCuratedDate] = useState(\"\");\n  const [curatedBy, setCuratedBy] = useState(\"\");\n  const [fragranceAroma, setFragranceAroma] = useState(\"\");\n  const [flavor, setFlavor] = useState(\"\");\n  const [aftertaste, setAftertaste] = useState(\"\");\n  const [acidity, setAcidity] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [cuppingScore, setCuppingScore] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.cuppingID;\n    UserService.getDetailCupping(id).then((response) => {\n      setCuratedDate(response.data.cupping.curated_date);\n      setCuratedBy(response.data.cupping.curated_by);\n      setFragranceAroma(response.data.cupping.fragrance_aroma);\n      setFlavor(response.data.cupping.flavor);\n      setAftertaste(response.data.cupping.aftertaste);\n      setAcidity(response.data.cupping.acidity);\n      setBody(response.data.cupping.body);\n      setCuppingScore(response.data.cupping.cupping_score);\n      setCategory(response.data.cupping.category);\n    });\n  };\n\n  const onCertificateChanges = (e) => {\n    const file = e.target.files[0];\n    props.onSelectCertificate(file);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit Cupping</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listCupping\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n            <CForm action=\"\" method=\"post\">\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-curated_date\">\n                    Curated Date\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"curated_date\"\n                    component=\"input\"\n                    type=\"date\"\n                    placeholder={curatedDate}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-curated_by\">\n                    Curated By\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"curated_by\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={curatedBy}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-fragrance_aroma\">\n                    Fragrance / Aroma\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"fragrance_aroma\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={fragranceAroma}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-flavor\">\n                    Flavor\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"flavor\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={flavor}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-aftertaste\">\n                    Aftertaste\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"aftertaste\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={aftertaste}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-acidity\">\n                    Acidity\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"acidity\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={acidity}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-body\">\n                    Body\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"body\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={body}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-cupping_score\">\n                    Cupping Score\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"cupping_score\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={cuppingScore}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-category\">\n                    Category\n                  </CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"category\"\n                    component=\"select\">\n                    <option value=\"\" selected disabled hidden>\n                      {category}\n                    </option>\n                    <option value=\"Q Grade\">Q Grade / Specialty</option>\n                    <option value=\"Premium\">Premium</option>\n                    <option value=\"Commercial Grade\">Commercial Grade</option>\n                  </Field>\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-cupping_certificate\">\n                    Cupping Certificate\n                  </CLabel>\n                  <CInputFile\n                    id=\"file-input\"\n                    name=\"cupping_certificate\"\n                    type=\"file\"\n                    onChange={onCertificateChanges}\n                  />\n                </CFormGroup>\n              </CForm>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editCupping\", // a unique identifier for this form\n})(EditCuppingForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScan.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/ListCupping.js",["1340","1341","1342","1343","1344","1345"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CNav,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CTabPane,\n  CTabs,\n} from \"@coreui/react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\n\nexport default class ListCupping extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListMasterData().then((response) => {\n      this.setState({\n        content: response.data,\n      });\n    });\n  }\n\n  deleteCupping = (item) => {\n    UserService.deleteCupping(item.id).then(\n      showResults(\"Data has been deleted\")\n    );\n  };  \n\n  render() {\n    const fieldCupping = [\n      {\n        key: \"curated_date\",\n        label: \"Curated Date\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"fragrance_aroma\",\n        label: \"Fragrance / Aroma\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"flavor\",\n        label: \"Flavor\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"aftertaste\",\n        label: \"Aftertaste\",\n        _style: { width: \"17%\" },\n      },\n      {\n        key: \"acidity\",\n        label: \"Acidity\",\n        _style: { width: \"16%\" },\n      },\n      {\n        key: \"show_details\",\n        label: \"\",\n        _style: { width: \"16%\" },\n        filter: false,\n      },\n    ];\n\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard>\n              <CCardBody>\n                <CRow>\n                    <CCol xs=\"12\">\n                        <CCardHeader>\n                        <CRow>\n                            <CCol\n                            xs={6}\n                            md={7}\n                            lg={10}\n                            style={{ margin: \"auto\" }}\n                            >\n                            <h4 style={{ margin: \"auto\" }}>\n                                Cupping Data\n                            </h4>\n                            </CCol>\n                            <CCol>\n                            <CButton\n                                block\n                                color=\"dark\"\n                                to=\"/masterData/addCupping\"\n                                style={{ backgroundColor: \"#00c4cc\" }}\n                            >\n                                Add\n                            </CButton>\n                            </CCol>\n                        </CRow>\n                        </CCardHeader>\n                        <CCardBody>\n                        <CDataTable\n                            items={this.state.content.roasting_cupping}\n                            fields={fieldCupping}\n                            itemsPerPage={10}\n                            tableFilter\n                            cleaner\n                            itemsPerPageSelect\n                            hover\n                            sorter\n                            pagination\n                            scopedSlots={{\n                              show_details: (item) => {\n                                  return (\n                                  <td className=\"py-2\">\n                                      <CButton\n                                      size=\"sm\"\n                                      color=\"info\"\n                                      style={{ backgroundColor: \"#178d88\" }}\n                                      to={`/masterData/editCupping/${item.id}`}\n                                      >\n                                      Edit\n                                      </CButton>\n                                      <CButton\n                                      size=\"sm\"\n                                      color=\"danger\"\n                                      className=\"ml-1\"\n                                      onClick={() =>\n                                          this.deleteCupping(item)\n                                      }\n                                      style={{ backgroundColor: \"#e2602c\" }}\n                                      >\n                                      Delete\n                                      </CButton>\n                                  </td>\n                                  );\n                              },\n                            }}\n                        />\n                        </CCardBody>\n                    </CCol>\n                    </CRow>\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScanDetail.js",["1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358"],"import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class CuppingScanDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cupping_id: 0,\n      product_id: 0,\n      code: \"\",\n      cupping: null,\n      product: [],\n      batch: [],\n      harvestImage: [],\n      certificateBatch: null,\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 11,\n      address: \"\",\n      // draggable: true,\n      lat: null,\n      lng: null,\n      isOpen: false,\n    };\n  }\n\n    async componentDidMount() {\n        let id = this.props.CuppingId;\n        this.setState({ cupping_id: id });\n\n        let code = this.props.code;\n        this.setState({\n        code: code,\n        });\n\n        await UserService.getDetailCuppingGuest(code, id).then((response) => {\n            console.log(\"cek response cupping\", response);\n            this.setState({\n                cupping: response.data.cupping,\n                certificatecupping: response.data.cuppingCertificate,\n                product: response.data.produk[0],\n                batch: response.data.batch[0],\n                lat: response.data.batch[0].supplier.lat,\n                lng: response.data.batch[0].supplier.long,\n            })\n        });\n    }\n\n  renderCarouselImage = () => {\n    let menuItems = [];\n    if (this.state.harvestImage != null) {\n      if (this.state.harvestImage.length >= 1) {\n        this.state.harvestImage &&\n          this.state.harvestImage.map((value2) => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2[i].images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              }\n            } else if (value2.length == 1) {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2[0].images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            } else {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2.images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            }\n          });\n      }\n    }\n    return menuItems;\n  };\n\n  renderCuppingCertificate = () => {\n    let menuItems = [];\n\n    if (this.state.certificatecupping) {\n      for (let i = 0; i < this.state.certificatecupping.length; i++) {\n        let filename = MARKETPLACE_URL + this.state.certificatecupping[i].certificates;\n\n        if(filename.split('.').pop() === 'jpg' || filename.split('.').pop() === 'png' || filename.split('.').pop() === 'jpeg') {\n          menuItems.push(\n            // <CCarouselItem>\n              <CImg\n                src={\n                  MARKETPLACE_URL + this.state.certificatecupping[i].certificates\n                }\n                className=\"d-block w-100\"\n              />\n            // </CCarouselItem>\n          );\n        }\n        else {\n          menuItems.push(\n            <div class=\"iframe-container\">\n              <iframe class=\"responsive-iframe\" src={\n                  MARKETPLACE_URL + this.state.certificatecupping[i].certificates\n                }\n              >\n              </iframe>\n              <p>{\" \"}</p>\n            </div>\n          );\n        }\n      }\n    }\n\n    if (this.state.certificatecupping) {\n      return menuItems;\n    }\n  };\n\n  renderBatchCertificate = () => {\n    let menuItems = [];\n    if (this.state.certificateBatch) {\n      for (let i = 0; i < this.state.certificateBatch.length; i++) {\n        menuItems.push(\n          <CCarouselItem>\n            <CImg\n              src={\n                MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n              }\n              className=\"d-block w-100\"\n            />\n          </CCarouselItem>\n        );\n      }\n    }\n\n    if (this.state.certificateBatch) {\n      return menuItems;\n    }\n  }\n\n  renderMyMaps = () => {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 11;\n    const defaultCenter = { lat: parseFloat(this.state.lat), lng: parseFloat(this.state.lng) }\n    const locations = [\n      {\n        lat: parseFloat(this.state.lat),\n        lng: parseFloat(this.state.lng),\n        draggable: false,\n        title: this.state.address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => this.setState({isOpen: !this.state.isOpen})} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { this.state.isOpen &&\n            <InfoWindow onCloseClick={() => this.setState({isOpen: false})}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n  renderDetailCupping = () => {\n      console.log('cek cupping 2', this.state.cupping);\n    if (this.state.cupping) {\n      return (\n        <Fragment>\n\n          {/* data green bean */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Green Bean</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU:</strong> {this.state.product.sku}\n                </p>\n                <p>\n                  <strong>Batch Number:</strong> {this.state.batch.batch_id}\n                </p>\n                <p>\n                  <strong>Country Of Origin:</strong> Indonesia\n                </p>\n                <p>\n                  <strong>Origin:</strong> {this.state.batch.supplier.lokasi_supplier}\n                </p>\n                <p>\n                  <strong>Farm:</strong> {this.state.batch.supplier.nama_supplier}\n                </p>\n                <p>\n                  <strong>Elevation:</strong> {this.state.batch.supplier.elevation}\n                </p>\n                <p>\n                  <strong>Harvesting Year:</strong> {this.state.batch.tgl_panen}\n                </p>\n                <p>\n                  <strong>Variety:</strong> {this.state.batch.jenis.deskripsi_jenis}\n                </p>\n                <p>\n                  <strong>Process:</strong> {this.state.batch.proses.deskripsi_proses}\n                </p>\n                <p>\n                  <strong>Moisture:</strong> {this.state.batch.moisture}\n                </p>\n                <p>\n                  <strong>Google Map Location:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '#'}>{this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '-'}</a>\n                </p>\n                  <div style={{width: \"100%\", height: \"400px\" }}>\n                    {this.renderMyMaps()}\n                  </div>\n                  <p></p>\n                <p>\n                {/* <p>\n                  <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '#'}>{this.state.batch.supplier.link_maps ? this.state.batch.supplier.link_maps : '-'}</a>\n                </p> */}\n                  <strong>Story Telling:</strong> {this.state.batch.storytelling}\n                </p>\n                <p>\n                  <strong>Photo and Video Culture:</strong> {\" \"}\n                </p>\n                <div class=\"iframe-container\">\n                  <iframe class=\"responsive-iframe\"\n                    // src={this.state.batch.video_culture}>\n                    src={this.state.batch.video_culture.replace(\"watch?v=\", \"embed/\")}>\n                  </iframe>\n                  <p>{\" \"}</p>\n                </div>\n                <p>\n                  <strong>Process Photos:</strong> {\" \"}\n                  <CImg\n                    src={MARKETPLACE_URL + this.state.product.thumbnail}\n                    className=\"d-block w-100\"\n                  />\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.batch.volume}\n                </p>\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data green bean */}\n\n\n          {/* data cupping */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Cupping</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>Curated Date:</strong> {this.state.cupping.curated_date}\n                </p>\n                <p>\n                  <strong>Curated By:</strong> {this.state.cupping.curated_by}\n                </p>\n                <p>\n                  <strong>Fragrance / Aroma:</strong> {this.state.cupping.fragrance_aroma}\n                </p>\n                <p>\n                  <strong>Flavor:</strong> {this.state.cupping.flavor}\n                </p>\n                <p>\n                  <strong>Aftertaste:</strong> {this.state.cupping.aftertaste}\n                </p>\n                <p>\n                  <strong>Acidity:</strong> {this.state.cupping.acidity}\n                </p>\n                <p>\n                  <strong>Body:</strong> {this.state.cupping.body}\n                </p>\n                <p>\n                  <strong>Cupping Score:</strong> {this.state.cupping.cupping_score}\n                </p>\n                <p>\n                  <strong>Category (options):</strong> {this.state.cupping.category}\n                </p>\n                <p>\n                  <strong>Cupping Certificates:</strong> {\" \"}\n                </p>\n                {this.renderCuppingCertificate()}\n                {/* <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderCuppingCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol> */}\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data cupping */}\n\n          <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>QR CODE</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <CCol xs=\"12\" lg=\"7\">\n                <CImg\n                  src={MARKETPLACE_URL + this.state.cupping.qrcode}\n                  className=\"d-block w-100\"\n                  alt={this.state.cupping.product_id}\n                />\n              </CCol>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailCupping()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/ListLogAPI.js",["1359","1360","1361","1362","1363","1364","1365"],"import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport default class ListLogAPI extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n    };\n  }\n\n  async componentDidMount() {\n    UserService.getDataLogApi().then((response) => {\n      console.log('cek response',response);\n\n      this.setState({\n        content: response.data.data,\n      });\n    });\n    \n  }\n\n  render() {\n    const fields = [\n      { key: \"created_at\", label: \"Date Time\"},\n      { key: \"name\", label: \"Product Name\"},\n      { key: \"status\", label: \"Status\"},\n      { key: \"catatan\", label: \"Note\"},\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>Log API</h4>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content}\n                      fields={fields}\n                      itemsPerPage={10}\n                      tableFilter\n                      cleaner\n                      itemsPerPageSelect\n                      hover\n                      sorter\n                      pagination\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/DaftarPO.js",["1366"],"import { Fragment, useState } from \"react\";\nimport showResults from \"../../../showResults/showResults\";\nimport DaftarPOForm from \"./DaftarPOForm\";\nimport UserService from \"../../../../services/user.service\";\nimport { Redirect } from \"react-router-dom\";\n\nconst DaftarPO = () => {\n\n  const [pindah, setPindah] = useState(false);\n  const [date, setDate] = useState(\"\");\n\n  const handleDate = (tgl) => {\n    setDate(tgl);\n  };\n\n  const handleSubmit = (values) => {\n    console.log(date);\n    if(values.po_number &&\n      date != \"\" &&\n      values.buyer_name\n    ) {\n      // var raw = JSON.stringify(values);\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"po_date\", date);\n      formData.append(\"buyer_name\", values.buyer_name);\n\n      UserService.addPO(formData).then((response) => {\n        if(response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been added\");\n\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n\n  };\n\n  if (pindah === true) {\n\n    return <Redirect to=\"/listBiji\" />;\n\n  } else {\n    return (\n      <Fragment>\n        <DaftarPOForm onSubmit={handleSubmit} onSelectDate={handleDate} />\n      </Fragment>\n    );\n\n  }\n};\n\nexport default DaftarPO;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/EditSKU.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/DaftarSKU.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/DaftarGreenBean.js",["1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1382","1383","1384","1385","1386","1387","1388"],"import { Fragment, useState, useEffect } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport DaftarGreenBeanForm from \"./DaftarGreenBeanForm\";\nimport UserService from \"../../../services/user.service\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../abi/abi\";\nimport { Redirect, useHistory } from \"react-router-dom\";\n\nimport QRcode from \"qrcode.react\";\nimport { sha256 } from \"js-sha256\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst DaftarGreenBean = (props) => {  \n\n  const code = props.code;\n\n  const [files, imageFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState(\"\");\n  const [pindah, setPindah] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const [currencyID, setCurrencyID] = useState([]);  \n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = async (values) => {\n    console.log('cek value', values);\n    // cek batch number\n\n    if(values.po_number &&\n      values.sku &&\n      values.batch &&\n      values.harvesting_year &&\n      values.farm &&\n      values.species &&\n      values.process &&\n      values.variety &&\n      values.volume_order\n    ){\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"batch\", values.batch);\n      formData.append(\"farm\", values.farm);\n      formData.append(\"harvesting_year\", values.harvesting_year);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"species\", values.species);\n      formData.append(\"process\", values.process);\n      formData.append(\"variety\", values.variety);\n      formData.append(\"volume_order\", values.volume_order);\n\n      await UserService.addBatchGreenBean(formData).then((response) => {\n        console.log('cek response', response);\n        if(response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been added\");\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  }\n  \n\n  if (pindah === true) {\n\n    return <Redirect to=\"/listGreenBean\" />;\n\n  } else {\n\n    return (\n      <Fragment>\n        <DaftarGreenBeanForm\n          onSubmit={handleSubmit}\n          onSelectLat={onLatChange}\n          onSelectLong={onLongChange}\n        />\n      </Fragment>\n    );\n\n  }\n};\nexport default DaftarGreenBean;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/EditGreenBean.js",["1389","1390","1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407"],"import { Fragment, useState, useEffect } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditGreenBeanForm from \"./EditGreenBeanForm\";\nimport UserService from \"../../../services/user.service\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../abi/abi\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst EditGreenBean = (props) => {\n  const { id } = useParams();\n\n  const [files, imageFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState(\"\");\n  const [pindah, setPindah] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const [currencyID, setCurrencyID] = useState([]);  \n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(values);\n\n    if(values.po_number &&\n      values.sku &&\n      values.batch &&\n      values.harvesting_year &&\n      values.farm &&\n      values.species &&\n      values.process &&\n      values.variety &&\n      values.volume_order\n    ){\n      // cek batch number\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"batch\", values.batch);\n      formData.append(\"farm\", values.farm);\n      formData.append(\"harvesting_year\", values.harvesting_year);\n      formData.append(\"process\", values.process);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"species\", values.species);\n      formData.append(\"variety\", values.variety);\n      formData.append(\"volume_order\", values.volume_order);\n\n      await UserService.editBatchGreenBean(id, formData).then((response) => {\n        console.log('cek response', response);\n        if(response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been updated\");\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  }\n  \n\n  if (pindah === true) {\n\n    return <Redirect to=\"/listGreenBean\" />;\n\n  } else {\n\n    return (\n      <Fragment>\n        <EditGreenBeanForm\n          onSubmit={handleSubmit}\n          greenbeanID={id}\n          onSelectLat={onLatChange}\n          onSelectLong={onLongChange}\n        />\n      </Fragment>\n    );\n\n  }\n};\nexport default EditGreenBean;\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ShowGreenBean.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/EditPO.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ListGreenBean.js",["1408"],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/GetBatchID.js",[],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ScanQRGreenBean.js",["1409","1410","1411","1412","1413","1414","1415","1416","1417","1418"],"import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport moment from 'moment';\n\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class ScanQRGreenBean extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n        batch_id: 0,\n        //   code: \"\",\n        product_id: 0,\n        data: null,\n        mapApiLoaded: false,\n        mapInstance: null,\n        mapApi: null,\n        geoCoder: null,\n        places: [],\n        center: [],\n        zoom: 11,\n        address: \"\",\n        // draggable: true,\n        lat: null,\n        lng: null,\n        isOpen: false,\n        };\n    }\n\n    async componentDidMount() {\n        console.log('test');\n        let batchId = this.props.batchId;\n        this.setState({ batch_id: batchId });\n\n        let kode = this.props.code;\n        this.setState({ code: kode });\n\n        await UserService.getDetailBatchGuestQR(kode, batchId).then((response) => {\n            console.log('cek response', response);\n\n            this.setState({\n                data: response.data.batch,\n                po: response.data.batch.get_p_o,\n                sku: response.data.batch.get_s_k_u,\n                farm: response.data.batch.get_farm,\n                lat: response.data.batch.get_farm.lat,\n                lng: response.data.batch.get_farm.long,\n            })\n        });\n    }\n\n  renderMyMaps = () => {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 11;\n    const defaultCenter = { lat: parseFloat(this.state.lat), lng: parseFloat(this.state.lng) }\n    const locations = [\n      {\n        lat: parseFloat(this.state.lat),\n        lng: parseFloat(this.state.lng),\n        draggable: false,\n        title: this.state.address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => this.setState({isOpen: !this.state.isOpen})} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { this.state.isOpen &&\n            <InfoWindow onCloseClick={() => this.setState({isOpen: false})}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n  renderDetailBatch = () => {\n    if (this.state.data) {\n      return (\n        <Fragment>\n\n          {/* data green bean */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Green Bean</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Green Bean:</strong> {this.state.sku.sku} - {this.state.sku.name}\n                </p>\n                <p>\n                  <strong>Batch Number:</strong> {this.state.data.batch_number}\n                </p>\n                <p>\n                  <strong>Country Of Origin:</strong> {this.state.data.country_origin}\n                </p>\n                <p>\n                  <strong>Area Of Origin:</strong> {this.state.farm.lokasi_supplier}\n                </p>\n                <p>\n                  <strong>Farm:</strong> {this.state.farm.nama_supplier} - {this.state.farm.nama_petani}\n                </p>\n                <p>\n                  <strong>Elevation:</strong> {this.state.farm.elevation} MASL\n                </p>\n                <p>\n                  <strong>Harvesting Year:</strong> {moment(this.state.data.harvesting_year).format('MMM-YYYY')}\n                </p>\n                <p>\n                  <strong>Species:</strong> {this.state.data.species}\n                </p>\n                <p>\n                  <strong>Variety:</strong> {this.state.data.variety}\n                </p>\n                <p>\n                  <strong>Process:</strong> {this.state.data.process}\n                </p>\n                <p>\n                  <strong>Google Map Location:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.farm.link_maps ? this.state.farm.link_maps : '#'}>{this.state.farm.link_maps ? this.state.farm.link_maps : '-'}</a>\n                </p>\n                <div style={{width: \"100%\", height: \"400px\" }}>\n                    {this.renderMyMaps()}\n                </div>\n                <p></p>\n                <p>\n                  <strong>Volume Order In Grams:</strong> {this.state.data.volume_order} Grams\n                </p>\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data green bean */}\n\n          \n          {(() => {\n              if(this.state.data.qrcode) {\n                return(\n                    <CRow style={{ marginTop: \"40px\" }}>\n                        <CCol xs=\"2\" lg=\"5\">\n                        <h1\n                            style={{\n                            transform: \"rotate(180deg)\",\n                            transformOrigin: \"20% 55%\",\n                            writingMode: \"vertical-lr\",\n                            color: \"darkOrange\",\n                            textAlign: \"center\",\n                            }}\n                        >\n                            <strong>QR CODE</strong>\n                        </h1>\n                        </CCol>\n\n                        <CCol xs=\"10\" lg=\"7\">\n                        <CCol xs=\"12\" lg=\"7\">\n                            <CImg\n                                src={MARKETPLACE_URL + this.state.data.qrcode}\n                                className=\"d-block w-100\"\n                                alt={this.state.data.id}\n                            />\n                        </CCol>\n\n                        <hr\n                            style={{\n                            marginTop: \"60px\",\n                            color: \"#178d88\",\n                            backgroundColor: \"#178d88\",\n                            height: 2,\n                            }}\n                        />\n                        </CCol>\n                    </CRow>\n                )\n              }\n          })()}\n\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailBatch()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/EditPOForm.js",["1419","1420"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\nimport DatePicker from \"react-datepicker\";\nimport \"../../react-datepicker.css\";\nimport moment from 'moment';\n\nconst EditPOForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [po, setPO] = useState(\"\");\n  const [tgl, setStartDate] = useState('');\n\n  props.onSelectDate(moment(tgl).format('YYYY-MM-DD'));\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.poID;\n    UserService.detailPO(id).then((response) => {\n      setPO(response.data.data)\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit PO</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">PO number</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"po_number\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={po.po_number}\n                    required={true}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">PO Date</CLabel>\n                  <DatePicker\n                    selected={tgl}\n                    className=\"textInput grosir\"\n                    onChange={(date) => setStartDate(date)}\n                    // maxDate={new Date()}\n                    dateFormat=\"dd/MMM/yyyy\"\n                    name=\"po_date\"\n                    required={true}\n                    placeholderText=\"Select a date\"\n                  />\n                </CFormGroup>\n                &nbsp;\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">Buyer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"buyer_name\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={po.buyer_name}\n                    required={true}\n                  />\n                </CFormGroup>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editPO\", // a unique identifier for this form\n})(EditPOForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/DaftarGreenBeanForm.js",["1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439"],"import { React, useState, useEffect, Fragment } from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport UserService from \"../../../services/user.service\";\n// import MyGoogleMap from \"../Supplier/Google Maps/MyGoogleMap\";\n\nconst DaftarGreenBeanForm = (props) => {\n  const { handleSubmit, reset } = props;\n  \n  const [sku, setSKU] = useState([]);\n  const [po, setPO] = useState([]);\n  const [farm, setFarm] = useState([]);\n  const [detailFarm, setDetailFarm] = useState(null);\n  const [lng, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [mapApiLoaded, setMapApiLoaded] = useState(false);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapApi, setMapApi] = useState(null);\n  const [geoCoder, setGeoCoder] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [center, setCenter] = useState([]);\n  const [zoom, setZoom] = useState(11);\n  const [address, setAddress] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const FarmChange = async (e) => {\n    await UserService.getDetailSupplier(e.target.value).then((response) => {\n      setDetailFarm(response.data.supplier);\n      setLong(parseFloat(response.data.supplier.long));\n      setLat(parseFloat(response.data.supplier.lat));\n    });\n  };\n\n  const Wrapper = styled.main`\n    width: 100%;\n    height: 100%;\n  `;\n\n  const googleMap = () => {\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 12;\n    const defaultCenter = { lat: parseFloat(lat), lng: parseFloat(lng) }\n    const locations = [\n      {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng),\n        draggable: false,\n        title: address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => setIsOpen(!isOpen)} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { isOpen &&\n            <InfoWindow onCloseClick={() => setIsOpen(false)}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n  // const markerHandle = (latitude, longitude) => {\n  //   props.onSelectLat(lat);\n  //   props.onSelectLong(lng);\n  // };\n\n  const setCurrentLocation = async () => {\n    setLong(112.43025439999997);\n    setLat(-1.2235008616709613);\n  };\n\n  useEffect(() => {\n    setCurrentLocation();\n  }, []);\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          readOnly\n          defaultValue={lat}\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          readOnly\n          defaultValue={lng}\n        />\n      </div>\n    );\n  };\n\n  // let googleMap;\n  // if (lat && lng) {\n  //   googleMap = (\n  //     <MyGoogleMap\n  //       onMarkerHandle={markerHandle}\n  //       latProps={lat}\n  //       longProps={lng}\n  //     />\n  //   );\n  // } else {\n  //   googleMap = <MyGoogleMap onMarkerHandle={markerHandle} />;\n  // }\n\n  const getSKU = () => {\n    UserService.getSKU().then((response) => {\n      console.log(response);\n      setSKU(response.data.data);\n    });\n  };\n\n  const getPO = () => {\n    UserService.getPO().then((response) => {\n      console.log(response);\n      setPO(response.data.data);\n    });\n  };\n\n  const getFarm = () => {\n    UserService.getListSupplier().then((response) => {\n      setFarm(response.data.supplier);\n    });\n  };\n\n  useEffect(() => {\n    getFarm();\n    getSKU();\n    getPO();\n  }, []);\n\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard>\n              <CCardHeader>\n                <CRow>\n                  <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                    <h4 style={{ margin: \"auto\" }}>Add Batch Green bean</h4>\n                  </CCol>\n                  <CCol>\n                    <CButton\n                      block\n                      color=\"dark\"\n                      to=\"/listGreenBean\"\n                      style={{ backgroundColor: \"#00c4cc\" }}\n                    >\n                      <span style={{ color: \"white\" }}>X</span>\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CCardHeader>\n              <CCardBody>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      SKU Green Bean <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"sku\"\n                      component=\"select\"\n                      required={true}\n                    >\n                      <option value=\"\">----</option>\n                      {sku &&\n                        sku.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.sku} - {value.name}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Batch Number Green Bean <small>*</small>\n                    </CLabel>\n                    <Field\n                        className=\"textInput grosir\"\n                        name=\"batch\"\n                        component=\"input\"\n                        type=\"text\"\n                        required={true}\n                      />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Harvesting Year <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"harvesting_year\"\n                      component=\"input\"\n                      type=\"month\"\n                      required={true}\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      PO Number <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"po_number\"\n                      component=\"select\"\n                      required={true}\n                    >\n                      <option value=\"\">----</option>\n                      {po &&\n                        po.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.po_number} - {value.buyer_name}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <hr></hr>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Farm <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"farm\"\n                      component=\"select\"\n                      onChange={FarmChange}\n                      required={true}\n                    >\n                      <option value=\"-----\">----</option>\n                      {farm &&\n                        farm.map((value) => {\n                          return (\n                            <option key={value.id} value={value.id}>\n                              {value.nama_supplier} - {value.lokasi_supplier}\n                            </option>\n                          );\n                        })}\n                    </Field>\n                  </CFormGroup>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Elevation <small>*</small>\n                    </CLabel>\n                    <input\n                      className=\"textInput grosir\"\n                      name=\"elevation\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"max 20 word\"\n                      readOnly\n                      defaultValue={detailFarm && detailFarm.elevation ? detailFarm.elevation : ''}\n                    />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Country Of Origin <small>(default)</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"country_origin\"\n                      component=\"input\"\n                      type=\"text\"\n                      defaultValue=\"Indonesia\"\n                      placeholder=\"Indonesia\"\n                      readOnly\n                    />\n                  </CFormGroup>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Area Of Origin <small>*</small>\n                    </CLabel>\n                    <input\n                      className=\"textInput grosir\"\n                      name=\"area_origin\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"max 20 word\"\n                      readOnly\n                      value={detailFarm && detailFarm.lokasi_supplier ? detailFarm.lokasi_supplier : ''}\n                    />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md=\"12\" lg=\"12\" sm=\"12\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Link Google Map Location <small>*</small>\n                    </CLabel>\n                    <input\n                        className=\"textInput grosir\"\n                        name=\"link_gmaps\"\n                        component=\"input\"\n                        type=\"text\"\n                        readOnly\n                        value={detailFarm && detailFarm.link_maps ? detailFarm.link_maps : ''}\n                      />\n                  </CFormGroup>\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-kebun\">Map</CLabel>\n                    <div style={{width: \"100%\", height: \"500px\"}}>{googleMap()}</div>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                      Latitude\n                    </CLabel>\n                    <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                      Longitute\n                    </CLabel>\n                    <CCol xs=\"6\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"longitude\"\n                        component={customInputLat}\n                        type=\"text\"\n                        disabled\n                      />\n                    </CCol>\n                    <CCol xs=\"6\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"longitude\"\n                        component={customInputLong}\n                        type=\"text\"\n                        disabled\n                      />\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <hr></hr>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Species <small>*</small>\n                    </CLabel>\n                    <Field\n                      className=\"textInput grosir\"\n                      name=\"species\"\n                      component=\"select\"\n                      required={true}\n                    >\n                      <option value=\"\">----</option>\n                      <option value=\"Arabica\">Arabica</option>\n                      <option value=\"Robusta\">Robusta</option>\n                      <option value=\"Liberica\">Liberica</option>\n                    </Field>\n                  </CFormGroup>\n                </CCol>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Variety <small>*</small>\n                    </CLabel>\n                    <Field\n                        className=\"textInput grosir\"\n                        name=\"variety\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"max 20 word\"\n                        required={true}\n                      />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CFormGroup>\n                    <CLabel htmlFor=\"nf-unit\">\n                      Process <small>*</small>\n                    </CLabel>\n                    <Field\n                        className=\"textInput grosir\"\n                        name=\"process\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"max 20 word\"\n                        required={true}\n                      />\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              <CRow>\n                <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                  <CLabel htmlFor=\"nf-unit\">\n                    Volume Order In Grams <small>*</small>\n                  </CLabel>\n                  <CFormGroup row>\n                    <CCol md=\"10\" lg=\"10\" sm=\"10\">\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"volume_order\"\n                        component=\"input\"\n                        type=\"number\"\n                        min={0}\n                        required={true}\n                      />\n                    </CCol>\n                    <CCol md=\"2\" lg=\"2\" sm=\"2\" style={{ margin: \"auto\" }}>\n                    <span>Grams</span>\n                    </CCol>\n                  </CFormGroup>\n                </CCol>\n              </CRow>\n              </CCardBody>\n\n              <CCardFooter>\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  style={{ backgroundColor: \"#178d88\" }}\n                >\n                  Submit\n                </CButton>{\" \"}\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={reset}\n                  style={{ backgroundColor: \"#e2602c\" }}\n                >\n                  Reset\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </div>\n        </main>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarGreenBean\", // a unique identifier for this form\n})(DaftarGreenBeanForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/DaftarSKUForm.js",["1440"],"import { React } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\n\nconst DaftarSkuForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add SKU Green Bean</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">SKU Green Bean Code</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"sku\"\n                    component=\"input\"\n                    type=\"text\"\n                    required={true}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">SKU Green Bean Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"name\"\n                    component=\"input\"\n                    type=\"text\"\n                    required={true}\n                  />\n                </CFormGroup>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarSKU\", // a unique identifier for this form\n})(DaftarSkuForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/EditGreenBeanForm.js",["1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462"],"import { React, useState, useEffect, Fragment } from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n  CInputFile,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport UserService from \"../../../services/user.service\";\n// import MyGoogleMap from \"../Supplier/Google Maps/MyGoogleMap\";\nimport moment from 'moment';\n\nconst EditGreenBeanForm = (props) => {    \n  \n  const { handleSubmit, reset } = props;\n  \n  const [sku, setSKU] = useState([]);\n  const [po, setPO] = useState([]);\n  const [batch, setBatch] = useState([]);\n  const [data, setData] = useState([]);\n  const [farm, setFarm] = useState([]);\n  const [detailFarm, setDetailFarm] = useState(null);\n  const [lng, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [mapApiLoaded, setMapApiLoaded] = useState(false);\n  const [mapInstance, setMapInstance] = useState(null);\n  const [mapApi, setMapApi] = useState(null);\n  const [geoCoder, setGeoCoder] = useState(null);\n  const [places, setPlaces] = useState([]);\n  const [center, setCenter] = useState([]);\n  const [zoom, setZoom] = useState(11);\n  const [address, setAddress] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const FarmChange = async (e) => {\n    await UserService.getDetailSupplier(e.target.value).then((response) => {\n      setDetailFarm(response.data.supplier);\n      setLong(parseFloat(response.data.supplier.long));\n      setLat(parseFloat(response.data.supplier.lat));\n    });\n\n  };\n\n  const Wrapper = styled.main`\n    width: 100%;\n    height: 100%;\n  `;\n\n  const googleMap = () => {\n    const apiKey = 'AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4'\n\n    const defaultZoom = 12;\n    const defaultCenter = { lat: parseFloat(lat), lng: parseFloat(lng) }\n    const locations = [\n      {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng),\n        draggable: false,\n        title: address,\n      },\n    ]\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n      // const [isOpen, setIsOpen] = React.useState(false)\n\n      return (\n        <Marker \n          onClick={() => setIsOpen(!isOpen)} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { isOpen &&\n            <InfoWindow onCloseClick={() => setIsOpen(false)}>\n              <CNavLink href={location.www} target=\"_blank\">{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    return (\n      <Wrapper>\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      </Wrapper>\n    );\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.greenbeanID;\n\n    UserService.detailBatchGreenBean(id).then((response) => {\n      console.log('cek response', response);\n      setData(response.data.data)\n      setSKU(response.data.sku)\n      setPO(response.data.po)\n      setFarm(response.data.farm)\n      setBatch(response.data.batch)\n      // setLong(parseFloat(response.data.batch.get_farm.long));\n      // setLat(parseFloat(response.data.batch.get_farm.lat));\n    });\n  };\n\n  // const markerHandle = (lat, long) => {\n  //   props.onSelectLat(lat);\n  //   props.onSelectLong(long);\n  // };\n\n  const setCurrentLocation = async () => {\n    setLong(112.43025439999997);\n    setLat(-1.2235008616709613);\n  };\n\n  useEffect(() => {\n    setCurrentLocation();\n  }, []);\n\n  const customInputLat = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"latitude\"\n          type=\"text\"\n          readOnly\n          defaultValue={lat}\n        />\n      </div>\n    );\n  };\n\n  const customInputLong = () => {\n    return (\n      <div>\n        <input\n          className=\"textInput grosir\"\n          name=\"longitude\"\n          type=\"text\"\n          readOnly\n          defaultValue={lng}\n        />\n      </div>\n    );\n  };\n\n  // let googleMap;\n  // if (lat != '' && long != '') {\n  //   googleMap = (\n  //     <MyGoogleMap\n  //       onMarkerHandle={markerHandle}\n  //       latProps={lat}\n  //       longProps={long}\n  //     />\n  //   );\n  // } else {\n  //   googleMap = <MyGoogleMap onMarkerHandle={markerHandle} />;\n  // }\n\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard>\n              <CCardHeader>\n                <CRow>\n                  <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                    <h4 style={{ margin: \"auto\" }}>Add Batch Green bean</h4>\n                  </CCol>\n                  <CCol>\n                    <CButton\n                      block\n                      color=\"dark\"\n                      to=\"/listGreenBean\"\n                      style={{ backgroundColor: \"#00c4cc\" }}\n                    >\n                      <span style={{ color: \"white\" }}>X</span>\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CCardHeader>\n              <CCardBody>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        SKU Green Bean <small>*</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"sku\"\n                        component=\"select\"\n                        required={true}\n                      >\n                        <option value=\"\">----</option>\n                        {sku &&\n                          sku.map((value) => {\n                            return (\n                              <option key={value.id} value={value.id}>\n                                {value.sku} - {value.name}\n                              </option>\n                            );\n                          })}\n                      </Field>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Batch Number Green Bean <small>*</small>\n                      </CLabel>\n                      <Field\n                          className=\"textInput grosir\"\n                          name=\"batch\"\n                          component=\"input\"\n                          type=\"text\"\n                          placeholder={data.batch_number}\n                          required={true}\n                        />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Harvesting Year <small>*</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"harvesting_year\"\n                        component=\"input\"\n                        type=\"month\"\n                        required={true}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        PO Number <small>*</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"po_number\"\n                        component=\"select\"\n                        required={true}\n                      >\n                        <option value=\"\">----</option>\n                        {po &&\n                          po.map((value) => {\n                            return (\n                              <option key={value.id} value={value.id}>\n                                {value.po_number} - {value.buyer_name}\n                              </option>\n                            );\n                          })}\n                      </Field>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <hr></hr>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Farm <small>*</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"farm\"\n                        component=\"select\"\n                        onChange={FarmChange}\n                        required={true}\n                      >\n                        <option value=\"\">----</option>\n                        {farm &&\n                          farm.map((value) => {\n                            return (\n                              <option key={value.id} value={value.id}>\n                                {value.nama_supplier} - {value.lokasi_supplier}\n                              </option>\n                            );\n                          })}\n                      </Field>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Elevation <small>*</small>\n                      </CLabel>\n                      <input\n                        className=\"textInput grosir\"\n                        name=\"elevation\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"max 20 word\"\n                        readOnly\n                        defaultValue={detailFarm && detailFarm.elevation ? detailFarm.elevation : ''}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Country Of Origin <small>(default)</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"country_origin\"\n                        component=\"input\"\n                        type=\"text\"\n                        defaultValue=\"Indonesia\"\n                        placeholder=\"Indonesia\"\n                        readOnly\n                      />\n                    </CFormGroup>\n                  </CCol>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Area Of Origin <small>*</small>\n                      </CLabel>\n                      <input\n                        className=\"textInput grosir\"\n                        name=\"area_origin\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"max 20 word\"\n                        readOnly\n                        value={detailFarm && detailFarm.lokasi_supplier ? detailFarm.lokasi_supplier : ''}\n                      />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"12\" lg=\"12\" sm=\"12\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Link Google Map Location <small>*</small>\n                      </CLabel>\n                      <input\n                          className=\"textInput grosir\"\n                          name=\"link_gmaps\"\n                          component=\"input\"\n                          type=\"text\"\n                          readOnly\n                          value={detailFarm && detailFarm.link_maps ? detailFarm.link_maps : ''}\n                        />\n                    </CFormGroup>\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-kebun\">Map</CLabel>\n                      {/* <div style={{width: \"100%\", height: \"500px\"}}>{googleMap}</div> */}\n                      <div style={{width: \"100%\", height: \"500px\"}}>{googleMap()}</div>\n                    </CFormGroup>\n                    <CFormGroup row>\n                      <CLabel col xs=\"6\" htmlFor=\"nf-latitude\">\n                        Latitude\n                      </CLabel>\n                      <CLabel col xs=\"6\" htmlFor=\"nf-longitude\">\n                        Longitute\n                      </CLabel>\n                      <CCol xs=\"6\">\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"longitude\"\n                          component={customInputLat}\n                          type=\"text\"\n                          disabled\n                        />\n                      </CCol>\n                      <CCol xs=\"6\">\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"longitude\"\n                          component={customInputLong}\n                          type=\"text\"\n                          disabled\n                        />\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <hr></hr>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Species <small>*</small>\n                      </CLabel>\n                      <Field\n                        className=\"textInput grosir\"\n                        name=\"species\"\n                        component=\"select\"\n                        required={true}\n                      >\n                        <option value=\"\">----</option>\n                        <option value=\"Arabica\">Arabica</option>\n                        <option value=\"Robusta\">Robusta</option>\n                        <option value=\"Liberica\">Liberica</option>\n                      </Field>\n                    </CFormGroup>\n                  </CCol>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Variety <small>*</small>\n                      </CLabel>\n                      <Field\n                          className=\"textInput grosir\"\n                          name=\"variety\"\n                          component=\"input\"\n                          type=\"text\"\n                          placeholder={data.variety}\n                          required={true}\n                        />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CFormGroup>\n                      <CLabel htmlFor=\"nf-unit\">\n                        Process <small>*</small>\n                      </CLabel>\n                      <Field\n                          className=\"textInput grosir\"\n                          name=\"process\"\n                          component=\"input\"\n                          type=\"text\"\n                          placeholder={data.process}\n                          required={true}\n                        />\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n                <CRow>\n                  <CCol md=\"6\" lg=\"6\" sm=\"6\">\n                    <CLabel htmlFor=\"nf-unit\">\n                      Volume Order In Grams <small>*</small>\n                    </CLabel>\n                    <CFormGroup row>\n                      <CCol md=\"10\" lg=\"10\" sm=\"10\">\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"volume_order\"\n                          component=\"input\"\n                          type=\"number\"\n                          min={0}\n                          required={true}\n                          placeholder={data.volume_order}\n                        />\n                      </CCol>\n                      <CCol md=\"2\" lg=\"2\" sm=\"2\" style={{ margin: \"auto\" }}>\n                      <span>Grams</span>\n                      </CCol>\n                    </CFormGroup>\n                  </CCol>\n                </CRow>\n              </CCardBody>\n              <CCardFooter>\n                <CButton\n                  type=\"submit\"\n                  size=\"sm\"\n                  color=\"primary\"\n                  style={{ backgroundColor: \"#178d88\" }}\n                >\n                  Submit\n                </CButton>{\" \"}\n                <CButton\n                  type=\"reset\"\n                  size=\"sm\"\n                  color=\"danger\"\n                  onClick={reset}\n                  style={{ backgroundColor: \"#e2602c\" }}\n                >\n                  Reset\n                </CButton>\n              </CCardFooter>\n            </CCard>\n          </div>\n        </main>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default reduxForm({\n  form: \"editGreenBean\", // a unique identifier for this form\n})(EditGreenBeanForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/SKU/EditSKUForm.js",["1463","1464"],"import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst EditSKUForm = (props) => {\n  const { handleSubmit } = props;\n\n  const [sku, setSKU] = useState(\"\");\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let id = props.skuID;\n    UserService.detailSKU(id).then((response) => {\n      setSKU(response.data.data)\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Edit SKU</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">SKU Green Bean Code</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"sku\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={sku.sku}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">SKU Green Bean Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"name\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder={sku.name}\n                  />\n                </CFormGroup>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"editSKU\", // a unique identifier for this form\n})(EditSKUForm);\n","/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ShowGreenBeanForm.js",["1465","1466","1467","1468","1469","1470","1471","1472"],"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/MasterData/PO/DaftarPOForm.js",["1473"],"import { React, useState } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport DatePicker from \"react-datepicker\";\nimport \"../../react-datepicker.css\";\nimport moment from 'moment';\n\nconst DaftarPOForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [tgl, setStartDate] = useState('');\n\n  props.onSelectDate(moment(tgl).format('YYYY-MM-DD'));\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add PO Green Bean</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/listBiji\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">PO Number</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"po_number\"\n                    component=\"input\"\n                    type=\"text\"\n                    required={true}\n                  />\n                </CFormGroup>\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">PO Date</CLabel>\n                  <DatePicker\n                    selected={tgl}\n                    className=\"textInput grosir\"\n                    onChange={(date) => setStartDate(date)}\n                    // maxDate={new Date()}\n                    dateFormat=\"dd/MMM/yyyy\"\n                    name=\"po_date\"\n                    required={true}\n                    placeholderText=\"Select a date\"\n                  />\n                </CFormGroup>\n                &nbsp;\n                <CFormGroup>\n                  <CLabel htmlFor=\"nf-namaUnit\">Buyer Name</CLabel>\n                  <Field\n                    className=\"textInput grosir\"\n                    name=\"buyer_name\"\n                    component=\"input\"\n                    type=\"text\"\n                    required={true}\n                  />\n                </CFormGroup>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"daftarPO\", // a unique identifier for this form\n})(DaftarPOForm);\n","/Applications/MAMP/htdocs/Coffee-Traceability/src/index.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/store.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/App.js",["1474"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/serviceWorker.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/login.component.js",["1475"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/message.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/auth.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/HalamanUtama/GetID.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/helpers/history.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/EditSKU.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/ListBiji.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/DaftarBiji.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/DaftarUnit.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/DaftarProses.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/EditUnit.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ListSupplier.js",["1476","1477"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ShowSupplier.js",["1478","1479","1480","1481"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/EditProses.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPO.js",["1482"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/EditSupplier.js",["1483","1484","1485"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/DaftarBatch.js",["1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/DaftarSupplier.js",["1498","1499"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/EditBatch.js",["1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/GetBatchID.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/DaftarGreenBean.js",["1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNF.js",["1533","1534","1535","1536","1537","1538","1539"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBean.js",["1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557","1558"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/ListCNF.js",["1559","1560","1561","1562","1563"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ShowProduk.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/ListBatch.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/DaftarVarietas.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/EditVarietas.js",["1564"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/DaftarProduk.js",["1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ListGreenBean.js",["1580"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/DaftarSKU.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ShowGreenBean.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ListProduk.js",["1581","1582","1583","1584","1585","1586","1587","1588"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/TransactionExplorer/ListTransaction.js",["1589","1590","1591","1592","1593"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Header/Header.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/EditPO.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/EditBiji.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Header/Header.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js",["1594","1595"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfile.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js",["1596","1597","1598","1599","1600","1601","1602","1603","1604","1605"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGround.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScan.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/MasterDataLists.js",["1606"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/EditProses.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/AddBeans.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/ListCupping.js",["1607","1608","1609","1610","1611","1612"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplier.js",["1613","1614"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/EditBeans.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/DaftarProses.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietas.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGround.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/EditRoasting.js",["1615","1616"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/AddRoasting.js",["1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/RoastingLists.js",["1630","1631"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/EditProducts.js",["1632","1633","1634","1635"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplier.js",["1636","1637","1638"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/ProductLists.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/AddUnit.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietas.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/GetID.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/EditUnit.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfile.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/ListLogAPI.js",["1639","1640","1641","1642","1643","1644","1645"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/AddProducts.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/index.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/actions/types.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/EditBijiForm.js",["1646"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/DaftarSKUForm.js",["1647"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/EditPOForm.js",["1648","1649"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ShowGreenBeanForm.js",["1650","1651","1652","1653","1654","1655","1656","1657"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/services/user.service.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth.service.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/showResults/showResults.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/EditUnitForm.js",["1658"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/AddProductForm.js",["1659","1660","1661","1662","1663","1664","1665"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/EditVarietasForm.js",["1666"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/EditRoastingProfileForm.js",["1667"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MainPage/HalamanUtama.js",["1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Unit/AddUnitForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/abi/abi.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/DaftarSupplierForm.js",["1686"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/AddRoastingForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Products/EditProductForm.js",["1687","1688","1689","1690","1691","1692","1693","1694","1695","1696"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/DaftarProsesForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/EditWholeBeanGroundForm.js",["1697","1698"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Varietas/DaftarVarietasForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/Roasting/EditRoastingForm.js",["1699","1700","1701"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/AddBeansForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/EditSupplierForm.js",["1702","1703","1704","1705"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Proses/EditProsesForm.js",["1706"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Beans/EditBeansForm.js",["1707"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/message.js",["1708"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/showResults/showResults.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/reducers/auth.js",["1709"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth-header.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/services/auth-header-image.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/EditCuppingForm.js",["1710"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/RoastingProfile/AddRoastingProfileForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/WholeBeanGround/AddWholeBeanGroundForm.js",["1711","1712"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/CuppingScanDetail.js",["1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/EditVarietasForm.js",["1726"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Cupping/AddCuppingForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/DaftarProdukForm.js",["1727","1728"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Produk/ShowProdukForm.js",["1729","1730","1731","1732","1733","1734","1735","1736"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Varietas/DaftarVarietasForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBeanForm.js",["1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/abi/cnf.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNFForm.js",["1759","1760","1761","1762","1763","1764","1765","1766"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/DaftarGreenBeanForm.js",["1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/MyGoogleMap.js",["1786","1787","1788","1789","1790"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/ScanQRGreenBean.js",["1791","1792","1793","1794","1795","1796","1797","1798","1799","1800"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/DaftarSupplierForm.js",["1801","1802","1803","1804","1805"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/EditBatchForm.js",["1806","1807","1808"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Batch/DaftarBatchForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/EditSupplierForm.js",["1809","1810","1811","1812","1813","1814","1815","1816","1817","1818"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/ShowSupplierForm.js",["1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/EditProsesForm.js",["1843"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Proses/DaftarProsesForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPOForm.js",["1844"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/EditUnitForm.js",["1845"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Roaster/Roaster/MasterData/Supplier/Google Maps/Marker.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/Google Maps/MyGoogleMap.js",["1846","1847","1848","1849","1850"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/Supplier/Google Maps/Marker.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/HalamanUtama/HalamanUtama.js",["1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Biji/DaftarBijiForm.js",[],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/SKU/EditSKUForm.js",["1862","1863"],"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/Unit/DaftarUnitForm.js",[],{"ruleId":"1864","replacedBy":"1865"},{"ruleId":"1866","replacedBy":"1867"},{"ruleId":"1868","severity":1,"message":"1869","line":150,"column":9,"nodeType":"1870","messageId":"1871","endLine":150,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1872","line":78,"column":25,"nodeType":"1870","messageId":"1871","endLine":78,"endColumn":32},{"ruleId":"1868","severity":1,"message":"1873","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":22},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":13,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":27,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":60,"column":15,"nodeType":"1876","messageId":"1877","endLine":60,"endColumn":17},{"ruleId":"1874","severity":1,"message":"1875","line":58,"column":22,"nodeType":"1876","messageId":"1877","endLine":58,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1875","line":59,"column":23,"nodeType":"1876","messageId":"1877","endLine":59,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":62,"column":24,"nodeType":"1876","messageId":"1877","endLine":62,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":63,"column":26,"nodeType":"1876","messageId":"1877","endLine":63,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":64,"column":24,"nodeType":"1876","messageId":"1877","endLine":64,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":65,"column":21,"nodeType":"1876","messageId":"1877","endLine":65,"endColumn":23},{"ruleId":"1874","severity":1,"message":"1875","line":68,"column":23,"nodeType":"1876","messageId":"1877","endLine":68,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":69,"column":27,"nodeType":"1876","messageId":"1877","endLine":69,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":70,"column":27,"nodeType":"1876","messageId":"1877","endLine":70,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":72,"column":28,"nodeType":"1876","messageId":"1877","endLine":72,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":73,"column":34,"nodeType":"1876","messageId":"1877","endLine":73,"endColumn":36},{"ruleId":"1874","severity":1,"message":"1878","line":126,"column":42,"nodeType":"1876","messageId":"1877","endLine":126,"endColumn":44},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":27,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":37,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":27,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":37,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1881","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":10},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1883","severity":1,"message":"1884","line":35,"column":11,"nodeType":"1885","messageId":"1886","endLine":38,"endColumn":12,"fix":"1887"},{"ruleId":"1888","severity":1,"message":"1889","line":34,"column":43,"nodeType":"1890","messageId":"1891","endLine":34,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":35,"column":26,"nodeType":"1876","messageId":"1877","endLine":35,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":43,"column":43,"nodeType":"1890","messageId":"1891","endLine":43,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":44,"column":26,"nodeType":"1876","messageId":"1877","endLine":44,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":52,"column":43,"nodeType":"1890","messageId":"1891","endLine":52,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":53,"column":26,"nodeType":"1876","messageId":"1877","endLine":53,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":61,"column":43,"nodeType":"1890","messageId":"1891","endLine":61,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":62,"column":26,"nodeType":"1876","messageId":"1877","endLine":62,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":31,"column":11,"nodeType":"1876","messageId":"1877","endLine":31,"endColumn":13},{"ruleId":"1874","severity":1,"message":"1875","line":32,"column":12,"nodeType":"1876","messageId":"1877","endLine":32,"endColumn":14},{"ruleId":"1874","severity":1,"message":"1875","line":36,"column":13,"nodeType":"1876","messageId":"1877","endLine":36,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":16,"column":24,"nodeType":"1876","messageId":"1877","endLine":16,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":19,"column":25,"nodeType":"1876","messageId":"1877","endLine":19,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":22,"column":26,"nodeType":"1876","messageId":"1877","endLine":22,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":25,"column":28,"nodeType":"1876","messageId":"1877","endLine":25,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":28,"column":26,"nodeType":"1876","messageId":"1877","endLine":28,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":31,"column":23,"nodeType":"1876","messageId":"1877","endLine":31,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":36,"column":25,"nodeType":"1876","messageId":"1877","endLine":36,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":29,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":42,"column":29,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":46,"column":19,"nodeType":"1876","messageId":"1877","endLine":46,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1875","line":52,"column":25,"nodeType":"1876","messageId":"1877","endLine":52,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1892","line":30,"column":10,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":30,"column":19,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1878","line":47,"column":34,"nodeType":"1876","messageId":"1877","endLine":47,"endColumn":36},{"ruleId":"1894","severity":1,"message":"1895","line":58,"column":6,"nodeType":"1896","endLine":58,"endColumn":8,"suggestions":"1897"},{"ruleId":"1888","severity":1,"message":"1898","line":62,"column":44,"nodeType":"1890","messageId":"1899","endLine":62,"endColumn":46},{"ruleId":"1874","severity":1,"message":"1878","line":63,"column":24,"nodeType":"1876","messageId":"1877","endLine":63,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":104,"column":13,"nodeType":"1876","messageId":"1877","endLine":104,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":105,"column":19,"nodeType":"1876","messageId":"1877","endLine":105,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1878","line":109,"column":31,"nodeType":"1876","messageId":"1877","endLine":109,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":113,"column":31,"nodeType":"1876","messageId":"1877","endLine":113,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":125,"column":27,"nodeType":"1876","messageId":"1877","endLine":125,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1900","line":188,"column":15,"nodeType":"1870","messageId":"1871","endLine":188,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1901","line":189,"column":15,"nodeType":"1870","messageId":"1871","endLine":189,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1902","line":190,"column":15,"nodeType":"1870","messageId":"1871","endLine":190,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1903","line":198,"column":17,"nodeType":"1870","messageId":"1871","endLine":198,"endColumn":20},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1905"},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1906"},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"1907"},{"ruleId":"1868","severity":1,"message":"1908","line":20,"column":25,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":49,"column":6,"nodeType":"1896","endLine":49,"endColumn":8,"suggestions":"1909"},{"ruleId":"1910","severity":1,"message":"1911","line":101,"column":7,"nodeType":"1876","messageId":"1912","endLine":101,"endColumn":17},{"ruleId":"1874","severity":1,"message":"1875","line":101,"column":11,"nodeType":"1876","messageId":"1877","endLine":101,"endColumn":13},{"ruleId":"1910","severity":1,"message":"1911","line":101,"column":21,"nodeType":"1876","messageId":"1912","endLine":101,"endColumn":32},{"ruleId":"1874","severity":1,"message":"1875","line":101,"column":26,"nodeType":"1876","messageId":"1877","endLine":101,"endColumn":28},{"ruleId":"1868","severity":1,"message":"1908","line":24,"column":25,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"1913"},{"ruleId":"1888","severity":1,"message":"1889","line":126,"column":43,"nodeType":"1890","messageId":"1891","endLine":126,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":127,"column":39,"nodeType":"1876","messageId":"1877","endLine":127,"endColumn":41},{"ruleId":"1888","severity":1,"message":"1889","line":339,"column":49,"nodeType":"1890","messageId":"1891","endLine":339,"endColumn":51},{"ruleId":"1874","severity":1,"message":"1878","line":340,"column":40,"nodeType":"1876","messageId":"1877","endLine":340,"endColumn":42},{"ruleId":"1888","severity":1,"message":"1889","line":372,"column":41,"nodeType":"1890","messageId":"1891","endLine":372,"endColumn":43},{"ruleId":"1874","severity":1,"message":"1878","line":373,"column":38,"nodeType":"1876","messageId":"1877","endLine":373,"endColumn":40},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1914"},{"ruleId":"1888","severity":1,"message":"1889","line":335,"column":51,"nodeType":"1890","messageId":"1891","endLine":335,"endColumn":53},{"ruleId":"1874","severity":1,"message":"1878","line":336,"column":44,"nodeType":"1876","messageId":"1877","endLine":336,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1908","line":19,"column":25,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":39,"column":6,"nodeType":"1896","endLine":39,"endColumn":8,"suggestions":"1915"},{"ruleId":"1916","severity":1,"message":"1917","line":236,"column":21,"nodeType":"1918","messageId":"1919","endLine":236,"endColumn":47},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1888","severity":1,"message":"1898","line":88,"column":50,"nodeType":"1890","messageId":"1899","endLine":88,"endColumn":52},{"ruleId":"1868","severity":1,"message":"1921","line":128,"column":13,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":128,"column":21,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":128,"column":35,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":128,"column":48,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":54},{"ruleId":"1888","severity":1,"message":"1898","line":198,"column":50,"nodeType":"1890","messageId":"1899","endLine":198,"endColumn":52},{"ruleId":"1874","severity":1,"message":"1878","line":210,"column":40,"nodeType":"1876","messageId":"1877","endLine":210,"endColumn":42},{"ruleId":"1925","severity":1,"message":"1926","line":268,"column":15,"nodeType":"1885","endLine":271,"endColumn":16},{"ruleId":"1883","severity":1,"message":"1884","line":486,"column":55,"nodeType":"1885","messageId":"1886","endLine":486,"endColumn":186,"fix":"1927"},{"ruleId":"1925","severity":1,"message":"1926","line":500,"column":17,"nodeType":"1885","endLine":502,"endColumn":86},{"ruleId":"1868","severity":1,"message":"1928","line":2,"column":28,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":34},{"ruleId":"1868","severity":1,"message":"1929","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1930","line":24,"column":16,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":23},{"ruleId":"1931","severity":1,"message":"1932","line":5,"column":1,"nodeType":"1933","endLine":18,"endColumn":2},{"ruleId":"1931","severity":1,"message":"1932","line":15,"column":3,"nodeType":"1933","endLine":50,"endColumn":4},{"ruleId":"1868","severity":1,"message":"1924","line":95,"column":13,"nodeType":"1870","messageId":"1871","endLine":95,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1921","line":133,"column":13,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":133,"column":21,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":133,"column":35,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":133,"column":48,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":54},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1934","line":12,"column":8,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1935","line":14,"column":8,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":15,"column":10,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1937","line":22,"column":7,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":31,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":40},{"ruleId":"1868","severity":1,"message":"1935","line":6,"column":8,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":7,"column":10,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1938","line":32,"column":5,"nodeType":"1870","messageId":"1871","endLine":32,"endColumn":9},{"ruleId":"1874","severity":1,"message":"1875","line":68,"column":28,"nodeType":"1876","messageId":"1877","endLine":68,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":69,"column":24,"nodeType":"1876","messageId":"1877","endLine":69,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1903","line":139,"column":21,"nodeType":"1870","messageId":"1871","endLine":139,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1941","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1945","line":45,"column":9,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1946","line":50,"column":9,"nodeType":"1870","messageId":"1871","endLine":50,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":13,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":27,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1947","line":8,"column":10,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1948","line":21,"column":9,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":24},{"ruleId":"1894","severity":1,"message":"1949","line":33,"column":6,"nodeType":"1896","endLine":33,"endColumn":8,"suggestions":"1950"},{"ruleId":"1874","severity":1,"message":"1878","line":45,"column":34,"nodeType":"1876","messageId":"1877","endLine":45,"endColumn":36},{"ruleId":"1894","severity":1,"message":"1895","line":80,"column":6,"nodeType":"1896","endLine":80,"endColumn":8,"suggestions":"1951"},{"ruleId":"1874","severity":1,"message":"1875","line":91,"column":20,"nodeType":"1876","messageId":"1877","endLine":91,"endColumn":22},{"ruleId":"1874","severity":1,"message":"1875","line":92,"column":19,"nodeType":"1876","messageId":"1877","endLine":92,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1878","line":100,"column":31,"nodeType":"1876","messageId":"1877","endLine":100,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":103,"column":31,"nodeType":"1876","messageId":"1877","endLine":103,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1900","line":168,"column":17,"nodeType":"1870","messageId":"1871","endLine":168,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1901","line":169,"column":17,"nodeType":"1870","messageId":"1871","endLine":169,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1902","line":170,"column":17,"nodeType":"1870","messageId":"1871","endLine":170,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1878","line":314,"column":40,"nodeType":"1876","messageId":"1877","endLine":314,"endColumn":42},{"ruleId":"1868","severity":1,"message":"1952","line":87,"column":11,"nodeType":"1870","messageId":"1871","endLine":87,"endColumn":23},{"ruleId":"1874","severity":1,"message":"1878","line":42,"column":36,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":38},{"ruleId":"1874","severity":1,"message":"1878","line":44,"column":43,"nodeType":"1876","messageId":"1877","endLine":44,"endColumn":45},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":20,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":28},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1953","line":1,"column":41,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":52},{"ruleId":"1868","severity":1,"message":"1954","line":1,"column":54,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":63},{"ruleId":"1874","severity":1,"message":"1875","line":29,"column":11,"nodeType":"1876","messageId":"1877","endLine":29,"endColumn":13},{"ruleId":"1874","severity":1,"message":"1875","line":30,"column":12,"nodeType":"1876","messageId":"1877","endLine":30,"endColumn":14},{"ruleId":"1874","severity":1,"message":"1875","line":34,"column":13,"nodeType":"1876","messageId":"1877","endLine":34,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":50,"column":22,"nodeType":"1876","messageId":"1877","endLine":50,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1875","line":57,"column":21,"nodeType":"1876","messageId":"1877","endLine":57,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1928","line":2,"column":28,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":34},{"ruleId":"1868","severity":1,"message":"1955","line":28,"column":10,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":16},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"1956"},{"ruleId":"1874","severity":1,"message":"1878","line":281,"column":31,"nodeType":"1876","messageId":"1877","endLine":281,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1941","line":21,"column":10,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1957","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1958","line":28,"column":10,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1959","line":29,"column":10,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1960","line":30,"column":10,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1961","line":31,"column":10,"nodeType":"1870","messageId":"1871","endLine":31,"endColumn":22},{"ruleId":"1894","severity":1,"message":"1904","line":37,"column":6,"nodeType":"1896","endLine":37,"endColumn":8,"suggestions":"1962"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1941","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":18},{"ruleId":"1894","severity":1,"message":"1904","line":32,"column":6,"nodeType":"1896","endLine":32,"endColumn":8,"suggestions":"1963"},{"ruleId":"1888","severity":1,"message":"1898","line":46,"column":48,"nodeType":"1890","messageId":"1899","endLine":46,"endColumn":50},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"1964"},{"ruleId":"1868","severity":1,"message":"1908","line":20,"column":25,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":54,"column":6,"nodeType":"1896","endLine":54,"endColumn":8,"suggestions":"1965"},{"ruleId":"1888","severity":1,"message":"1889","line":199,"column":43,"nodeType":"1890","messageId":"1891","endLine":199,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":200,"column":40,"nodeType":"1876","messageId":"1877","endLine":200,"endColumn":42},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1966"},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"1967"},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1968"},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":17,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":25},{"ruleId":"1868","severity":1,"message":"1969","line":15,"column":10,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1908","line":18,"column":25,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"1970"},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"1971"},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1921","line":65,"column":13,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":65,"column":21,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":65,"column":35,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":65,"column":48,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":54},{"ruleId":"1874","severity":1,"message":"1878","line":172,"column":53,"nodeType":"1876","messageId":"1877","endLine":172,"endColumn":55},{"ruleId":"1888","severity":1,"message":"1898","line":205,"column":58,"nodeType":"1890","messageId":"1899","endLine":205,"endColumn":60},{"ruleId":"1888","severity":1,"message":"1898","line":235,"column":50,"nodeType":"1890","messageId":"1899","endLine":235,"endColumn":52},{"ruleId":"1888","severity":1,"message":"1898","line":279,"column":48,"nodeType":"1890","messageId":"1899","endLine":279,"endColumn":50},{"ruleId":"1874","severity":1,"message":"1878","line":291,"column":38,"nodeType":"1876","messageId":"1877","endLine":291,"endColumn":40},{"ruleId":"1925","severity":1,"message":"1926","line":337,"column":15,"nodeType":"1885","endLine":340,"endColumn":16},{"ruleId":"1883","severity":1,"message":"1884","line":479,"column":77,"nodeType":"1885","messageId":"1886","endLine":479,"endColumn":238,"fix":"1975"},{"ruleId":"1925","severity":1,"message":"1926","line":503,"column":27,"nodeType":"1885","endLine":505,"endColumn":111},{"ruleId":"1883","severity":1,"message":"1884","line":581,"column":63,"nodeType":"1885","messageId":"1886","endLine":581,"endColumn":258,"fix":"1976"},{"ruleId":"1925","severity":1,"message":"1926","line":605,"column":25,"nodeType":"1885","endLine":607,"endColumn":126},{"ruleId":"1868","severity":1,"message":"1924","line":95,"column":13,"nodeType":"1870","messageId":"1871","endLine":95,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1921","line":133,"column":13,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":133,"column":21,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":133,"column":35,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":133,"column":48,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":54},{"ruleId":"1874","severity":1,"message":"1875","line":15,"column":29,"nodeType":"1876","messageId":"1877","endLine":15,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":18,"column":27,"nodeType":"1876","messageId":"1877","endLine":18,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":21,"column":32,"nodeType":"1876","messageId":"1877","endLine":21,"endColumn":34},{"ruleId":"1874","severity":1,"message":"1875","line":24,"column":23,"nodeType":"1876","messageId":"1877","endLine":24,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":27,"column":27,"nodeType":"1876","messageId":"1877","endLine":27,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":30,"column":24,"nodeType":"1876","messageId":"1877","endLine":30,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":33,"column":21,"nodeType":"1876","messageId":"1877","endLine":33,"endColumn":23},{"ruleId":"1874","severity":1,"message":"1875","line":36,"column":30,"nodeType":"1876","messageId":"1877","endLine":36,"endColumn":32},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":25,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":42,"column":25,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1874","severity":1,"message":"1875","line":45,"column":23,"nodeType":"1876","messageId":"1877","endLine":45,"endColumn":25},{"ruleId":"1894","severity":1,"message":"1904","line":33,"column":6,"nodeType":"1896","endLine":33,"endColumn":8,"suggestions":"1977"},{"ruleId":"1868","severity":1,"message":"1978","line":10,"column":3,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":7},{"ruleId":"1868","severity":1,"message":"1979","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1980","line":12,"column":3,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1981","line":13,"column":3,"nodeType":"1870","messageId":"1871","endLine":13,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1982","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1983","line":15,"column":3,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1888","severity":1,"message":"1898","line":88,"column":48,"nodeType":"1890","messageId":"1899","endLine":88,"endColumn":50},{"ruleId":"1874","severity":1,"message":"1878","line":100,"column":38,"nodeType":"1876","messageId":"1877","endLine":100,"endColumn":40},{"ruleId":"1925","severity":1,"message":"1926","line":147,"column":15,"nodeType":"1885","endLine":150,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1921","line":187,"column":13,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":187,"column":21,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":187,"column":35,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":187,"column":48,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":54},{"ruleId":"1883","severity":1,"message":"1884","line":306,"column":57,"nodeType":"1885","messageId":"1886","endLine":306,"endColumn":188,"fix":"1984"},{"ruleId":"1925","severity":1,"message":"1926","line":322,"column":19,"nodeType":"1885","endLine":324,"endColumn":88},{"ruleId":"1868","severity":1,"message":"1881","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":10},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1935","line":13,"column":8,"nodeType":"1870","messageId":"1871","endLine":13,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":14,"column":10,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1985","line":15,"column":8,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1986","line":19,"column":5,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1937","line":21,"column":7,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":11},{"ruleId":"1874","severity":1,"message":"1875","line":19,"column":12,"nodeType":"1876","messageId":"1877","endLine":19,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1985","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1947","line":6,"column":10,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1987","line":7,"column":20,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":30},{"ruleId":"1868","severity":1,"message":"1988","line":9,"column":8,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1989","line":10,"column":10,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1986","line":14,"column":7,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1990","line":18,"column":9,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1991","line":20,"column":10,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1992","line":20,"column":17,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1993","line":21,"column":10,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1994","line":21,"column":23,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":38},{"ruleId":"1868","severity":1,"message":"1892","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":22,"column":19,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1995","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1996","line":23,"column":19,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1997","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1999","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2000","line":27,"column":16,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2001","line":29,"column":10,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":20},{"ruleId":"1868","severity":1,"message":"2002","line":29,"column":22,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1985","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1947","line":6,"column":10,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1987","line":7,"column":20,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":30},{"ruleId":"1868","severity":1,"message":"1986","line":12,"column":7,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1991","line":17,"column":10,"nodeType":"1870","messageId":"1871","endLine":17,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1992","line":17,"column":17,"nodeType":"1870","messageId":"1871","endLine":17,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1993","line":18,"column":10,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1994","line":18,"column":23,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":38},{"ruleId":"1868","severity":1,"message":"1892","line":19,"column":10,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":19,"column":19,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1995","line":20,"column":10,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1996","line":20,"column":19,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1997","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1999","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2000","line":24,"column":16,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2001","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":20},{"ruleId":"1868","severity":1,"message":"2002","line":26,"column":22,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":35},{"ruleId":"1868","severity":1,"message":"2003","line":18,"column":10,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"2004","line":10,"column":3,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1921","line":82,"column":13,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":82,"column":21,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":82,"column":35,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":82,"column":48,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":54},{"ruleId":"1883","severity":1,"message":"1884","line":200,"column":57,"nodeType":"1885","messageId":"1886","endLine":200,"endColumn":168,"fix":"2005"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1894","severity":1,"message":"1904","line":30,"column":6,"nodeType":"1896","endLine":30,"endColumn":8,"suggestions":"2006"},{"ruleId":"1868","severity":1,"message":"2007","line":2,"column":17,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1920","line":24,"column":8,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1922","line":38,"column":10,"nodeType":"1870","messageId":"1871","endLine":38,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2008","line":38,"column":24,"nodeType":"1870","messageId":"1871","endLine":38,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1923","line":39,"column":10,"nodeType":"1870","messageId":"1871","endLine":39,"endColumn":21},{"ruleId":"1868","severity":1,"message":"2009","line":39,"column":23,"nodeType":"1870","messageId":"1871","endLine":39,"endColumn":37},{"ruleId":"1868","severity":1,"message":"1924","line":40,"column":10,"nodeType":"1870","messageId":"1871","endLine":40,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2010","line":40,"column":18,"nodeType":"1870","messageId":"1871","endLine":40,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2011","line":41,"column":10,"nodeType":"1870","messageId":"1871","endLine":41,"endColumn":18},{"ruleId":"1868","severity":1,"message":"2012","line":41,"column":20,"nodeType":"1870","messageId":"1871","endLine":41,"endColumn":31},{"ruleId":"1868","severity":1,"message":"1921","line":42,"column":10,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2013","line":42,"column":18,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2014","line":43,"column":10,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2015","line":43,"column":18,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2016","line":44,"column":10,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2017","line":44,"column":16,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2018","line":45,"column":19,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"2007","line":2,"column":17,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1920","line":24,"column":8,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2019","line":28,"column":8,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2020","line":36,"column":10,"nodeType":"1870","messageId":"1871","endLine":36,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1922","line":42,"column":10,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2008","line":42,"column":24,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1923","line":43,"column":10,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":21},{"ruleId":"1868","severity":1,"message":"2009","line":43,"column":23,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":37},{"ruleId":"1868","severity":1,"message":"1924","line":44,"column":10,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2010","line":44,"column":18,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2011","line":45,"column":10,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":18},{"ruleId":"1868","severity":1,"message":"2012","line":45,"column":20,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":31},{"ruleId":"1868","severity":1,"message":"1921","line":46,"column":10,"nodeType":"1870","messageId":"1871","endLine":46,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2013","line":46,"column":18,"nodeType":"1870","messageId":"1871","endLine":46,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2014","line":47,"column":10,"nodeType":"1870","messageId":"1871","endLine":47,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2015","line":47,"column":18,"nodeType":"1870","messageId":"1871","endLine":47,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2016","line":48,"column":10,"nodeType":"1870","messageId":"1871","endLine":48,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2017","line":48,"column":16,"nodeType":"1870","messageId":"1871","endLine":48,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2018","line":49,"column":19,"nodeType":"1870","messageId":"1871","endLine":49,"endColumn":29},{"ruleId":"1894","severity":1,"message":"1904","line":131,"column":6,"nodeType":"1896","endLine":131,"endColumn":8,"suggestions":"2021"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2022"},{"ruleId":"1868","severity":1,"message":"1908","line":24,"column":25,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"2023"},{"ruleId":"1888","severity":1,"message":"1889","line":126,"column":43,"nodeType":"1890","messageId":"1891","endLine":126,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":127,"column":39,"nodeType":"1876","messageId":"1877","endLine":127,"endColumn":41},{"ruleId":"1888","severity":1,"message":"1889","line":339,"column":49,"nodeType":"1890","messageId":"1891","endLine":339,"endColumn":51},{"ruleId":"1874","severity":1,"message":"1878","line":340,"column":40,"nodeType":"1876","messageId":"1877","endLine":340,"endColumn":42},{"ruleId":"1888","severity":1,"message":"1889","line":372,"column":41,"nodeType":"1890","messageId":"1891","endLine":372,"endColumn":43},{"ruleId":"1874","severity":1,"message":"1878","line":373,"column":38,"nodeType":"1876","messageId":"1877","endLine":373,"endColumn":40},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1869","line":153,"column":9,"nodeType":"1870","messageId":"1871","endLine":153,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1872","line":78,"column":25,"nodeType":"1870","messageId":"1871","endLine":78,"endColumn":32},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":27,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":37,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":27,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1882","line":2,"column":8,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1934","line":3,"column":8,"nodeType":"1870","messageId":"1871","endLine":3,"endColumn":19},{"ruleId":"1868","severity":1,"message":"2003","line":6,"column":10,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":18},{"ruleId":"1874","severity":1,"message":"1875","line":19,"column":12,"nodeType":"1876","messageId":"1877","endLine":19,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1997","line":14,"column":10,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":15,"column":10,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":14},{"ruleId":"1874","severity":1,"message":"1875","line":65,"column":15,"nodeType":"1876","messageId":"1877","endLine":65,"endColumn":17},{"ruleId":"1874","severity":1,"message":"1875","line":58,"column":22,"nodeType":"1876","messageId":"1877","endLine":58,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1875","line":59,"column":23,"nodeType":"1876","messageId":"1877","endLine":59,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":62,"column":24,"nodeType":"1876","messageId":"1877","endLine":62,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":63,"column":26,"nodeType":"1876","messageId":"1877","endLine":63,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":64,"column":24,"nodeType":"1876","messageId":"1877","endLine":64,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":65,"column":21,"nodeType":"1876","messageId":"1877","endLine":65,"endColumn":23},{"ruleId":"1874","severity":1,"message":"1875","line":68,"column":23,"nodeType":"1876","messageId":"1877","endLine":68,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":69,"column":27,"nodeType":"1876","messageId":"1877","endLine":69,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":70,"column":27,"nodeType":"1876","messageId":"1877","endLine":70,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":72,"column":28,"nodeType":"1876","messageId":"1877","endLine":72,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":73,"column":34,"nodeType":"1876","messageId":"1877","endLine":73,"endColumn":36},{"ruleId":"1874","severity":1,"message":"1878","line":126,"column":42,"nodeType":"1876","messageId":"1877","endLine":126,"endColumn":44},{"ruleId":"1868","severity":1,"message":"1997","line":10,"column":10,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":11,"column":10,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":14},{"ruleId":"1874","severity":1,"message":"1875","line":16,"column":24,"nodeType":"1876","messageId":"1877","endLine":16,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":19,"column":25,"nodeType":"1876","messageId":"1877","endLine":19,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":22,"column":26,"nodeType":"1876","messageId":"1877","endLine":22,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":25,"column":28,"nodeType":"1876","messageId":"1877","endLine":25,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":28,"column":26,"nodeType":"1876","messageId":"1877","endLine":28,"endColumn":28},{"ruleId":"1874","severity":1,"message":"1875","line":31,"column":23,"nodeType":"1876","messageId":"1877","endLine":31,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":36,"column":25,"nodeType":"1876","messageId":"1877","endLine":36,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":29,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":42,"column":29,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":46,"column":19,"nodeType":"1876","messageId":"1877","endLine":46,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1875","line":52,"column":25,"nodeType":"1876","messageId":"1877","endLine":52,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1985","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1947","line":6,"column":10,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1987","line":7,"column":20,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":30},{"ruleId":"1868","severity":1,"message":"1988","line":9,"column":8,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1989","line":10,"column":10,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1986","line":14,"column":7,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1990","line":18,"column":9,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1991","line":20,"column":10,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1992","line":20,"column":17,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1993","line":21,"column":10,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1994","line":21,"column":23,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":38},{"ruleId":"1868","severity":1,"message":"1892","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":22,"column":19,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1995","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1996","line":23,"column":19,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1997","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1999","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2000","line":27,"column":16,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2001","line":29,"column":10,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":20},{"ruleId":"1868","severity":1,"message":"2002","line":29,"column":22,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":31,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":40},{"ruleId":"1868","severity":1,"message":"1935","line":6,"column":8,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":7,"column":10,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1938","line":32,"column":5,"nodeType":"1870","messageId":"1871","endLine":32,"endColumn":9},{"ruleId":"1874","severity":1,"message":"1875","line":68,"column":28,"nodeType":"1876","messageId":"1877","endLine":68,"endColumn":30},{"ruleId":"1874","severity":1,"message":"1875","line":69,"column":24,"nodeType":"1876","messageId":"1877","endLine":69,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1903","line":139,"column":21,"nodeType":"1870","messageId":"1871","endLine":139,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1985","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1947","line":6,"column":10,"nodeType":"1870","messageId":"1871","endLine":6,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1987","line":7,"column":20,"nodeType":"1870","messageId":"1871","endLine":7,"endColumn":30},{"ruleId":"1868","severity":1,"message":"1986","line":12,"column":7,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1991","line":17,"column":10,"nodeType":"1870","messageId":"1871","endLine":17,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1992","line":17,"column":17,"nodeType":"1870","messageId":"1871","endLine":17,"endColumn":26},{"ruleId":"1868","severity":1,"message":"1993","line":18,"column":10,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1994","line":18,"column":23,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":38},{"ruleId":"1868","severity":1,"message":"1892","line":19,"column":10,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":19,"column":19,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1995","line":20,"column":10,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1996","line":20,"column":19,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1997","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1998","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1999","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2000","line":24,"column":16,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2001","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":20},{"ruleId":"1868","severity":1,"message":"2002","line":26,"column":22,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1934","line":12,"column":8,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1935","line":14,"column":8,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":15,"column":10,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1937","line":22,"column":7,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1873","line":5,"column":8,"nodeType":"1870","messageId":"1871","endLine":5,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1892","line":30,"column":10,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1893","line":30,"column":19,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1878","line":47,"column":34,"nodeType":"1876","messageId":"1877","endLine":47,"endColumn":36},{"ruleId":"1894","severity":1,"message":"1895","line":58,"column":6,"nodeType":"1896","endLine":58,"endColumn":8,"suggestions":"2024"},{"ruleId":"1888","severity":1,"message":"1898","line":62,"column":44,"nodeType":"1890","messageId":"1899","endLine":62,"endColumn":46},{"ruleId":"1874","severity":1,"message":"1878","line":63,"column":24,"nodeType":"1876","messageId":"1877","endLine":63,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":104,"column":13,"nodeType":"1876","messageId":"1877","endLine":104,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":105,"column":19,"nodeType":"1876","messageId":"1877","endLine":105,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1878","line":109,"column":31,"nodeType":"1876","messageId":"1877","endLine":109,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":113,"column":31,"nodeType":"1876","messageId":"1877","endLine":113,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":125,"column":27,"nodeType":"1876","messageId":"1877","endLine":125,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1900","line":188,"column":15,"nodeType":"1870","messageId":"1871","endLine":188,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1901","line":189,"column":15,"nodeType":"1870","messageId":"1871","endLine":189,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1902","line":190,"column":15,"nodeType":"1870","messageId":"1871","endLine":190,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1903","line":198,"column":17,"nodeType":"1870","messageId":"1871","endLine":198,"endColumn":20},{"ruleId":"1868","severity":1,"message":"2003","line":18,"column":10,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":18},{"ruleId":"1888","severity":1,"message":"1889","line":34,"column":43,"nodeType":"1890","messageId":"1891","endLine":34,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":35,"column":26,"nodeType":"1876","messageId":"1877","endLine":35,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":43,"column":43,"nodeType":"1890","messageId":"1891","endLine":43,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":44,"column":26,"nodeType":"1876","messageId":"1877","endLine":44,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":52,"column":43,"nodeType":"1890","messageId":"1891","endLine":52,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":53,"column":26,"nodeType":"1876","messageId":"1877","endLine":53,"endColumn":28},{"ruleId":"1888","severity":1,"message":"1889","line":61,"column":43,"nodeType":"1890","messageId":"1891","endLine":61,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":62,"column":26,"nodeType":"1876","messageId":"1877","endLine":62,"endColumn":28},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":27,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":35},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":37,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1881","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":10},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1883","severity":1,"message":"1884","line":35,"column":11,"nodeType":"1885","messageId":"1886","endLine":38,"endColumn":12,"fix":"2025"},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1874","severity":1,"message":"1875","line":45,"column":23,"nodeType":"1876","messageId":"1877","endLine":45,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":15,"column":29,"nodeType":"1876","messageId":"1877","endLine":15,"endColumn":31},{"ruleId":"1874","severity":1,"message":"1875","line":18,"column":27,"nodeType":"1876","messageId":"1877","endLine":18,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":21,"column":32,"nodeType":"1876","messageId":"1877","endLine":21,"endColumn":34},{"ruleId":"1874","severity":1,"message":"1875","line":24,"column":23,"nodeType":"1876","messageId":"1877","endLine":24,"endColumn":25},{"ruleId":"1874","severity":1,"message":"1875","line":27,"column":27,"nodeType":"1876","messageId":"1877","endLine":27,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":30,"column":24,"nodeType":"1876","messageId":"1877","endLine":30,"endColumn":26},{"ruleId":"1874","severity":1,"message":"1875","line":33,"column":21,"nodeType":"1876","messageId":"1877","endLine":33,"endColumn":23},{"ruleId":"1874","severity":1,"message":"1875","line":36,"column":30,"nodeType":"1876","messageId":"1877","endLine":36,"endColumn":32},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":25,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":27},{"ruleId":"1874","severity":1,"message":"1875","line":42,"column":25,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1952","line":87,"column":11,"nodeType":"1870","messageId":"1871","endLine":87,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1978","line":10,"column":3,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":7},{"ruleId":"1868","severity":1,"message":"1979","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1980","line":12,"column":3,"nodeType":"1870","messageId":"1871","endLine":12,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1981","line":13,"column":3,"nodeType":"1870","messageId":"1871","endLine":13,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1982","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":11},{"ruleId":"1868","severity":1,"message":"1983","line":15,"column":3,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":8},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":13,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":15},{"ruleId":"1874","severity":1,"message":"1875","line":39,"column":27,"nodeType":"1876","messageId":"1877","endLine":39,"endColumn":29},{"ruleId":"1874","severity":1,"message":"1875","line":50,"column":22,"nodeType":"1876","messageId":"1877","endLine":50,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1875","line":57,"column":21,"nodeType":"1876","messageId":"1877","endLine":57,"endColumn":23},{"ruleId":"1868","severity":1,"message":"1947","line":8,"column":10,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1948","line":21,"column":9,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":24},{"ruleId":"1894","severity":1,"message":"1949","line":33,"column":6,"nodeType":"1896","endLine":33,"endColumn":8,"suggestions":"2026"},{"ruleId":"1874","severity":1,"message":"1878","line":45,"column":34,"nodeType":"1876","messageId":"1877","endLine":45,"endColumn":36},{"ruleId":"1894","severity":1,"message":"1895","line":80,"column":6,"nodeType":"1896","endLine":80,"endColumn":8,"suggestions":"2027"},{"ruleId":"1874","severity":1,"message":"1875","line":91,"column":20,"nodeType":"1876","messageId":"1877","endLine":91,"endColumn":22},{"ruleId":"1874","severity":1,"message":"1875","line":92,"column":19,"nodeType":"1876","messageId":"1877","endLine":92,"endColumn":21},{"ruleId":"1874","severity":1,"message":"1878","line":100,"column":31,"nodeType":"1876","messageId":"1877","endLine":100,"endColumn":33},{"ruleId":"1874","severity":1,"message":"1878","line":103,"column":31,"nodeType":"1876","messageId":"1877","endLine":103,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1900","line":168,"column":17,"nodeType":"1870","messageId":"1871","endLine":168,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1901","line":169,"column":17,"nodeType":"1870","messageId":"1871","endLine":169,"endColumn":24},{"ruleId":"1868","severity":1,"message":"1902","line":170,"column":17,"nodeType":"1870","messageId":"1871","endLine":170,"endColumn":24},{"ruleId":"1874","severity":1,"message":"1878","line":314,"column":40,"nodeType":"1876","messageId":"1877","endLine":314,"endColumn":42},{"ruleId":"1874","severity":1,"message":"1878","line":42,"column":36,"nodeType":"1876","messageId":"1877","endLine":42,"endColumn":38},{"ruleId":"1874","severity":1,"message":"1878","line":44,"column":43,"nodeType":"1876","messageId":"1877","endLine":44,"endColumn":45},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":20,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":28},{"ruleId":"1868","severity":1,"message":"1880","line":1,"column":30,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1953","line":1,"column":41,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":52},{"ruleId":"1868","severity":1,"message":"1954","line":1,"column":54,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":63},{"ruleId":"1874","severity":1,"message":"1875","line":29,"column":11,"nodeType":"1876","messageId":"1877","endLine":29,"endColumn":13},{"ruleId":"1874","severity":1,"message":"1875","line":30,"column":12,"nodeType":"1876","messageId":"1877","endLine":30,"endColumn":14},{"ruleId":"1874","severity":1,"message":"1875","line":34,"column":13,"nodeType":"1876","messageId":"1877","endLine":34,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1881","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":10},{"ruleId":"1868","severity":1,"message":"1882","line":11,"column":8,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1935","line":13,"column":8,"nodeType":"1870","messageId":"1871","endLine":13,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1936","line":14,"column":10,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1985","line":15,"column":8,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1986","line":19,"column":5,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1937","line":21,"column":7,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":11},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2028"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1894","severity":1,"message":"1904","line":30,"column":6,"nodeType":"1896","endLine":30,"endColumn":8,"suggestions":"2029"},{"ruleId":"1868","severity":1,"message":"1908","line":24,"column":25,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"2030"},{"ruleId":"1888","severity":1,"message":"1889","line":126,"column":43,"nodeType":"1890","messageId":"1891","endLine":126,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":127,"column":39,"nodeType":"1876","messageId":"1877","endLine":127,"endColumn":41},{"ruleId":"1888","severity":1,"message":"1889","line":339,"column":49,"nodeType":"1890","messageId":"1891","endLine":339,"endColumn":51},{"ruleId":"1874","severity":1,"message":"1878","line":340,"column":40,"nodeType":"1876","messageId":"1877","endLine":340,"endColumn":42},{"ruleId":"1888","severity":1,"message":"1889","line":372,"column":41,"nodeType":"1890","messageId":"1891","endLine":372,"endColumn":43},{"ruleId":"1874","severity":1,"message":"1878","line":373,"column":38,"nodeType":"1876","messageId":"1877","endLine":373,"endColumn":40},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2031"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1941","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":18},{"ruleId":"1894","severity":1,"message":"1904","line":32,"column":6,"nodeType":"1896","endLine":32,"endColumn":8,"suggestions":"2032"},{"ruleId":"1888","severity":1,"message":"1898","line":46,"column":48,"nodeType":"1890","messageId":"1899","endLine":46,"endColumn":50},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2033"},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2034"},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1921","line":65,"column":13,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":65,"column":21,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":65,"column":35,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":65,"column":48,"nodeType":"1870","messageId":"1871","endLine":65,"endColumn":54},{"ruleId":"1874","severity":1,"message":"1878","line":172,"column":53,"nodeType":"1876","messageId":"1877","endLine":172,"endColumn":55},{"ruleId":"1888","severity":1,"message":"1898","line":205,"column":58,"nodeType":"1890","messageId":"1899","endLine":205,"endColumn":60},{"ruleId":"1888","severity":1,"message":"1898","line":235,"column":50,"nodeType":"1890","messageId":"1899","endLine":235,"endColumn":52},{"ruleId":"1888","severity":1,"message":"1898","line":279,"column":48,"nodeType":"1890","messageId":"1899","endLine":279,"endColumn":50},{"ruleId":"1874","severity":1,"message":"1878","line":291,"column":38,"nodeType":"1876","messageId":"1877","endLine":291,"endColumn":40},{"ruleId":"1925","severity":1,"message":"1926","line":337,"column":15,"nodeType":"1885","endLine":340,"endColumn":16},{"ruleId":"1883","severity":1,"message":"1884","line":479,"column":77,"nodeType":"1885","messageId":"1886","endLine":479,"endColumn":238,"fix":"2035"},{"ruleId":"1925","severity":1,"message":"1926","line":503,"column":27,"nodeType":"1885","endLine":505,"endColumn":111},{"ruleId":"1883","severity":1,"message":"1884","line":581,"column":63,"nodeType":"1885","messageId":"1886","endLine":581,"endColumn":258,"fix":"2036"},{"ruleId":"1925","severity":1,"message":"1926","line":605,"column":25,"nodeType":"1885","endLine":607,"endColumn":126},{"ruleId":"1868","severity":1,"message":"1928","line":2,"column":28,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":34},{"ruleId":"1868","severity":1,"message":"1941","line":21,"column":10,"nodeType":"1870","messageId":"1871","endLine":21,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":22,"column":10,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":23,"column":10,"nodeType":"1870","messageId":"1871","endLine":23,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1957","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1958","line":28,"column":10,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1959","line":29,"column":10,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1960","line":30,"column":10,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":20},{"ruleId":"1868","severity":1,"message":"1961","line":31,"column":10,"nodeType":"1870","messageId":"1871","endLine":31,"endColumn":22},{"ruleId":"1894","severity":1,"message":"1904","line":37,"column":6,"nodeType":"1896","endLine":37,"endColumn":8,"suggestions":"2037"},{"ruleId":"1868","severity":1,"message":"1908","line":18,"column":25,"nodeType":"1870","messageId":"1871","endLine":18,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2038"},{"ruleId":"1868","severity":1,"message":"1955","line":28,"column":10,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":16},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"2039"},{"ruleId":"1874","severity":1,"message":"1878","line":281,"column":31,"nodeType":"1876","messageId":"1877","endLine":281,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1908","line":20,"column":25,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":54,"column":6,"nodeType":"1896","endLine":54,"endColumn":8,"suggestions":"2040"},{"ruleId":"1888","severity":1,"message":"1889","line":199,"column":43,"nodeType":"1890","messageId":"1891","endLine":199,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":200,"column":40,"nodeType":"1876","messageId":"1877","endLine":200,"endColumn":42},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2041"},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2042"},{"ruleId":"1931","severity":1,"message":"1932","line":5,"column":1,"nodeType":"1933","endLine":18,"endColumn":2},{"ruleId":"1931","severity":1,"message":"1932","line":15,"column":3,"nodeType":"1933","endLine":50,"endColumn":4},{"ruleId":"1894","severity":1,"message":"1904","line":33,"column":6,"nodeType":"1896","endLine":33,"endColumn":8,"suggestions":"2043"},{"ruleId":"1868","severity":1,"message":"1879","line":1,"column":17,"nodeType":"1870","messageId":"1871","endLine":1,"endColumn":25},{"ruleId":"1868","severity":1,"message":"1969","line":15,"column":10,"nodeType":"1870","messageId":"1871","endLine":15,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1888","severity":1,"message":"1898","line":88,"column":48,"nodeType":"1890","messageId":"1899","endLine":88,"endColumn":50},{"ruleId":"1874","severity":1,"message":"1878","line":100,"column":38,"nodeType":"1876","messageId":"1877","endLine":100,"endColumn":40},{"ruleId":"1925","severity":1,"message":"1926","line":147,"column":15,"nodeType":"1885","endLine":150,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1921","line":187,"column":13,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":187,"column":21,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":187,"column":35,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":187,"column":48,"nodeType":"1870","messageId":"1871","endLine":187,"endColumn":54},{"ruleId":"1883","severity":1,"message":"1884","line":307,"column":57,"nodeType":"1885","messageId":"1886","endLine":307,"endColumn":188,"fix":"2044"},{"ruleId":"1925","severity":1,"message":"1926","line":323,"column":19,"nodeType":"1885","endLine":325,"endColumn":88},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2045"},{"ruleId":"1888","severity":1,"message":"1889","line":335,"column":51,"nodeType":"1890","messageId":"1891","endLine":335,"endColumn":53},{"ruleId":"1874","severity":1,"message":"1878","line":336,"column":44,"nodeType":"1876","messageId":"1877","endLine":336,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1908","line":24,"column":25,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":43,"column":6,"nodeType":"1896","endLine":43,"endColumn":8,"suggestions":"2046"},{"ruleId":"1888","severity":1,"message":"1889","line":126,"column":43,"nodeType":"1890","messageId":"1891","endLine":126,"endColumn":45},{"ruleId":"1874","severity":1,"message":"1878","line":127,"column":39,"nodeType":"1876","messageId":"1877","endLine":127,"endColumn":41},{"ruleId":"1888","severity":1,"message":"1889","line":339,"column":49,"nodeType":"1890","messageId":"1891","endLine":339,"endColumn":51},{"ruleId":"1874","severity":1,"message":"1878","line":340,"column":40,"nodeType":"1876","messageId":"1877","endLine":340,"endColumn":42},{"ruleId":"1888","severity":1,"message":"1889","line":372,"column":41,"nodeType":"1890","messageId":"1891","endLine":372,"endColumn":43},{"ruleId":"1874","severity":1,"message":"1878","line":373,"column":38,"nodeType":"1876","messageId":"1877","endLine":373,"endColumn":40},{"ruleId":"1868","severity":1,"message":"2007","line":2,"column":17,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1920","line":24,"column":8,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2019","line":28,"column":8,"nodeType":"1870","messageId":"1871","endLine":28,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2020","line":36,"column":10,"nodeType":"1870","messageId":"1871","endLine":36,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1922","line":42,"column":10,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2008","line":42,"column":24,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1923","line":43,"column":10,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":21},{"ruleId":"1868","severity":1,"message":"2009","line":43,"column":23,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":37},{"ruleId":"1868","severity":1,"message":"1924","line":44,"column":10,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2010","line":44,"column":18,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2011","line":45,"column":10,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":18},{"ruleId":"1868","severity":1,"message":"2012","line":45,"column":20,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":31},{"ruleId":"1868","severity":1,"message":"1921","line":46,"column":10,"nodeType":"1870","messageId":"1871","endLine":46,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2013","line":46,"column":18,"nodeType":"1870","messageId":"1871","endLine":46,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2014","line":47,"column":10,"nodeType":"1870","messageId":"1871","endLine":47,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2015","line":47,"column":18,"nodeType":"1870","messageId":"1871","endLine":47,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2016","line":48,"column":10,"nodeType":"1870","messageId":"1871","endLine":48,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2017","line":48,"column":16,"nodeType":"1870","messageId":"1871","endLine":48,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2018","line":49,"column":19,"nodeType":"1870","messageId":"1871","endLine":49,"endColumn":29},{"ruleId":"1894","severity":1,"message":"1904","line":132,"column":6,"nodeType":"1896","endLine":132,"endColumn":8,"suggestions":"2047"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1941","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1942","line":25,"column":10,"nodeType":"1870","messageId":"1871","endLine":25,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1943","line":26,"column":10,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1944","line":27,"column":10,"nodeType":"1870","messageId":"1871","endLine":27,"endColumn":18},{"ruleId":"1868","severity":1,"message":"1945","line":45,"column":9,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1946","line":50,"column":9,"nodeType":"1870","messageId":"1871","endLine":50,"endColumn":29},{"ruleId":"1868","severity":1,"message":"2007","line":2,"column":17,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":27},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1940","line":14,"column":3,"nodeType":"1870","messageId":"1871","endLine":14,"endColumn":13},{"ruleId":"1868","severity":1,"message":"1920","line":24,"column":8,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1922","line":38,"column":10,"nodeType":"1870","messageId":"1871","endLine":38,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2008","line":38,"column":24,"nodeType":"1870","messageId":"1871","endLine":38,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1923","line":39,"column":10,"nodeType":"1870","messageId":"1871","endLine":39,"endColumn":21},{"ruleId":"1868","severity":1,"message":"2009","line":39,"column":23,"nodeType":"1870","messageId":"1871","endLine":39,"endColumn":37},{"ruleId":"1868","severity":1,"message":"1924","line":40,"column":10,"nodeType":"1870","messageId":"1871","endLine":40,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2010","line":40,"column":18,"nodeType":"1870","messageId":"1871","endLine":40,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2011","line":41,"column":10,"nodeType":"1870","messageId":"1871","endLine":41,"endColumn":18},{"ruleId":"1868","severity":1,"message":"2012","line":41,"column":20,"nodeType":"1870","messageId":"1871","endLine":41,"endColumn":31},{"ruleId":"1868","severity":1,"message":"1921","line":42,"column":10,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2013","line":42,"column":18,"nodeType":"1870","messageId":"1871","endLine":42,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2014","line":43,"column":10,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2015","line":43,"column":18,"nodeType":"1870","messageId":"1871","endLine":43,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2016","line":44,"column":10,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2017","line":44,"column":16,"nodeType":"1870","messageId":"1871","endLine":44,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2018","line":45,"column":19,"nodeType":"1870","messageId":"1871","endLine":45,"endColumn":29},{"ruleId":"1868","severity":1,"message":"1924","line":95,"column":13,"nodeType":"1870","messageId":"1871","endLine":95,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1921","line":133,"column":13,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":133,"column":21,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":133,"column":35,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":133,"column":48,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":54},{"ruleId":"1868","severity":1,"message":"1972","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1973","line":9,"column":3,"nodeType":"1870","messageId":"1871","endLine":9,"endColumn":17},{"ruleId":"1868","severity":1,"message":"2004","line":10,"column":3,"nodeType":"1870","messageId":"1871","endLine":10,"endColumn":16},{"ruleId":"1868","severity":1,"message":"1974","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1921","line":82,"column":13,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":82,"column":21,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":82,"column":35,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":82,"column":48,"nodeType":"1870","messageId":"1871","endLine":82,"endColumn":54},{"ruleId":"1883","severity":1,"message":"1884","line":201,"column":57,"nodeType":"1885","messageId":"1886","endLine":201,"endColumn":168,"fix":"2048"},{"ruleId":"1868","severity":1,"message":"1928","line":2,"column":28,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":34},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1929","line":24,"column":10,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1930","line":24,"column":16,"nodeType":"1870","messageId":"1871","endLine":24,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2049","line":121,"column":3,"nodeType":"1870","messageId":"1871","endLine":121,"endColumn":12},{"ruleId":"1868","severity":1,"message":"1908","line":19,"column":25,"nodeType":"1870","messageId":"1871","endLine":19,"endColumn":30},{"ruleId":"1894","severity":1,"message":"1904","line":39,"column":6,"nodeType":"1896","endLine":39,"endColumn":8,"suggestions":"2050"},{"ruleId":"1916","severity":1,"message":"1917","line":236,"column":21,"nodeType":"1918","messageId":"1919","endLine":236,"endColumn":47},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"1908","line":20,"column":25,"nodeType":"1870","messageId":"1871","endLine":20,"endColumn":30},{"ruleId":"1868","severity":1,"message":"2051","line":30,"column":10,"nodeType":"1870","messageId":"1871","endLine":30,"endColumn":29},{"ruleId":"1868","severity":1,"message":"2052","line":32,"column":10,"nodeType":"1870","messageId":"1871","endLine":32,"endColumn":22},{"ruleId":"1894","severity":1,"message":"1904","line":49,"column":6,"nodeType":"1896","endLine":49,"endColumn":8,"suggestions":"2053"},{"ruleId":"1910","severity":1,"message":"1911","line":103,"column":7,"nodeType":"1876","messageId":"1912","endLine":103,"endColumn":17},{"ruleId":"1874","severity":1,"message":"1875","line":103,"column":11,"nodeType":"1876","messageId":"1877","endLine":103,"endColumn":13},{"ruleId":"1910","severity":1,"message":"1911","line":103,"column":21,"nodeType":"1876","messageId":"1912","endLine":103,"endColumn":32},{"ruleId":"1874","severity":1,"message":"1875","line":103,"column":26,"nodeType":"1876","messageId":"1877","endLine":103,"endColumn":28},{"ruleId":"1868","severity":1,"message":"2049","line":112,"column":5,"nodeType":"1870","messageId":"1871","endLine":112,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2054","line":2,"column":10,"nodeType":"1870","messageId":"1871","endLine":2,"endColumn":15},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1868","severity":1,"message":"2055","line":11,"column":3,"nodeType":"1870","messageId":"1871","endLine":11,"endColumn":14},{"ruleId":"1868","severity":1,"message":"1920","line":26,"column":8,"nodeType":"1870","messageId":"1871","endLine":26,"endColumn":22},{"ruleId":"1868","severity":1,"message":"1908","line":29,"column":25,"nodeType":"1870","messageId":"1871","endLine":29,"endColumn":30},{"ruleId":"1868","severity":1,"message":"1945","line":31,"column":9,"nodeType":"1870","messageId":"1871","endLine":31,"endColumn":21},{"ruleId":"1868","severity":1,"message":"1922","line":49,"column":10,"nodeType":"1870","messageId":"1871","endLine":49,"endColumn":22},{"ruleId":"1868","severity":1,"message":"2056","line":49,"column":24,"nodeType":"1870","messageId":"1871","endLine":49,"endColumn":39},{"ruleId":"1868","severity":1,"message":"1923","line":50,"column":10,"nodeType":"1870","messageId":"1871","endLine":50,"endColumn":21},{"ruleId":"1868","severity":1,"message":"2057","line":50,"column":23,"nodeType":"1870","messageId":"1871","endLine":50,"endColumn":37},{"ruleId":"1868","severity":1,"message":"1924","line":51,"column":10,"nodeType":"1870","messageId":"1871","endLine":51,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2058","line":51,"column":18,"nodeType":"1870","messageId":"1871","endLine":51,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2011","line":52,"column":10,"nodeType":"1870","messageId":"1871","endLine":52,"endColumn":18},{"ruleId":"1868","severity":1,"message":"2059","line":52,"column":20,"nodeType":"1870","messageId":"1871","endLine":52,"endColumn":31},{"ruleId":"1868","severity":1,"message":"1921","line":53,"column":10,"nodeType":"1870","messageId":"1871","endLine":53,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2060","line":53,"column":18,"nodeType":"1870","messageId":"1871","endLine":53,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2014","line":54,"column":10,"nodeType":"1870","messageId":"1871","endLine":54,"endColumn":16},{"ruleId":"1868","severity":1,"message":"2061","line":54,"column":18,"nodeType":"1870","messageId":"1871","endLine":54,"endColumn":27},{"ruleId":"1868","severity":1,"message":"2016","line":55,"column":10,"nodeType":"1870","messageId":"1871","endLine":55,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2062","line":55,"column":16,"nodeType":"1870","messageId":"1871","endLine":55,"endColumn":23},{"ruleId":"1868","severity":1,"message":"2063","line":56,"column":19,"nodeType":"1870","messageId":"1871","endLine":56,"endColumn":29},{"ruleId":"1868","severity":1,"message":"2064","line":62,"column":10,"nodeType":"1870","messageId":"1871","endLine":62,"endColumn":14},{"ruleId":"1868","severity":1,"message":"2065","line":62,"column":16,"nodeType":"1870","messageId":"1871","endLine":62,"endColumn":23},{"ruleId":"1894","severity":1,"message":"1904","line":66,"column":6,"nodeType":"1896","endLine":66,"endColumn":8,"suggestions":"2066"},{"ruleId":"1894","severity":1,"message":"1904","line":25,"column":6,"nodeType":"1896","endLine":25,"endColumn":8,"suggestions":"2067"},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2068"},{"ruleId":"1868","severity":1,"message":"1924","line":95,"column":13,"nodeType":"1870","messageId":"1871","endLine":95,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1921","line":133,"column":13,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":133,"column":21,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":133,"column":35,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":133,"column":48,"nodeType":"1870","messageId":"1871","endLine":133,"endColumn":54},{"ruleId":"1868","severity":1,"message":"1920","line":22,"column":8,"nodeType":"1870","messageId":"1871","endLine":22,"endColumn":22},{"ruleId":"1888","severity":1,"message":"1898","line":88,"column":50,"nodeType":"1890","messageId":"1899","endLine":88,"endColumn":52},{"ruleId":"1868","severity":1,"message":"1921","line":128,"column":13,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":19},{"ruleId":"1868","severity":1,"message":"1922","line":128,"column":21,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":33},{"ruleId":"1868","severity":1,"message":"1923","line":128,"column":35,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":46},{"ruleId":"1868","severity":1,"message":"1924","line":128,"column":48,"nodeType":"1870","messageId":"1871","endLine":128,"endColumn":54},{"ruleId":"1888","severity":1,"message":"1898","line":199,"column":50,"nodeType":"1890","messageId":"1899","endLine":199,"endColumn":52},{"ruleId":"1874","severity":1,"message":"1878","line":211,"column":40,"nodeType":"1876","messageId":"1877","endLine":211,"endColumn":42},{"ruleId":"1925","severity":1,"message":"1926","line":269,"column":15,"nodeType":"1885","endLine":272,"endColumn":16},{"ruleId":"1883","severity":1,"message":"1884","line":487,"column":55,"nodeType":"1885","messageId":"1886","endLine":487,"endColumn":186,"fix":"2069"},{"ruleId":"1925","severity":1,"message":"1926","line":501,"column":17,"nodeType":"1885","endLine":503,"endColumn":86},{"ruleId":"1868","severity":1,"message":"1939","line":8,"column":3,"nodeType":"1870","messageId":"1871","endLine":8,"endColumn":8},{"ruleId":"1894","severity":1,"message":"1904","line":24,"column":6,"nodeType":"1896","endLine":24,"endColumn":8,"suggestions":"2070"},"no-native-reassign",["2071"],"no-negated-in-lhs",["2072"],"no-unused-vars","'EditUnitRoaster' is assigned a value but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'EditProsesForm' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'useState' is defined but never used.","'useEffect' is defined but never used.","'CButton' is defined but never used.","'showResults' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"2073","text":"2074"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'balance' is assigned a value but never used.","'setBalance' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWallet'. Either include it or remove the dependency array.","ArrayExpression",["2075"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","'seconds' is assigned a value but never used.","'gas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["2076"],["2077"],["2078"],"'reset' is assigned a value but never used.",["2079"],"use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN",["2080"],["2081"],["2082"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'GoogleMapReact' is defined but never used.","'places' is assigned a value but never used.","'mapApiLoaded' is assigned a value but never used.","'mapInstance' is assigned a value but never used.","'mapApi' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",{"range":"2083","text":"2074"},"'change' is defined but never used.","'link' is assigned a value but never used.","'setlink' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'UserService' is defined but never used.","'Web3Modal' is defined but never used.","'ethers' is defined but never used.","'user' is assigned a value but never used.","'web3' is assigned a value but never used.","'CForm' is defined but never used.","'CInputFile' is defined but never used.","'jenis' is assigned a value but never used.","'biji' is assigned a value but never used.","'proses' is assigned a value but never used.","'supplier' is assigned a value but never used.","'onFileChange' is assigned a value but never used.","'onCertificateChanges' is assigned a value but never used.","'AddProduct' is defined but never used.","'contractAddress' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleIDBatch'. Either include it or remove the dependency array.",["2084"],["2085"],"'fieldCupping' is assigned a value but never used.","'useCallback' is defined but never used.","'Component' is defined but never used.","'beanID' is assigned a value but never used.",["2086"],"'productName' is assigned a value but never used.","'bijiName' is assigned a value but never used.","'varietasName' is assigned a value but never used.","'prosesName' is assigned a value but never used.","'supplierName' is assigned a value but never used.",["2087"],["2088"],["2089"],["2090"],["2091"],["2092"],["2093"],"'Fragment' is defined but never used.",["2094"],["2095"],"'CCarousel' is defined but never used.","'CCarouselInner' is defined but never used.","'CCarouselControl' is defined but never used.",{"range":"2096","text":"2074"},{"range":"2097","text":"2074"},["2098"],"'CNav' is defined but never used.","'CNavItem' is defined but never used.","'CNavLink' is defined but never used.","'CTabContent' is defined but never used.","'CTabPane' is defined but never used.","'CTabs' is defined but never used.",{"range":"2099","text":"2074"},"'Web3' is defined but never used.","'HDWalletProvider' is assigned a value but never used.","'useHistory' is defined but never used.","'QRcode' is defined but never used.","'sha256' is defined but never used.","'code' is assigned a value but never used.","'files' is assigned a value but never used.","'imageFile' is assigned a value but never used.","'filesGambar' is assigned a value but never used.","'imageFileGambar' is assigned a value but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'lat' is assigned a value but never used.","'long' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'currencyID' is assigned a value but never used.","'setCurrencyID' is assigned a value but never used.","'Redirect' is defined but never used.","'CCarouselItem' is defined but never used.",{"range":"2100","text":"2074"},["2101"],"'FieldArray' is defined but never used.","'setMapApiLoaded' is assigned a value but never used.","'setMapInstance' is assigned a value but never used.","'setMapApi' is assigned a value but never used.","'geoCoder' is assigned a value but never used.","'setGeoCoder' is assigned a value but never used.","'setPlaces' is assigned a value but never used.","'center' is assigned a value but never used.","'setCenter' is assigned a value but never used.","'zoom' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'moment' is defined but never used.","'batch' is assigned a value but never used.",["2102"],["2103"],["2104"],["2105"],{"range":"2106","text":"2074"},["2107"],["2108"],["2109"],["2110"],["2111"],["2112"],["2113"],["2114"],["2115"],{"range":"2116","text":"2074"},{"range":"2117","text":"2074"},["2118"],["2119"],["2120"],["2121"],["2122"],["2123"],["2124"],{"range":"2125","text":"2074"},["2126"],["2127"],["2128"],{"range":"2129","text":"2074"},"'googleMap' is assigned a value but never used.",["2130"],"'estimatedProduction' is assigned a value but never used.","'supplierUnit' is assigned a value but never used.",["2131"],"'Field' is defined but never used.","'CCardFooter' is defined but never used.","'setmapApiLoaded' is assigned a value but never used.","'setmapInstance' is assigned a value but never used.","'setmapApi' is assigned a value but never used.","'setgeoCoder' is assigned a value but never used.","'setplaces' is assigned a value but never used.","'setcenter' is assigned a value but never used.","'setzoom' is assigned a value but never used.","'setaddress' is assigned a value but never used.","'unit' is assigned a value but never used.","'setUnit' is assigned a value but never used.",["2132"],["2133"],["2134"],{"range":"2135","text":"2074"},["2136"],"no-global-assign","no-unsafe-negation",[798,798]," rel=\"noreferrer\"",{"desc":"2137","fix":"2138"},{"desc":"2139","fix":"2140"},{"desc":"2139","fix":"2141"},{"desc":"2139","fix":"2142"},{"desc":"2139","fix":"2143"},{"desc":"2139","fix":"2144"},{"desc":"2139","fix":"2145"},{"desc":"2139","fix":"2146"},[16139,16139],{"desc":"2147","fix":"2148"},{"desc":"2137","fix":"2149"},{"desc":"2139","fix":"2150"},{"desc":"2139","fix":"2151"},{"desc":"2139","fix":"2152"},{"desc":"2139","fix":"2153"},{"desc":"2139","fix":"2154"},{"desc":"2139","fix":"2155"},{"desc":"2139","fix":"2156"},{"desc":"2139","fix":"2157"},{"desc":"2139","fix":"2158"},{"desc":"2139","fix":"2159"},[15952,15952],[21347,21347],{"desc":"2139","fix":"2160"},[8888,8888],[5887,5887],{"desc":"2139","fix":"2161"},{"desc":"2139","fix":"2162"},{"desc":"2139","fix":"2163"},{"desc":"2139","fix":"2164"},{"desc":"2137","fix":"2165"},[798,798],{"desc":"2147","fix":"2166"},{"desc":"2137","fix":"2167"},{"desc":"2139","fix":"2168"},{"desc":"2139","fix":"2169"},{"desc":"2139","fix":"2170"},{"desc":"2139","fix":"2171"},{"desc":"2139","fix":"2172"},{"desc":"2139","fix":"2173"},{"desc":"2139","fix":"2174"},[15952,15952],[21347,21347],{"desc":"2139","fix":"2175"},{"desc":"2139","fix":"2176"},{"desc":"2139","fix":"2177"},{"desc":"2139","fix":"2178"},{"desc":"2139","fix":"2179"},{"desc":"2139","fix":"2180"},{"desc":"2139","fix":"2181"},[8978,8978],{"desc":"2139","fix":"2182"},{"desc":"2139","fix":"2183"},{"desc":"2139","fix":"2184"},[5977,5977],{"desc":"2139","fix":"2185"},{"desc":"2139","fix":"2186"},{"desc":"2139","fix":"2187"},{"desc":"2139","fix":"2188"},{"desc":"2139","fix":"2189"},[16229,16229],{"desc":"2139","fix":"2190"},"Update the dependencies array to be: [getWallet]",{"range":"2191","text":"2192"},"Update the dependencies array to be: [getData]",{"range":"2193","text":"2194"},{"range":"2195","text":"2194"},{"range":"2196","text":"2194"},{"range":"2197","text":"2194"},{"range":"2198","text":"2194"},{"range":"2199","text":"2194"},{"range":"2200","text":"2194"},"Update the dependencies array to be: [handleIDBatch]",{"range":"2201","text":"2202"},{"range":"2203","text":"2192"},{"range":"2204","text":"2194"},{"range":"2205","text":"2194"},{"range":"2206","text":"2194"},{"range":"2207","text":"2194"},{"range":"2208","text":"2194"},{"range":"2209","text":"2194"},{"range":"2210","text":"2194"},{"range":"2211","text":"2194"},{"range":"2212","text":"2194"},{"range":"2213","text":"2194"},{"range":"2214","text":"2194"},{"range":"2215","text":"2194"},{"range":"2216","text":"2194"},{"range":"2217","text":"2194"},{"range":"2218","text":"2194"},{"range":"2219","text":"2192"},{"range":"2220","text":"2202"},{"range":"2221","text":"2192"},{"range":"2222","text":"2194"},{"range":"2223","text":"2194"},{"range":"2224","text":"2194"},{"range":"2225","text":"2194"},{"range":"2226","text":"2194"},{"range":"2227","text":"2194"},{"range":"2228","text":"2194"},{"range":"2229","text":"2194"},{"range":"2230","text":"2194"},{"range":"2231","text":"2194"},{"range":"2232","text":"2194"},{"range":"2233","text":"2194"},{"range":"2234","text":"2194"},{"range":"2235","text":"2194"},{"range":"2236","text":"2194"},{"range":"2237","text":"2194"},{"range":"2238","text":"2194"},{"range":"2239","text":"2194"},{"range":"2240","text":"2194"},{"range":"2241","text":"2194"},{"range":"2242","text":"2194"},{"range":"2243","text":"2194"},{"range":"2244","text":"2194"},[1657,1659],"[getWallet]",[526,528],"[getData]",[514,516],[460,462],[1246,1248],[1162,1164],[520,522],[1041,1043],[1124,1126],"[handleIDBatch]",[2304,2306],[1280,1282],[979,981],[722,724],[492,494],[1342,1344],[523,525],[463,465],[529,531],[487,489],[517,519],[886,888],[660,662],[3652,3654],[453,455],[1162,1164],[1657,1659],[1124,1126],[2304,2306],[514,516],[660,662],[1162,1164],[463,465],[722,724],[529,531],[492,494],[979,981],[487,489],[1280,1282],[1342,1344],[523,525],[517,519],[886,888],[526,528],[1162,1164],[3742,3744],[1041,1043],[1246,1248],[1791,1793],[520,522],[460,462],[453,455]]