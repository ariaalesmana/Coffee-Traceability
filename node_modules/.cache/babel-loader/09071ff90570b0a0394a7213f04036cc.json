{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatch.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditBatchForm from \"./EditBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditBatch = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [imageFile, setImage] = useState(\"\");\n  const [certificateFile, setCertificate] = useState(\"\");\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n\n    if (values.biji_id != undefined) {\n      formData.append(\"biji_id\", values.biji_id);\n    }\n\n    if (values.jenis_id != undefined) {\n      formData.append(\"jenis_id\", values.jenis_id);\n    }\n\n    if (values.proses_id != undefined) {\n      formData.append(\"proses_id\", values.proses_id);\n    }\n\n    if (values.supplier_id != undefined) {\n      formData.append(\"supplier_id\", values.supplier_id);\n    }\n\n    if (values.tgl_panen != undefined) {\n      formData.append(\"tgl_panen\", values.tgl_panen);\n    }\n\n    if (values.volume != undefined) {\n      formData.append(\"volume\", values.volume);\n    } //Form Baru\n\n\n    if (values.moisture != undefined) {\n      formData.append(\"moisture\", values.moisture);\n    }\n\n    if (values.videoCulture != undefined) {\n      formData.append(\"video_culture\", values.videoCulture);\n    }\n\n    if (values.storytelling != undefined) {\n      formData.append(\"storytelling\", values.storytelling);\n    }\n\n    if (imageFile != \"\") {\n      for (let i = 0; i < imageFile.length; i++) {\n        formData.append(\"files[]\", imageFile[i]);\n      }\n    }\n\n    if (certificateFile != \"\") {\n      formData.append(\"certificate[]\", certificateFile); // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificate[]\", certificateFile[i]);\n      // }\n    }\n\n    UserService.editBatch(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  const onFileChange = file => {\n    setImage(file);\n  };\n\n  const onCertificateChange = file => {\n    setCertificate(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditBatchForm, {\n      onSubmit: handleSubmit,\n      onSelectImage: onFileChange,\n      batchID: id,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditBatch, \"HxIuuH0Q17mHuQKTFXjGMToKWOU=\", false, function () {\n  return [useParams];\n});\n\n_c = EditBatch;\nexport default EditBatch;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBatch\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/EditBatch.js"],"names":["Fragment","useState","showResults","EditBatchForm","UserService","useParams","EditBatch","id","imageFile","setImage","certificateFile","setCertificate","handleSubmit","values","formData","FormData","biji_id","undefined","append","jenis_id","proses_id","supplier_id","tgl_panen","volume","moisture","videoCulture","storytelling","i","length","editBatch","then","onFileChange","file","onCertificateChange"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AAEA,QAAM,CAACG,SAAD,EAAYC,QAAZ,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,eAAD,EAAkBC,cAAlB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,QAAIF,MAAM,CAACG,OAAP,IAAkBC,SAAtB,EAAiC;AAC/BH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BL,MAAM,CAACG,OAAlC;AACD;;AACD,QAAIH,MAAM,CAACM,QAAP,IAAmBF,SAAvB,EAAkC;AAChCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,EAA4BL,MAAM,CAACM,QAAnC;AACD;;AACD,QAAIN,MAAM,CAACO,SAAP,IAAoBH,SAAxB,EAAmC;AACjCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,WAAhB,EAA6BL,MAAM,CAACO,SAApC;AACD;;AACD,QAAIP,MAAM,CAACQ,WAAP,IAAsBJ,SAA1B,EAAqC;AACnCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,aAAhB,EAA+BL,MAAM,CAACQ,WAAtC;AACD;;AACD,QAAIR,MAAM,CAACS,SAAP,IAAoBL,SAAxB,EAAmC;AACjCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,WAAhB,EAA6BL,MAAM,CAACS,SAApC;AACD;;AACD,QAAIT,MAAM,CAACU,MAAP,IAAiBN,SAArB,EAAgC;AAC9BH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,QAAhB,EAA0BL,MAAM,CAACU,MAAjC;AACD,KApB8B,CAsB/B;;;AACA,QAAIV,MAAM,CAACW,QAAP,IAAmBP,SAAvB,EAAkC;AAChCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,UAAhB,EAA4BL,MAAM,CAACW,QAAnC;AACD;;AACD,QAAIX,MAAM,CAACY,YAAP,IAAuBR,SAA3B,EAAsC;AACpCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,eAAhB,EAAiCL,MAAM,CAACY,YAAxC;AACD;;AACD,QAAIZ,MAAM,CAACa,YAAP,IAAuBT,SAA3B,EAAsC;AACpCH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,cAAhB,EAAgCL,MAAM,CAACa,YAAvC;AACD;;AAED,QAAIlB,SAAS,IAAI,EAAjB,EAAqB;AACnB,WAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,SAAS,CAACoB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCb,QAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BV,SAAS,CAACmB,CAAD,CAApC;AACD;AACF;;AACD,QAAIjB,eAAe,IAAI,EAAvB,EAA2B;AACzBI,MAAAA,QAAQ,CAACI,MAAT,CAAgB,eAAhB,EAAiCR,eAAjC,EADyB,CAEzB;AACA;AACA;AACD;;AAEDN,IAAAA,WAAW,CAACyB,SAAZ,CAAsBtB,EAAtB,EAA0BO,QAA1B,EAAoCgB,IAApC,CAAyC5B,WAAW,CAAC,uBAAD,CAApD;AACD,GA9CD;;AAgDA,QAAM6B,YAAY,GAAIC,IAAD,IAAU;AAC7BvB,IAAAA,QAAQ,CAACuB,IAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAID,IAAD,IAAU;AACpCrB,IAAAA,cAAc,CAACqB,IAAD,CAAd;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,QAAQ,EAAEpB,YADZ;AAEE,MAAA,aAAa,EAAEmB,YAFjB;AAGE,MAAA,OAAO,EAAExB,EAHX;AAIE,MAAA,mBAAmB,EAAE0B;AAJvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxED;;GAAM3B,S;UACWD,S;;;KADXC,S;AA0EN,eAAeA,SAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditBatchForm from \"./EditBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport { useParams } from \"react-router\";\n\nconst EditBatch = () => {\n  const { id } = useParams();\n\n  const [imageFile, setImage] = useState(\"\");\n  const [certificateFile, setCertificate] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (values.biji_id != undefined) {\n      formData.append(\"biji_id\", values.biji_id);\n    }\n    if (values.jenis_id != undefined) {\n      formData.append(\"jenis_id\", values.jenis_id);\n    }\n    if (values.proses_id != undefined) {\n      formData.append(\"proses_id\", values.proses_id);\n    }\n    if (values.supplier_id != undefined) {\n      formData.append(\"supplier_id\", values.supplier_id);\n    }\n    if (values.tgl_panen != undefined) {\n      formData.append(\"tgl_panen\", values.tgl_panen);\n    }\n    if (values.volume != undefined) {\n      formData.append(\"volume\", values.volume);\n    }\n\n    //Form Baru\n    if (values.moisture != undefined) {\n      formData.append(\"moisture\", values.moisture);\n    }\n    if (values.videoCulture != undefined) {\n      formData.append(\"video_culture\", values.videoCulture);\n    }\n    if (values.storytelling != undefined) {\n      formData.append(\"storytelling\", values.storytelling);\n    }\n\n    if (imageFile != \"\") {\n      for (let i = 0; i < imageFile.length; i++) {\n        formData.append(\"files[]\", imageFile[i]);\n      }\n    }\n    if (certificateFile != \"\") {\n      formData.append(\"certificate[]\", certificateFile);\n      // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificate[]\", certificateFile[i]);\n      // }\n    }\n\n    UserService.editBatch(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  const onFileChange = (file) => {\n    setImage(file);\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificate(file);\n  };\n\n  return (\n    <Fragment>\n      <EditBatchForm\n        onSubmit={handleSubmit}\n        onSelectImage={onFileChange}\n        batchID={id}\n        onSelectCertificate={onCertificateChange}\n      />\n    </Fragment>\n  );\n};\n\nexport default EditBatch;\n"]},"metadata":{},"sourceType":"module"}