{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport AddCuppingForm from \"./AddCuppingForm\";\nimport QRcode from \"qrcode.react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCupping = props => {\n  _s();\n\n  const code = props.code;\n  const [certificateFile, setCertificateFile] = useState(\"\");\n  const [qr, setQr] = useState(\"test\");\n\n  const handleChange = value => {\n    setQr(value);\n  };\n\n  const downloadQR = (produkId, cuppingId) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + produkId + \"/\" + cuppingId + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const handleSubmit = values => {\n    console.log('cek valuenya nih', values);\n    const formData = new FormData();\n\n    if (values.productId && values.curated_date && values.curated_by && values.fragrance_aroma && values.flavor && values.aftertaste && values.acidity && values.body && values.cupping_score && values.category && certificateFile != \"\") {\n      formData.append(\"productId\", values.productId);\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n      formData.append(\"certificateFile[]\", certificateFile); // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificateFile[]\", certificateFile[i]);\n      // }\n\n      formData.append(\"certificateFile\", certificateFile);\n      formData.append(\"certificateFileName\", certificateFile.name);\n      UserService.addCupping(formData).then(async response => {\n        console.log(\"cek response cupping\", response);\n        const linkQRCode = process.env.REACT_APP_PROD_URL + \"Cupping/\" + code + \"/\" + response.data.data.id;\n        await handleChange(linkQRCode);\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise(resolve => canvas.toBlob(resolve, \"image/png\"));\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        console.log(\"gambar qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + response.data.data.id + \".png\");\n        downloadQR(values.productId, response.data.data.id);\n        UserService.pushQRCodeImageCupping(response.data.data.id, formDataQR);\n        showResults(\"Data has been added\");\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const onCertificateChange = file => {\n    setCertificateFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCuppingForm, {\n      onSubmit: handleSubmit,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        visibility: \"hidden\"\n      },\n      children: qr ? /*#__PURE__*/_jsxDEV(QRcode, {\n        id: \"myqr\",\n        value: qr,\n        size: 320,\n        includeMargin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No QR code preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCupping, \"1oXS/I5Cdt1VFr3G7y4RVCx/mYQ=\");\n\n_c = AddCupping;\nexport default AddCupping;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCupping\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js"],"names":["Fragment","useState","useEffect","AddCuppingForm","QRcode","showResults","UserService","AddCupping","props","code","certificateFile","setCertificateFile","qr","setQr","handleChange","value","downloadQR","produkId","cuppingId","canvas","document","getElementById","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","handleSubmit","values","console","log","formData","FormData","productId","curated_date","curated_by","fragrance_aroma","flavor","aftertaste","acidity","cupping_score","category","append","name","addCupping","then","response","linkQRCode","process","env","REACT_APP_PROD_URL","data","id","imageBlob","Promise","resolve","toBlob","formDataQR","pushQRCodeImageCupping","onCertificateChange","file","visibility"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACW,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,MAAD,CAA5B;;AACA,QAAMa,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,KAAK,CAACE,KAAD,CAAL;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAC1C,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AACA,UAAMC,MAAM,GAAGH,MAAM,CAClBI,SADY,CACF,WADE,EAEZC,OAFY,CAEJ,WAFI,EAES,oBAFT,CAAf;AAGA,QAAIC,YAAY,GAAGL,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAnB;AACAD,IAAAA,YAAY,CAACE,IAAb,GAAoBL,MAApB;AACAG,IAAAA,YAAY,CAACG,QAAb,GAAwB,KAAKX,QAAL,GAAgB,GAAhB,GAAsBC,SAAtB,GAAkC,MAA1D;AACAE,IAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BL,YAA1B;AACAA,IAAAA,YAAY,CAACM,KAAb;AACAX,IAAAA,QAAQ,CAACS,IAAT,CAAcG,WAAd,CAA0BP,YAA1B;AACD,GAXD;;AAaA,QAAMQ,YAAY,GAAIC,MAAD,IAAY;AAE/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AACA,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEC,QACCJ,MAAM,CAACK,SAAP,IACAL,MAAM,CAACM,YADP,IAEAN,MAAM,CAACO,UAFP,IAGAP,MAAM,CAACQ,eAHP,IAIAR,MAAM,CAACS,MAJP,IAKAT,MAAM,CAACU,UALP,IAMAV,MAAM,CAACW,OANP,IAOAX,MAAM,CAACL,IAPP,IAQAK,MAAM,CAACY,aARP,IASAZ,MAAM,CAACa,QATP,IAUArC,eAAe,IAAI,EAXpB,EAYC;AACA2B,MAAAA,QAAQ,CAACW,MAAT,CAAgB,WAAhB,EAA6Bd,MAAM,CAACK,SAApC;AACAF,MAAAA,QAAQ,CAACW,MAAT,CAAgB,cAAhB,EAAgCd,MAAM,CAACM,YAAvC;AACAH,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8Bd,MAAM,CAACO,UAArC;AACAJ,MAAAA,QAAQ,CAACW,MAAT,CAAgB,iBAAhB,EAAmCd,MAAM,CAACQ,eAA1C;AACAL,MAAAA,QAAQ,CAACW,MAAT,CAAgB,QAAhB,EAA0Bd,MAAM,CAACS,MAAjC;AACAN,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8Bd,MAAM,CAACU,UAArC;AACAP,MAAAA,QAAQ,CAACW,MAAT,CAAgB,SAAhB,EAA2Bd,MAAM,CAACW,OAAlC;AACAR,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAhB,EAAwBd,MAAM,CAACL,IAA/B;AACAQ,MAAAA,QAAQ,CAACW,MAAT,CAAgB,eAAhB,EAAiCd,MAAM,CAACY,aAAxC;AACAT,MAAAA,QAAQ,CAACW,MAAT,CAAgB,UAAhB,EAA4Bd,MAAM,CAACa,QAAnC;AAEAV,MAAAA,QAAQ,CAACW,MAAT,CAAgB,mBAAhB,EAAqCtC,eAArC,EAZA,CAaA;AACA;AACA;;AACA2B,MAAAA,QAAQ,CAACW,MAAT,CAAgB,iBAAhB,EAAmCtC,eAAnC;AACA2B,MAAAA,QAAQ,CAACW,MAAT,CAAgB,qBAAhB,EAAuCtC,eAAe,CAACuC,IAAvD;AAEA3C,MAAAA,WAAW,CAAC4C,UAAZ,CAAuBb,QAAvB,EAAiCc,IAAjC,CAAsC,MAAOC,QAAP,IAAoB;AAC1DjB,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCgB,QAApC;AACE,cAAMC,UAAU,GACdC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GACA,UADA,GAEA/C,IAFA,GAGA,GAHA,GAIA2C,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EALrB;AAMA,cAAM5C,YAAY,CAACuC,UAAD,CAAlB;AAEA,cAAMlC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AACA,YAAIsC,SAAS,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAChC1C,MAAM,CAAC2C,MAAP,CAAcD,OAAd,EAAuB,WAAvB,CADoB,CAAtB;AAIA,YAAIE,UAAU,GAAG,IAAIzB,QAAJ,EAAjB;AACAyB,QAAAA,UAAU,CAACf,MAAX,CAAkB,UAAlB,EAA8BW,SAA9B,EAAyC,KAAKP,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EAAxB,GAA6B,MAAtE;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBuB,SAAzB,EAAoC,KAAKP,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EAAxB,GAA6B,MAAjE;AACAK,QAAAA,UAAU,CAACf,MAAX,CAAkB,aAAlB,EAAiC,KAAKI,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EAAxB,GAA6B,MAA9D;AAEA1C,QAAAA,UAAU,CAACkB,MAAM,CAACK,SAAR,EAAmBa,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EAAtC,CAAV;AAEApD,QAAAA,WAAW,CAAC0D,sBAAZ,CAAmCZ,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBC,EAAtD,EAA0DK,UAA1D;AAEA1D,QAAAA,WAAW,CAAC,qBAAD,CAAX;AACD,OAzBD;AA6BD,KA5DA,MA4DM;AACLA,MAAAA,WAAW,CAAC,4BAAD,CAAX;AACD;AACF,GApED;;AAsEA,QAAM4D,mBAAmB,GAAIC,IAAD,IAAU;AACpCvD,IAAAA,kBAAkB,CAACuD,IAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEjC,YADZ;AAEE,MAAA,mBAAmB,EAAEgC;AAFvB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA,gBACGvD,EAAE,gBACD,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAEA,EAAzB;AAA6B,QAAA,IAAI,EAAE,GAAnC;AAAwC,QAAA,aAAa,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAhHD;;GAAML,U;;KAAAA,U;AAkHN,eAAeA,UAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport AddCuppingForm from \"./AddCuppingForm\";\nimport QRcode from \"qrcode.react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst AddCupping = (props) => {\n  const code = props.code;\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const [qr, setQr] = useState(\"test\");\n  const handleChange = (value) => {\n    setQr(value);\n  };\n\n  const downloadQR = (produkId, cuppingId) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + produkId + \"/\" + cuppingId + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const handleSubmit = (values) => {\n\n    console.log('cek valuenya nih', values);\n    const formData = new FormData();\n\n     if (\n      values.productId &&\n      values.curated_date &&\n      values.curated_by &&\n      values.fragrance_aroma &&\n      values.flavor &&\n      values.aftertaste &&\n      values.acidity &&\n      values.body &&\n      values.cupping_score &&\n      values.category &&\n      certificateFile != \"\"\n    ) {\n      formData.append(\"productId\", values.productId);\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      formData.append(\"certificateFile[]\", certificateFile);\n      // for (let i = 0; i < certificateFile.length; i++) {\n      //   formData.append(\"certificateFile[]\", certificateFile[i]);\n      // }\n      formData.append(\"certificateFile\", certificateFile);\n      formData.append(\"certificateFileName\", certificateFile.name);\n\n      UserService.addCupping(formData).then(async (response) => {\n      console.log(\"cek response cupping\", response);\n        const linkQRCode =\n          process.env.REACT_APP_PROD_URL +\n          \"Cupping/\" +\n          code +\n          \"/\" +\n          response.data.data.id;\n        await handleChange(linkQRCode);\n\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise((resolve) =>\n          canvas.toBlob(resolve, \"image/png\")\n        );\n\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        console.log(\"gambar qr\", imageBlob, \"\" + response.data.data.id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + response.data.data.id + \".png\");\n\n        downloadQR(values.productId, response.data.data.id);\n\n        UserService.pushQRCodeImageCupping(response.data.data.id, formDataQR);\n\n        showResults(\"Data has been added\")\n      });\n\n\n\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <AddCuppingForm \n        onSubmit={handleSubmit}\n        onSelectCertificate={onCertificateChange} \n      />\n      <div style={{ visibility: \"hidden\" }}>\n        {qr ? (\n          <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n        ) : (\n          <p>No QR code preview</p>\n        )}\n      </div>\n\n    </Fragment>\n  );\n};\n\nexport default AddCupping;\n"]},"metadata":{},"sourceType":"module"}