{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNF.js\";\nimport { Fragment, Component, useEffect } from \"react\";\nimport AddCNFForm from \"./AddCNFForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport Loader from \"react-spinners/DotLoader\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { AddCNF as CNF } from \"../../../abi/cnf\";\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nvar m = new Date();\nvar dateString = m.getUTCFullYear() + \"-\" + (\"0\" + (m.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + m.getUTCDate()).slice(-2);\nvar override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      `;\nvar provider = new HDWalletProvider(process.env.REACT_APP_MNEMONIC, \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\nvar web3 = new Web3(provider);\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nconsole.log(\"usernya mal:\", user);\nprovider.engine.stop();\nexport default class AddCNFVi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDate = tgl => {\n      this.setState({\n        date: tgl\n      });\n    };\n\n    this.handleSubmit = async values => {\n      this.setState({\n        loading: true\n      });\n      const formData = new FormData();\n\n      if (values.nomor_dokumen != undefined && (this.state.date != undefined || this.state.date === 'Invalid date')) {\n        formData.append(\"pembuat\", user.status_role);\n        formData.append(\"nomor_dokumen\", values.nomor_dokumen);\n        formData.append(\"tanggal_dokumen\", this.state.date);\n\n        try {\n          // get wallet\n          const web3Modal = new Web3Modal();\n          const connection = await web3Modal.connect();\n          const provider = new ethers.providers.Web3Provider(connection);\n          var signer = provider.getSigner(); // const accounts = await window.ethereum.enable();\n          // const signer = accounts[0];\n          // end get wallet\n        } catch (err) {\n          this.setState({\n            loading: false\n          });\n          showResults(\"Failed, No wallet selected\");\n        }\n\n        UserService.addCNF(formData).then(async response => {\n          console.log('response', response);\n\n          if (response.data.data) {\n            // cek apakah data sudah ada atau belum\n            // input cnf to blockchain\n            let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, CNF, signer);\n\n            try {\n              let transaction = await contract.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString);\n              this.setState({\n                loading: false\n              });\n              showResults(\"Data has been added\");\n            } catch (e) {\n              UserService.deleteCNF(response.data.data.id);\n              this.setState({\n                loading: false\n              });\n              showResults(`Failed, Transaction rejected : ${e.message}`);\n            }\n          } else {\n            this.setState({\n              loading: false\n            });\n            showResults(`Failed, Document Number already exist`);\n          } // await transaction.wait()\n          // end input cnf to blockchain\n\n        }, error => {});\n      } else {\n        this.setState({\n          loading: false\n        });\n        showResults(\"Please fill all the fields\");\n      }\n    };\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n      date: \"\",\n      loading: false,\n      color: \"#3c4b64\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: (() => {\n        if (this.state.loading === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              verticalAlign: 'middle',\n              paddingTop: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sweet-loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Transaksi akan ditulis ke Blockchain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 64\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Loader, {\n                color: this.state.color,\n                loading: this.state.loading,\n                css: override,\n                size: 150\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Mohon Tunggu...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddCNFForm, {\n            onSubmit: this.handleSubmit,\n            onSelectImage: this.onFileChange,\n            onSelectCertificate: this.onCertificateChange,\n            onSelectDate: this.handleDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/AddCNF.js"],"names":["Fragment","Component","useEffect","AddCNFForm","UserService","showResults","Loader","Web3Modal","ethers","Web3","AddCNF","CNF","css","require","config","HDWalletProvider","m","Date","dateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","override","provider","process","env","REACT_APP_MNEMONIC","REACT_APP_INFURA_PROJECT_ID","web3","user","JSON","parse","localStorage","getItem","console","log","engine","stop","AddCNFVi","constructor","props","handleDate","tgl","setState","date","handleSubmit","values","loading","formData","FormData","nomor_dokumen","undefined","state","append","status_role","web3Modal","connection","connect","providers","Web3Provider","signer","getSigner","err","addCNF","then","response","data","contract","Contract","REACT_APP_ADDRESS_CNF","transaction","id","pembuat","tanggal_dokumen","e","deleteCNF","message","error","imageFile","certificateFile","content","color","render","textAlign","verticalAlign","paddingTop","onFileChange","onCertificateChange"],"mappings":"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","sourcesContent":["import { Fragment, Component, useEffect } from \"react\";\nimport AddCNFForm from \"./AddCNFForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport Loader from \"react-spinners/DotLoader\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { AddCNF as CNF } from \"../../../abi/cnf\";\nimport { css } from \"@emotion/react\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nvar m = new Date();\nvar dateString =\n    m.getUTCFullYear() + \"-\" +\n    (\"0\" + (m.getUTCMonth()+1)).slice(-2) + \"-\" +\n    (\"0\" + m.getUTCDate()).slice(-2);\n\nvar override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      `\n    ;\nvar provider = new HDWalletProvider(\n  process.env.REACT_APP_MNEMONIC,\n  \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n);\nvar web3 = new Web3(provider);\n\nvar user = JSON.parse(localStorage.getItem(\"user\"));\n\nconsole.log(\"usernya mal:\", user);\n\nprovider.engine.stop();\nexport default class AddCNFVi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n      date: \"\",\n      loading: false,\n      color: \"#3c4b64\",\n    };\n  }\n\n  handleDate = (tgl) => {\n    this.setState({\n      date: tgl,\n    });\n  };\n\n  handleSubmit = async (values) => {\n    this.setState({\n      loading: true,\n    });\n\n    const formData = new FormData();\n\n    if (\n      values.nomor_dokumen != undefined &&\n      (this.state.date != undefined || this.state.date === 'Invalid date')\n    ) {\n      formData.append(\"pembuat\", user.status_role);\n      formData.append(\"nomor_dokumen\", values.nomor_dokumen);\n      formData.append(\"tanggal_dokumen\", this.state.date);\n\n      try{\n      // get wallet\n      const web3Modal = new Web3Modal();\n      const connection = await web3Modal.connect();\n      const provider = new ethers.providers.Web3Provider(connection);\n      var signer = provider.getSigner();\n\n      // const accounts = await window.ethereum.enable();\n      // const signer = accounts[0];\n      // end get wallet\n      } catch(err) {\n        this.setState({\n          loading: false,\n        });\n        showResults(\"Failed, No wallet selected\");\n      }\n\n      UserService.addCNF(formData).then(\n        async (response) => {\n          console.log('response', response);\n\n          if(response.data.data){ // cek apakah data sudah ada atau belum\n            // input cnf to blockchain\n            let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, CNF, signer)\n            try{\n              let transaction = await contract.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n              this.setState({\n                loading: false,\n              });\n              showResults(\"Data has been added\")\n            } catch(e) {\n              UserService.deleteCNF(response.data.data.id);\n              this.setState({\n                loading: false,\n              });\n              showResults(`Failed, Transaction rejected : ${e.message}`);\n            }\n          } else {\n            this.setState({\n              loading: false,\n            });\n            showResults(`Failed, Document Number already exist`);\n          }\n\n          // await transaction.wait()\n          // end input cnf to blockchain\n        },\n        (error) => {\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  render() {\n\n    return (\n      <Fragment>\n        {(() => {\n          if(this.state.loading === true) {\n            return(\n              <div style={{textAlign : 'center', verticalAlign : 'middle', paddingTop : \"150px\"}}>\n                <div className=\"sweet-loading\">\n                  <h5>Transaksi akan ditulis ke Blockchain</h5><br></br>\n                  <br></br>\n                    <Loader color={this.state.color} loading={this.state.loading} css={override} size={150} />\n                  <br></br>\n                  <br></br>\n                  <h5>Mohon Tunggu...</h5>\n                </div>\n            </div>\n            )\n          } else {\n            return(\n              <AddCNFForm\n                onSubmit={this.handleSubmit}\n                onSelectImage={this.onFileChange}\n                onSelectCertificate={this.onCertificateChange}\n                onSelectDate={this.handleDate}\n              />\n            )\n          }\n        })()}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}