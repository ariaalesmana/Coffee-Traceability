{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCupping = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n\n    if (values.curated_date != undefined) {\n      formData.append(\"curated_date\", values.curated_date);\n    }\n\n    if (values.curated_by != undefined) {\n      formData.append(\"curated_by\", values.curated_by);\n    }\n\n    if (values.fragrance_aroma != undefined) {\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n    }\n\n    if (values.flavor != undefined) {\n      formData.append(\"flavor\", values.flavor);\n    }\n\n    if (values.aftertaste != undefined) {\n      formData.append(\"aftertaste\", values.aftertaste);\n    }\n\n    if (values.acidity != undefined) {\n      formData.append(\"acidity\", values.acidity);\n    }\n\n    if (values.body != undefined) {\n      formData.append(\"body\", values.body);\n    }\n\n    if (values.cupping_score != undefined) {\n      formData.append(\"cupping_score\", values.cupping_score);\n    }\n\n    if (values.category != undefined) {\n      formData.append(\"category\", values.category);\n    }\n\n    if (certificateFile != \"\") {\n      for (let i = 0; i < certificateFile.length; i++) {\n        console.log(certificateFile[i]);\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n    }\n\n    UserService.editCupping(id, formData).then(showResults(\"Data has been changed\"));\n  };\n\n  const onCertificateChange = file => {\n    setCertificateFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditCuppingForm, {\n      onSubmit: handleSubmit,\n      cuppingID: id,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCupping, \"xcV0JP/BQCDObf4nh3QX1kAnKI4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCupping;\nexport default EditCupping;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCupping\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js"],"names":["Fragment","useState","showResults","UserService","useParams","EditCuppingForm","EditCupping","id","certificateFile","setCertificateFile","handleSubmit","values","formData","FormData","curated_date","undefined","append","curated_by","fragrance_aroma","flavor","aftertaste","acidity","body","cupping_score","category","i","length","console","log","editCupping","then","onCertificateChange","file"],"mappings":"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","sourcesContent":["import { Fragment, useState } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\n\nconst EditCupping = () => {\n  const { id } = useParams();\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (values.curated_date != undefined) {\n      formData.append(\"curated_date\", values.curated_date);\n    }\n    if (values.curated_by != undefined) {\n      formData.append(\"curated_by\", values.curated_by);\n    }\n    if (values.fragrance_aroma != undefined) {\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n    }\n    if (values.flavor != undefined) {\n      formData.append(\"flavor\", values.flavor);\n    }\n    if (values.aftertaste != undefined) {\n      formData.append(\"aftertaste\", values.aftertaste);\n    }\n    if (values.acidity != undefined) {\n      formData.append(\"acidity\", values.acidity);\n    }\n    if (values.body != undefined) {\n      formData.append(\"body\", values.body);\n    }\n    if (values.cupping_score != undefined) {\n      formData.append(\"cupping_score\", values.cupping_score);\n    }\n    if (values.category != undefined) {\n      formData.append(\"category\", values.category);\n    }\n    if (certificateFile != \"\") {\n      for (let i = 0; i < certificateFile.length; i++) {\n        console.log(certificateFile[i]);\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n    }\n    UserService.editCupping(id, formData).then(\n      showResults(\"Data has been changed\")\n    );\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <EditCuppingForm \n        onSubmit={handleSubmit} \n        cuppingID={id} \n        onSelectCertificate={onCertificateChange} />\n    </Fragment>\n  );\n};\n\nexport default EditCupping;\n"]},"metadata":{},"sourceType":"module"}