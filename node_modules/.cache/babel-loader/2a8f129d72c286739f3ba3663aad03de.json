{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js\";\nimport { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../services/user.service\";\nimport { CImg, CCard, CCardBody, CCol, CCarousel, CCarouselInner, CCarouselItem, CCarouselControl, CRow, CNavLink } from \"@coreui/react\";\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport Marker from \"../../../Grosir/Supplier/Google Maps/Marker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n_c = Wrapper;\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this._onChange = _ref => {\n      let {\n        center,\n        zoom\n      } = _ref;\n      this.setState({\n        center: center,\n        zoom: zoom\n      });\n    };\n\n    this.apiHasLoaded = (map, maps) => {\n      this.setState({\n        mapApiLoaded: true,\n        mapInstance: map,\n        mapApi: maps\n      });\n\n      this._generateAddress();\n    };\n\n    this.addPlace = place => {\n      this.setState({\n        places: [place],\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      });\n\n      this._generateAddress();\n    };\n\n    this.renderMyMaps = () => {\n      const {\n        places,\n        mapApiLoaded,\n        mapInstance,\n        mapApi\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          center: this.state.center,\n          zoom: this.state.zoom // draggable={this.state.draggable}\n          ,\n          onChange: this._onChange,\n          bootstrapURLKeys: {\n            key: \"AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4\",\n            libraries: [\"places\", \"geometry\"]\n          },\n          yesIWantToUseGoogleMapApiInternals: true,\n          onGoogleApiLoaded: _ref2 => {\n            let {\n              map,\n              maps\n            } = _ref2;\n            return this.apiHasLoaded(map, maps);\n          },\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            text: this.state.address,\n            lat: this.state.lat,\n            lng: this.state.lng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderCarouselImage = () => {\n      let menuItems = [];\n\n      if (this.state.harvestImage != null) {\n        if (this.state.harvestImage.length >= 1) {\n          this.state.harvestImage && this.state.harvestImage.map(value2 => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                  children: /*#__PURE__*/_jsxDEV(CImg, {\n                    src: MARKETPLACE_URL + value2[i].images,\n                    className: \"d-block w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this));\n              }\n            } else if (value2.length == 1) {\n              menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + value2[0].images,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this));\n            } else {\n              menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + value2.images,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this));\n            }\n          });\n        }\n      }\n\n      return menuItems;\n    };\n\n    this.renderCuppingCertificate = () => {\n      let menuItems = [];\n\n      if (this.state.certificateRoasting) {\n        for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n          let filename = MARKETPLACE_URL + this.state.certificateRoasting[i].certificates;\n\n          if (filename.split('.').pop() === 'jpg' || filename.split('.').pop() === 'png' || filename.split('.').pop() === 'jpeg') {\n            menuItems.push(\n            /*#__PURE__*/\n            // <CCarouselItem>\n            _jsxDEV(CImg, {\n              src: MARKETPLACE_URL + this.state.certificateRoasting[i].certificates,\n              className: \"d-block w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this) // </CCarouselItem>\n            );\n          } else {\n            menuItems.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"iframe-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                class: \"responsive-iframe\",\n                src: MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this));\n          } // menuItems.push(\n          //   <CCarouselItem>\n          //     <CImg\n          //       src={\n          //         MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n          //       }\n          //       className=\"d-block w-100\"\n          //     />\n          //   </CCarouselItem>\n          // );\n\n        }\n      }\n\n      if (this.state.certificateRoasting) {\n        return menuItems;\n      }\n    };\n\n    this.renderBatchCertificate = () => {\n      let menuItems = [];\n\n      if (this.state.certificateBatch) {\n        for (let i = 0; i < this.state.certificateBatch.length; i++) {\n          menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n            children: /*#__PURE__*/_jsxDEV(CImg, {\n              src: MARKETPLACE_URL + this.state.certificateBatch[i].certificates,\n              className: \"d-block w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 11\n          }, this));\n        }\n      }\n\n      if (this.state.certificateBatch) {\n        return menuItems;\n      }\n    };\n\n    this.renderDetailRoasting = () => {\n      if (this.state.roasting) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Green Bean\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"SKU Green Bean:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Batch Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.batch_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Country Of Origin:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 19\n                  }, this), \" Indonesia\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Origin:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.lokasi_supplier]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Farm:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.nama_supplier]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Maps Link:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 19\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    style: {\n                      color: \"white\"\n                    },\n                    target: \"_blank\",\n                    href: this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '#',\n                    children: this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Elevation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.elevation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Harvesting Year:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.tgl_panen]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Variety:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.jenis.deskripsi_jenis]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.proses.deskripsi_proses]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Moisture:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.moisture]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Google Map Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"100%\",\n                    height: \"300px\"\n                  },\n                  children: this.renderMyMaps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Story Telling:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.storytelling]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Volume:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.volume]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Photo and Video Culture:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"iframe-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                    class: \"responsive-iframe\" // src={this.state.batch.video_culture}>\n                    ,\n                    src: this.state.roasting[0].product.green_beans.batch.video_culture.replace(\"watch?v=\", \"embed/\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 19\n                  }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(CImg, {\n                    src: MARKETPLACE_URL + this.state.roasting[0].product.green_beans.thumbnail,\n                    className: \"d-block w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cupping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Curated Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.curated_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Curated By:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.curated_by]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Fragrance / Aroma:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.fragrance_aroma]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Flavor:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.flavor]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Aftertaste:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.aftertaste]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Acidity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.acidity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Body:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.body]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Cupping Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.cupping_score]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Category (options):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 620,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Cupping Certificate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 17\n                }, this), this.renderCuppingCertificate()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Roaster\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"SKU Roaster:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 681,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roasted Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].tgl_roasting]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roaster Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].roasting_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roaster Profile:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].roasting_profile.roasting_profile]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Volume:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].volume]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roasting Process Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roastingProcessImg.roasting_process,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Product Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roasting[0].thumbnail,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            style: {\n              marginTop: \"40px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"QR CODE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1537,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1528,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1527,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                lg: \"7\",\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roasting[0].qrcode,\n                  className: \"d-block w-100\",\n                  alt: this.state.roasting[0].product_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1543,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1542,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1550,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1541,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Product Not Found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      status: \"\",\n      roasting_id: 0,\n      product_id: 0,\n      code: \"\",\n      roasting: null,\n      cupping: null,\n      blendedBeans: [],\n      harvestImage: [],\n      certificateRoasting: null,\n      certificateBatch: null,\n      roastingProcessImg: null,\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 11,\n      address: \"\",\n      // draggable: true,\n      lat: null,\n      lng: null\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.longProps !== prevProps.longProps) {\n      var lat = parseFloat(this.props.latProps);\n      var long = parseFloat(this.props.longProps);\n      this.setState({\n        center: [lat, long],\n        lat: lat,\n        lng: long\n      });\n    }\n  }\n\n  async componentWillMount() {\n    this.setCurrentLocation();\n  }\n\n  async _generateAddress() {\n    const {\n      mapApi\n    } = this.state; // const geocoder = new mapApi.Geocoder();\n    // geocoder.geocode(\n    //   { location: { lat: this.state.lat, lng: this.state.lng } },\n    //   (results, status) => {\n    //     console.log(results);\n    //     console.log(status);\n    //     if (status === \"OK\") {\n    //       if (results[0]) {\n    //         this.zoom = 12;\n    //         this.setState({ address: results[0].formatted_address });\n    //       } else {\n    //         window.alert(\"No results found\");\n    //       }\n    //     } else {\n    //       window.alert(\"Geocoder failed due to: \" + status);\n    //     }\n    //   }\n    // );\n  } // Get Current Location Coordinates\n\n\n  async setCurrentLocation() {\n    if (this.props.longProps == null && this.props.latProps == null) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          center: [position.coords.latitude, position.coords.longitude],\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n    }\n  }\n\n  async componentDidMount() {\n    let id = this.props.roastingID;\n    this.setState({\n      roasting_id: id\n    });\n    let code = this.props.code;\n    this.setState({\n      code: code\n    });\n    await UserService.getDetailRoastingProductGuest(code, id).then(response => {\n      if (response.data.roasting[0]) {\n        this.setState({\n          roasting: response.data.roasting,\n          blendedBeans: response.data.blendedBeans,\n          cupping: response.data.roasting_cupping,\n          certificateRoasting: response.data.cuppingCertificate,\n          roastingProcessImg: response.data.roastingProcessImg\n        }); // UserService.getDetailCuppingGuest(code, response.data.roasting[0].cupping_id).then((response) => {\n        //   this.setState({\n        //     cupping: response.data.roasting_cupping,\n        //     certificateRoasting: response.data.cuppingCertificate,\n        //   });\n        // });\n        //Single Origin\n\n        if (response.data.roasting[0].roasting_menu == \"Single\") {\n          //Single Origin Create Product\n          if (response.data.roasting[0].product.productID == null) {\n            this.setState({\n              status: \"Single Origin\",\n              certificateBatch: []\n            });\n          } else {\n            //Single Origin Import Green Beans\n            if (response.data.roasting[0].product.green_beans.batch != null) {\n              this.setState({\n                status: \"Single Origin Import Green Beans\"\n              });\n              let id = response.data.roasting[0].product.green_beans.batch.id;\n              UserService.getDetailBatchGuest(code, id).then(response => {\n                this.setState({\n                  harvestImage: response.data.imageBatch,\n                  certificateBatch: response.data.certificateBatch\n                });\n              });\n            } //Single Origin Import Blended Green Beans\n            else {\n                this.setState({\n                  status: \"Single Origin Import Blended Green Beans\"\n                });\n                let id = response.data.roasting[0].product.productID;\n                UserService.getDetailGreenBeansGuest(code, id).then(response => {\n                  this.setState({\n                    blendedBeans: response.data.blendedBeans\n                  });\n                  response.data.blendedBeans.map(value => {\n                    if (value.batch != null) {\n                      let id = value.batch.batch_id;\n                      UserService.getDetailBatchByBatchIDGuest(code, id).then(response => {\n                        this.setState(prevState => ({\n                          harvestImage: [...prevState.harvestImage, response.data.imageBatch],\n                          certificateBatch: [...prevState.certificateBatch, response.data.certificateBatch]\n                        }));\n                      });\n                    }\n                  });\n                });\n              }\n          }\n        } //Blended Beans\n        else {\n            this.setState({\n              status: \"Blended Beans\",\n              certificateBatch: []\n            });\n            response.data.blendedBeans.map(value => {\n              if (value.product != null) {\n                if (value.product.productID != null) {\n                  if (value.product.green_beans.batch != null) {\n                    let id = value.product.green_beans.batch.id;\n                    UserService.getDetailBatchGuest(code, id).then(response => {\n                      this.setState(prevState => ({\n                        harvestImage: [...prevState.harvestImage, response.data.imageBatch],\n                        certificateBatch: [...prevState.certificateBatch, response.data.certificateBatch]\n                      }));\n                    });\n                  } else {\n                    //Get Blended Beans Import Green Beans\n                    let id = value.product.productID;\n                    UserService.getProdukGuest(code, id).then(response => {\n                      this.setState(prevState => ({\n                        blendedBeans: [...prevState.blendedBeans, response.data.blendedBeans[0], response.data.blendedBeans[1]]\n                      }));\n                    });\n                  }\n                }\n              }\n            });\n          }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"c-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            style: {\n              backgroundColor: \"grey\",\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              style: {\n                padding: \"5%\"\n              },\n              children: this.renderDetailRoasting()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1577,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1573,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js"],"names":["Fragment","React","Component","UserService","CImg","CCard","CCardBody","CCol","CCarousel","CCarouselInner","CCarouselItem","CCarouselControl","CRow","CNavLink","GoogleMapReact","styled","Marker","require","config","MARKETPLACE_URL","process","env","REACT_APP_CATALOG_URL","Wrapper","main","HalamanUtama","constructor","props","_onChange","center","zoom","setState","apiHasLoaded","map","maps","mapApiLoaded","mapInstance","mapApi","_generateAddress","addPlace","place","places","lat","geometry","location","lng","renderMyMaps","state","key","libraries","address","renderCarouselImage","menuItems","harvestImage","length","value2","i","push","images","renderCuppingCertificate","certificateRoasting","filename","certificates","split","pop","renderBatchCertificate","certificateBatch","renderDetailRoasting","roasting","transform","transformOrigin","writingMode","color","textAlign","product","green_beans","sku","batch","batch_id","supplier","lokasi_supplier","nama_supplier","link_maps","elevation","tgl_panen","jenis","deskripsi_jenis","proses","deskripsi_proses","moisture","width","height","storytelling","volume","video_culture","replace","thumbnail","marginTop","backgroundColor","cupping","curated_date","curated_by","fragrance_aroma","flavor","aftertaste","acidity","body","cupping_score","category","tgl_roasting","roasting_name","roasting_profile","roastingProcessImg","roasting_process","qrcode","product_id","status","roasting_id","code","blendedBeans","geoCoder","componentDidUpdate","prevProps","longProps","parseFloat","latProps","long","componentWillMount","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","componentDidMount","id","roastingID","getDetailRoastingProductGuest","then","response","data","roasting_cupping","cuppingCertificate","roasting_menu","productID","getDetailBatchGuest","imageBatch","getDetailGreenBeansGuest","value","getDetailBatchByBatchIDGuest","prevState","getProdukGuest","render","padding"],"mappings":"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","sourcesContent":["import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport GoogleMapReact from \"google-map-react\";\nimport styled from \"styled-components\";\nimport Marker from \"../../../Grosir/Supplier/Google Maps/Marker\";\n\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nconst Wrapper = styled.main`\n  width: 100%;\n  height: 100%;\n`;\n\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      roasting_id: 0,\n      product_id: 0,\n      code: \"\",\n      roasting: null,\n      cupping: null,\n      blendedBeans: [],\n      harvestImage: [],\n      certificateRoasting: null,\n      certificateBatch: null,\n      roastingProcessImg: null,\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 11,\n      address: \"\",\n      // draggable: true,\n      lat: null,\n      lng: null,\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.longProps !== prevProps.longProps) {\n      var lat = parseFloat(this.props.latProps);\n      var long = parseFloat(this.props.longProps);\n      this.setState({\n        center: [lat, long],\n        lat: lat,\n        lng: long,\n      });\n    }\n  }\n  async componentWillMount() {\n    this.setCurrentLocation();\n  }\n\n  _onChange = ({ center, zoom }) => {\n    this.setState({\n      center: center,\n      zoom: zoom,\n    });\n  };\n\n  apiHasLoaded = (map, maps) => {\n    this.setState({\n      mapApiLoaded: true,\n      mapInstance: map,\n      mapApi: maps,\n    });\n\n    this._generateAddress();\n  };\n\n  addPlace = (place) => {\n    this.setState({\n      places: [place],\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng(),\n    });\n    this._generateAddress();\n  };\n\n  async _generateAddress() {\n    const { mapApi } = this.state;\n\n    // const geocoder = new mapApi.Geocoder();\n\n    // geocoder.geocode(\n    //   { location: { lat: this.state.lat, lng: this.state.lng } },\n    //   (results, status) => {\n    //     console.log(results);\n    //     console.log(status);\n    //     if (status === \"OK\") {\n    //       if (results[0]) {\n    //         this.zoom = 12;\n    //         this.setState({ address: results[0].formatted_address });\n    //       } else {\n    //         window.alert(\"No results found\");\n    //       }\n    //     } else {\n    //       window.alert(\"Geocoder failed due to: \" + status);\n    //     }\n    //   }\n    // );\n  }\n\n  // Get Current Location Coordinates\n\n  async setCurrentLocation() {\n    if (this.props.longProps == null && this.props.latProps == null) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          center: [position.coords.latitude, position.coords.longitude],\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  }\n\n  renderMyMaps = () => {\n    const { places, mapApiLoaded, mapInstance, mapApi } = this.state;\n\n    return (\n      <Wrapper>\n        <GoogleMapReact\n          center={this.state.center}\n          zoom={this.state.zoom}\n          // draggable={this.state.draggable}\n          onChange={this._onChange}\n          bootstrapURLKeys={{\n            key: \"AIzaSyC81o8Qoasn_E2FqMrqhmM-2IUlgAab2V4\",\n            libraries: [\"places\", \"geometry\"],\n          }}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n        >\n          <Marker\n            text={this.state.address}\n            lat={this.state.lat}\n            lng={this.state.lng}\n          />\n        </GoogleMapReact>\n      </Wrapper>\n    );\n  }\n\n\n  async componentDidMount() {\n    let id = this.props.roastingID;\n    this.setState({ roasting_id: id });\n\n    let code = this.props.code;\n    this.setState({\n      code: code,\n    });\n\n    await UserService.getDetailRoastingProductGuest(code, id).then((response) => {\n      if (response.data.roasting[0]) {\n        this.setState({\n          roasting: response.data.roasting,\n          blendedBeans: response.data.blendedBeans,\n          cupping: response.data.roasting_cupping,\n          certificateRoasting: response.data.cuppingCertificate,\n          roastingProcessImg: response.data.roastingProcessImg,\n        })\n\n        // UserService.getDetailCuppingGuest(code, response.data.roasting[0].cupping_id).then((response) => {\n        //   this.setState({\n        //     cupping: response.data.roasting_cupping,\n        //     certificateRoasting: response.data.cuppingCertificate,\n        //   });\n        // });\n\n        //Single Origin\n        if (response.data.roasting[0].roasting_menu == \"Single\") {\n          //Single Origin Create Product\n          if (response.data.roasting[0].product.productID == null) {\n            this.setState({\n              status: \"Single Origin\",\n              certificateBatch: [],\n            });\n          } else {\n            //Single Origin Import Green Beans\n            if (response.data.roasting[0].product.green_beans.batch != null) {\n              this.setState({\n                status: \"Single Origin Import Green Beans\",\n              });\n\n              let id = response.data.roasting[0].product.green_beans.batch.id;\n              UserService.getDetailBatchGuest(code, id).then((response) => {\n                this.setState({\n                  harvestImage: response.data.imageBatch,\n                  certificateBatch: response.data.certificateBatch,\n                });\n              });\n            }\n            //Single Origin Import Blended Green Beans\n            else {\n              this.setState({\n                status: \"Single Origin Import Blended Green Beans\",\n              });\n              let id = response.data.roasting[0].product.productID;\n              UserService.getDetailGreenBeansGuest(code, id).then(\n                (response) => {\n                  this.setState({\n                    blendedBeans: response.data.blendedBeans,\n                  });\n                  response.data.blendedBeans.map((value) => {\n                    if (value.batch != null) {\n                      let id = value.batch.batch_id;\n                      UserService.getDetailBatchByBatchIDGuest(code, id).then(\n                        (response) => {\n                          this.setState((prevState) => ({\n                            harvestImage: [\n                              ...prevState.harvestImage,\n                              response.data.imageBatch,\n                            ],\n                            certificateBatch: [\n                              ...prevState.certificateBatch,\n                              response.data.certificateBatch,\n                            ],\n                          }));\n                        }\n                      );\n                    }\n                  });\n                }\n              );\n            }\n          }\n        }\n        //Blended Beans\n        else {\n          this.setState({\n            status: \"Blended Beans\",\n            certificateBatch: [],\n          });\n          response.data.blendedBeans.map((value) => {\n            if (value.product != null) {\n              if (value.product.productID != null) {\n                if (value.product.green_beans.batch != null) {\n                  let id = value.product.green_beans.batch.id;\n                  UserService.getDetailBatchGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      harvestImage: [\n                        ...prevState.harvestImage,\n                        response.data.imageBatch,\n                      ],\n                      certificateBatch: [\n                        ...prevState.certificateBatch,\n                        response.data.certificateBatch,\n                      ],\n                    }));\n                  });\n                } else {\n                  //Get Blended Beans Import Green Beans\n                  let id = value.product.productID;\n                  UserService.getProdukGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      blendedBeans: [\n                        ...prevState.blendedBeans,\n                        response.data.blendedBeans[0],\n                        response.data.blendedBeans[1],\n                      ],\n                    }));\n                  });\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n\n  }\n\n  renderCarouselImage = () => {\n    let menuItems = [];\n    if (this.state.harvestImage != null) {\n      if (this.state.harvestImage.length >= 1) {\n        this.state.harvestImage &&\n          this.state.harvestImage.map((value2) => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2[i].images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              }\n            } else if (value2.length == 1) {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2[0].images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            } else {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2.images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            }\n          });\n      }\n    }\n    return menuItems;\n  };\n\n  renderCuppingCertificate = () => {\n    let menuItems = [];\n\n    if (this.state.certificateRoasting) {\n      for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n        let filename = MARKETPLACE_URL + this.state.certificateRoasting[i].certificates;\n\n        if(filename.split('.').pop() === 'jpg' || filename.split('.').pop() === 'png' || filename.split('.').pop() === 'jpeg') {\n          menuItems.push(\n            // <CCarouselItem>\n              <CImg\n                src={\n                  MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n                }\n                className=\"d-block w-100\"\n              />\n            // </CCarouselItem>\n          );\n        } else {\n          menuItems.push(\n            <div class=\"iframe-container\">\n              <iframe class=\"responsive-iframe\" src={\n                  MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n                }\n              >\n              </iframe>\n              <p>{\" \"}</p>\n            </div>\n          );\n        }\n        // menuItems.push(\n        //   <CCarouselItem>\n        //     <CImg\n        //       src={\n        //         MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n        //       }\n        //       className=\"d-block w-100\"\n        //     />\n        //   </CCarouselItem>\n        // );\n      }\n    }\n\n    if (this.state.certificateRoasting) {\n      return menuItems;\n    }\n  };\n\n  renderBatchCertificate = () => {\n    let menuItems = [];\n    if (this.state.certificateBatch) {\n      for (let i = 0; i < this.state.certificateBatch.length; i++) {\n        menuItems.push(\n          <CCarouselItem>\n            <CImg\n              src={\n                MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n              }\n              className=\"d-block w-100\"\n            />\n          </CCarouselItem>\n        );\n      }\n    }\n\n    if (this.state.certificateBatch) {\n      return menuItems;\n    }\n  }\n\n  // renderCarouselCertificate = () => {\n  //   let menuItems = [];\n  //   if (this.state.certificateRoasting != null) {\n  //     for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch != null) {\n  //     for (let i = 0; i < this.state.certificateBatch.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch && this.state.certificateRoasting) {\n  //     return menuItems;\n  //   }\n  // };\n\n  renderDetailRoasting = () => {\n    if (this.state.roasting) {\n      return (\n        <Fragment>\n\n          {/* data green bean */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Green Bean</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Green Bean:</strong> {this.state.roasting[0].product.green_beans.sku}\n                </p>\n                <p>\n                  <strong>Batch Number:</strong> {this.state.roasting[0].product.green_beans.batch.batch_id}\n                </p>\n                <p>\n                  <strong>Country Of Origin:</strong> Indonesia\n                </p>\n                <p>\n                  <strong>Origin:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.lokasi_supplier}\n                </p>\n                <p>\n                  <strong>Farm:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.nama_supplier}\n                </p>\n                <p>\n                  <strong>Maps Link:</strong> <a style={{color: \"white\"}} target=\"_blank\" href={this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '#'}>{this.state.roasting[0].product.green_beans.batch.supplier.link_maps ? this.state.roasting[0].product.green_beans.batch.supplier.link_maps : '-'}</a>\n                </p>\n                <p>\n                  <strong>Elevation:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.elevation}\n                </p>\n                <p>\n                  <strong>Harvesting Year:</strong> {this.state.roasting[0].product.green_beans.batch.tgl_panen}\n                </p>\n                <p>\n                  <strong>Variety:</strong> {this.state.roasting[0].product.green_beans.batch.jenis.deskripsi_jenis}\n                </p>\n                <p>\n                  <strong>Process:</strong> {this.state.roasting[0].product.green_beans.batch.proses.deskripsi_proses}\n                </p>\n                <p>\n                  <strong>Moisture:</strong> {this.state.roasting[0].product.green_beans.batch.moisture}\n                </p>\n                <p>\n                  <strong>Google Map Location:</strong> \n                </p>\n                {/* <CCard>\n                  <CCardBody>\n                    {this.renderMaps()}\n                  </CCardBody>\n                </CCard> */}\n                  <div style={{width: \"100%\", height: \"300px\" }}>\n                    {this.renderMyMaps()}\n                  </div>\n                  <p></p>\n                <p>\n                  <strong>Story Telling:</strong> {this.state.roasting[0].product.green_beans.batch.storytelling}\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.roasting[0].product.green_beans.batch.volume}\n                </p>\n                <p>\n                  <strong>Photo and Video Culture:</strong> {\" \"}\n                </p>\n                <div class=\"iframe-container\">\n                  {/* <iframe class=\"responsive-iframe\"\n                    src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                  </iframe> */}\n                  <iframe class=\"responsive-iframe\"\n                    // src={this.state.batch.video_culture}>\n                    src={this.state.roasting[0].product.green_beans.batch.video_culture.replace(\"watch?v=\", \"embed/\")}>\n                  </iframe>\n                  <p>{\" \"}</p>\n                </div>\n                <p>\n                  <strong>Process Photo:</strong> {\" \"}\n                  <CImg\n                    src={MARKETPLACE_URL + this.state.roasting[0].product.green_beans.thumbnail}\n                    className=\"d-block w-100\"\n                  />\n                </p>\n                {/* <p>\n                  <strong>Certification Photos:</strong> {\" \"}\n                </p>\n                <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderBatchCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol> \n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol>*/}\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data green bean */}\n\n\n          {/* data cupping */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Cupping</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>Curated Date:</strong> {this.state.cupping.curated_date}\n                </p>\n                <p>\n                  <strong>Curated By:</strong> {this.state.cupping.curated_by}\n                </p>\n                <p>\n                  <strong>Fragrance / Aroma:</strong> {this.state.cupping.fragrance_aroma}\n                </p>\n                <p>\n                  <strong>Flavor:</strong> {this.state.cupping.flavor}\n                </p>\n                <p>\n                  <strong>Aftertaste:</strong> {this.state.cupping.aftertaste}\n                </p>\n                <p>\n                  <strong>Acidity:</strong> {this.state.cupping.acidity}\n                </p>\n                <p>\n                  <strong>Body:</strong> {this.state.cupping.body}\n                </p>\n                <p>\n                  <strong>Cupping Score:</strong> {this.state.cupping.cupping_score}\n                </p>\n                <p>\n                  <strong>Category (options):</strong> {this.state.cupping.category}\n                </p>\n                <p>\n                  <strong>Cupping Certificate:</strong> {\" \"}\n                </p>\n                {this.renderCuppingCertificate()}\n                {/* <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderCuppingCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol> */}\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data cupping */}\n\n          {/* data roaster */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Roaster</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Roaster:</strong> {this.state.roasting[0].sku}\n                </p>\n                <p>\n                  <strong>Roasted Date:</strong> {this.state.roasting[0].tgl_roasting}\n                </p>\n                <p>\n                  <strong>Roaster Name:</strong> {this.state.roasting[0].roasting_name}\n                </p>\n                <p>\n                  <strong>Roaster Profile:</strong> {this.state.roasting[0].roasting_profile.roasting_profile}\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.roasting[0].volume}\n                </p>\n                <p>\n                  <strong>Roasting Process Photo:</strong> {\" \"}\n                </p>\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roastingProcessImg.roasting_process}\n                  className=\"d-block w-100\"\n                />\n                <p>\n                  <strong>Product Photo:</strong> {\" \"}\n                </p>\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                  className=\"d-block w-100\"\n                />\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data roaster */}\n\n          {/* <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>ROAST</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.supplier\n                            .lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {this.state.roasting[0].product.supplier.elevation}{\" \"}\n                        {this.state.roasting[0].product.supplier.unit.nama_unit}\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date:</strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.elevation\n                        }{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.unit.nama_unit\n                        }\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Farm {i}:</strong>{\" \"}\n                                {value.batch.supplier.lokasi_supplier}\n                              </p>\n                              <p>\n                                <strong>Elevation {i}:</strong>{\" \"}\n                                {value.batch.supplier.elevation}{\" \"}\n                                {value.batch.supplier.unit.nama_unit}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.product.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.product.supplier.elevation}{\" \"}\n                                      {value.product.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            } else if (value.batch != null) {\n                              if (value.batch.batch_id != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .lokasi_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .elevation\n                                      }{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .unit.nama_unit\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          } else {\n                            if (value.batch != null) {\n                              i++;\n                              return (\n                                <Fragment>\n                                  <p>\n                                    <strong>Farm {i}:</strong>{\" \"}\n                                    {value.batch.supplier.lokasi_supplier}\n                                  </p>\n                                  <p>\n                                    <strong>Elevation {i}:</strong>{\" \"}\n                                    {value.batch.supplier.elevation}{\" \"}\n                                    {value.batch.supplier.unit.nama_unit}\n                                  </p>\n                                </Fragment>\n                              );\n                            }\n                          }\n                        })}\n                      <p>\n                        <strong>Flavor Note: </strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity: </strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity: </strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                }\n              })()}\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.roasting[0].thumbnail != null) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 48%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CImg\n                        src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                        className=\"d-block w-100\"\n                        alt={this.state.roasting.name}\n                      />\n                    </CCol>\n\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 70%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>BATCH</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong> -\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong> -\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.jenis.nama_jenis}\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.proses.nama_proses}\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {this.state.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div class=\"iframe-container\">\n                        <iframe class=\"responsive-iframe\"\n                          src={this.state.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong> -\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .batch_id\n                        }\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .tgl_panen\n                        }\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch.jenis\n                            .nama_jenis\n                        }\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .proses.nama_proses\n                        }\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.roasting[0].product.green_beans.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.nama_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div class=\"iframe-container\">\n                        <iframe class=\"responsive-iframe\"\n                          src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.roasting[0].product.green_beans.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .created_at\n                        }\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Batch ID {i}:</strong>{\" \"}\n                                {value.batch.batch_id}\n                              </p>\n                              <p>\n                                <strong>Harvesting Year {i}:</strong>{\" \"}\n                                {value.batch.tgl_panen}\n                              </p>\n                              <p>\n                                <strong>Variety Name {i}:</strong>{\" \"}\n                                {value.batch.jenis.nama_jenis}\n                              </p>\n                              <p>\n                                <strong>Process Name {i}:</strong>{\" \"}\n                                {value.batch.proses.nama_proses}\n                              </p>\n                              <p>\n                                <strong>Moisture:</strong>{\" \"}\n                                {value.batch.moisture}\n                              </p>\n                              <p>\n                                <strong>Processor {i}:</strong>{\" \"}\n                                {value.batch.supplier.nama_supplier}\n                              </p>\n                              <p>\n                                <strong>Video Culture:</strong>{\" \"}\n                              </p>\n                              <div class=\"iframe-container\">\n                                <iframe class=\"responsive-iframe\"\n                                  src={value.batch.video_culture}>\n                                </iframe>\n                              </div>\n                              <p></p>\n                              <p>\n                                <strong>Storytelling:</strong>\n                              </p>\n                              <p>{value.batch.storytelling}</p>\n                              <p>\n                                <strong>Processing Year {i}:</strong>{\" \"}\n                                {value.created_at}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {value.batch.tgl_panen}\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.batch.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.batch.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.batch.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div class=\"iframe-container\">\n                                      <iframe class=\"responsive-iframe\"\n                                        src={value.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {value.created_at}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.product.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.product.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.product.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong> -\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.product.green_beans.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .tgl_panen\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.jenis\n                                          .nama_jenis\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.proses\n                                          .nama_proses\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.product.green_beans.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .nama_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div class=\"iframe-container\">\n                                      <iframe class=\"responsive-iframe\"\n                                        src={value.product.green_beans.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.product.green_beans.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .created_at\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          }\n                        })}\n                    </Fragment>\n                  );\n                }\n              })()}\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.harvestImage.length >= 1) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 70%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselImage()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* {(() => {\n            if (this.state.certificateRoasting || this.state.certificateBatch) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 55%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>CERTIFICATE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselCertificate()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>QR CODE</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <CCol xs=\"12\" lg=\"7\">\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].qrcode}\n                  className=\"d-block w-100\"\n                  alt={this.state.roasting[0].product_id}\n                />\n              </CCol>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailRoasting()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}