{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/login.component.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { CButton, CRow, CCol, CImg } from \"@coreui/react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\"; // const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    this.form.validateAll();\n    const {\n      dispatch,\n      history\n    } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.email, this.state.password)).then(() => {\n        history.push(\"/\");\n        window.location.reload();\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      message\n    } = this.props;\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (isLoggedIn === true) {\n      if (user) {\n        if (user.role === 'grosir') {\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/listBiji\" />;\n          // } else {\n          //   return <Redirect to=\"/listProduk\" />;\n          // }\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/listBiji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this);\n        } else {\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/masterData\" />;\n          // } else {\n          //   return <Redirect to=\"/roasting\" />;\n          // }\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/masterData\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }, this);\n        }\n      } else {\n        console.log(\"LOGIN FAILED\");\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-app c-default-layout  align-items-center justify-content-center\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CImg, {\n        src: \"/images/login form-04.png\",\n        className: \"d-inline-block align-top\",\n        alt: \"login-form\",\n        style: {\n          position: \"absolute\",\n          maxWidth: \"600px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-content-center\",\n        style: {\n          width: \"400px\",\n          zIndex: \"99\",\n          maxHeight: \"1000px\",\n          position: \"absolute\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleLogin,\n          ref: c => {\n            this.form = c;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginTop: \"13em\",\n              paddingLeft: \"5em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: this.state.email,\n              onChange: this.onChangeEmail // validations={[required]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3em\",\n              paddingLeft: \"5em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.onChangePassword // validations={[required]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            style: {\n              marginTop: \"12em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light btn-block\",\n                  style: {\n                    backgroundColor: \"white\"\n                  },\n                  disabled: this.state.loading,\n                  children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"spinner-border spinner-border-sm\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"6\",\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(CButton, {\n                color: \"link\",\n                className: \"px-0\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    isLoggedIn\n  } = state.auth;\n  const {\n    message\n  } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Coffee-Traceability/src/components/login.component.js"],"names":["React","Component","Redirect","CButton","CRow","CCol","CImg","Form","Input","CheckButton","connect","login","Login","constructor","props","handleLogin","bind","onChangeEmail","onChangePassword","state","email","password","loading","e","setState","target","value","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","then","push","window","location","reload","catch","render","isLoggedIn","message","user","JSON","parse","localStorage","getItem","role","console","log","backgroundColor","position","maxWidth","width","zIndex","maxHeight","c","marginTop","paddingLeft","display","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { CButton, CRow, CCol, CImg } from \"@coreui/react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\n\n// const required = (value) => {\n//   if (!value) {\n//     return (\n//       <div className=\"alert alert-danger\" role=\"alert\">\n//         This field is required!\n//       </div>\n//     );\n//   }\n// };\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.email, this.state.password))\n        .then(() => {\n          history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false,\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (isLoggedIn === true) {\n      if(user) {\n        if(user.role === 'grosir'){\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/listBiji\" />;\n          // } else {\n          //   return <Redirect to=\"/listProduk\" />;\n          // }\n          \n          return <Redirect to=\"/listBiji\" />;\n\n        } else {\n          // if(user.status_role === \"koperasi\"){\n          //   return <Redirect to=\"/masterData\" />;\n          // } else {\n          //   return <Redirect to=\"/roasting\" />;\n          // }\n          \n          return <Redirect to=\"/masterData\" />;\n\n        }\n      } else {\n        console.log(\"LOGIN FAILED\");\n      }\n    }\n\n    return (\n      <div\n        className=\"c-app c-default-layout  align-items-center justify-content-center\"\n        style={{ backgroundColor: \"white\" }}\n      >\n        <CImg\n          src=\"/images/login form-04.png\"\n          className=\"d-inline-block align-top\"\n          alt=\"login-form\"\n          style={{ position: \"absolute\", maxWidth: \"600px\" }}\n        />\n\n        <div\n          className=\"justify-content-center\"\n          style={{\n            width: \"400px\",\n            zIndex: \"99\",\n            maxHeight: \"1000px\",\n            position: \"absolute\",\n          }}\n        >\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div\n              className=\"form-group\"\n              style={{ marginTop: \"13em\", paddingLeft: \"5em\" }}\n            >\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                // validations={[required]}\n              />\n            </div>\n\n            <div style={{ marginTop: \"3em\", paddingLeft: \"5em\" }}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                // validations={[required]}\n              />\n            </div>\n\n            <CRow style={{ marginTop: \"12em\" }}>\n              <CCol xs=\"6\">\n                <div>\n                  <button\n                    className=\"btn btn-light btn-block\"\n                    style={{ backgroundColor: \"white\" }}\n                    disabled={this.state.loading}\n                  >\n                    {this.state.loading && (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                    )}\n                    <span>Login</span>\n                  </button>\n                </div>\n              </CCol>\n              <CCol xs=\"6\" className=\"text-right\">\n                <CButton color=\"link\" className=\"px-0\">\n                  Forgot password?\n                </CButton>\n              </CCol>\n            </CRow>\n\n            {/* {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )} */}\n\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n\n        {/* <CContainer>\n          <CRow className=\"justify-content-center\">\n            <CCol md=\"4\"></CCol>\n          </CRow>\n        </CContainer> */}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}