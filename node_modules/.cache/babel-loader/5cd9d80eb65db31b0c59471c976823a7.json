{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ListGreenBean.js\";\nimport { Fragment, React, Component } from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CButton, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport { Redirect } from \"react-router-dom\";\nimport QRcode from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ListGreenBean extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteGB = async item => {\n      await UserService.deleteBatchGreenBean(item.id).then(showResults(\"Data has been deleted\"));\n      await window.location.reload(true);\n    };\n\n    this.setModal = async batchId => {\n      if (batchId) {\n        this.setState({\n          batchId: batchId\n        });\n      }\n\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        qr: value\n      });\n    };\n\n    this.downloadQR = async product_id => {\n      const canvas = document.getElementById(\"myqr\");\n      const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n      let downloadLink = document.createElement(\"a\");\n      downloadLink.href = pngUrl;\n      downloadLink.download = \"\" + product_id + \".png\";\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    };\n\n    this.generateQR = async batchId => {\n      console.log('cek batch id', batchId);\n      const linkQRCode = process.env.REACT_APP_PROD_URL + \"detailBatch/ketjil/\" + batchId;\n      await this.handleChange(linkQRCode);\n      const canvas = document.getElementById(\"myqr\");\n      let imageBlob = await new Promise(resolve => canvas.toBlob(resolve, \"image/png\"));\n      let formDataQR = new FormData();\n      formDataQR.append(\"files_qr\", imageBlob, \"\" + batchId + \".png\");\n      formDataQR.append(\"fileName_qr\", \"\" + batchId + \".png\");\n      this.downloadQR(batchId);\n      await UserService.pushQRCodeImageBatch(batchId, formDataQR);\n      await UserService.getBatchGreenBean().then(response => {\n        console.log(response);\n        this.setState({\n          content: response.data.data\n        });\n      });\n      await showResults(\"Data has been added\");\n    };\n\n    this.state = {\n      content: [],\n      sku: [],\n      modal: false,\n      batchId: '',\n      qr: \"test\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getBatchGreenBean().then(response => {\n      console.log(response);\n      this.setState({\n        content: response.data.data\n      });\n    });\n  }\n\n  render() {\n    const fields = [{\n      key: \"sku_green_bean\",\n      label: \"SKU Green Bean\"\n    }, {\n      key: \"batch_number\",\n      label: \"Batch Number\"\n    }, {\n      key: \"po\",\n      label: \"PO Number\"\n    }, {\n      key: \"volume_order\",\n      label: \"Volume Order\"\n    }, {\n      key: \"show_details\",\n      label: \"\",\n      filter: false\n    }];\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"c-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  children: /*#__PURE__*/_jsxDEV(CRow, {\n                    children: [/*#__PURE__*/_jsxDEV(CCol, {\n                      xs: 6,\n                      md: 7,\n                      lg: 10,\n                      style: {\n                        margin: \"auto\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        style: {\n                          margin: \"auto\"\n                        },\n                        children: \"Batch Green Bean\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                      children: /*#__PURE__*/_jsxDEV(CButton, {\n                        block: true,\n                        color: \"dark\",\n                        to: \"/listGreenBean/daftar\",\n                        style: {\n                          backgroundColor: \"#00c4cc\"\n                        },\n                        children: \"Add\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CDataTable, {\n                    items: this.state.content,\n                    fields: fields,\n                    itemsPerPage: 10,\n                    tableFilter: true,\n                    cleaner: true,\n                    itemsPerPageSelect: true,\n                    hover: true,\n                    sorter: true,\n                    pagination: true,\n                    scopedSlots: {\n                      sku_green_bean: item => {\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.get_s_k_u.sku\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 166,\n                          columnNumber: 29\n                        }, this);\n                      },\n                      po: item => {\n                        console.log('cek ni mal', item);\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.get_p_o.po_number\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 29\n                        }, this);\n                      },\n                      volume_order: item => {\n                        console.log('cek ni mal', item);\n                        return /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [item.volume_order, \" Grams\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 29\n                        }, this);\n                      },\n                      show_details: item => {\n                        if (item.qrcode) {\n                          return /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"py-2\",\n                            style: {\n                              textAlign: \"center\",\n                              verticalAlign: \"center\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(CButton, {\n                              color: \"info\",\n                              size: \"sm\",\n                              to: `detailBatch/ketjil/${item.id}`,\n                              children: \"Show\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 31\n                          }, this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"py-2\",\n                            style: {\n                              textAlign: \"center\",\n                              verticalAlign: \"center\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(CButton, {\n                              size: \"sm\",\n                              color: \"info\",\n                              to: `/greenBean/edit/${item.id}`,\n                              style: {\n                                backgroundColor: \"#178d88\"\n                              },\n                              children: \"Edit\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 211,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n                              size: \"sm\",\n                              color: \"danger\",\n                              className: \"ml-1\",\n                              onClick: () => this.deleteGB(item),\n                              style: {\n                                backgroundColor: \"#e2602c\"\n                              },\n                              children: \"Delete\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 219,\n                              columnNumber: 33\n                            }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(CButton, {\n                              size: \"sm\",\n                              color: \"primary\",\n                              onClick: () => this.setModal(item.id),\n                              className: \"mr-1\",\n                              children: \"Generate QR\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 229,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 204,\n                            columnNumber: 31\n                          }, this);\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CModal, {\n        show: this.state.modal,\n        onClick: this.setModal,\n        color: \"warning\",\n        children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n            children: \"Generate QRCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notification,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), \" when qrcode is created then the data cannot be changed again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(CButton, {\n            color: \"info\",\n            to: `detailBatch/ketjil/${this.state.batchId}`,\n            children: \"Show Data QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"warning\",\n            style: {\n              color: \"white\"\n            },\n            onClick: () => this.generateQR(this.state.batchId),\n            children: \"Generate QRCode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), ' ', /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"secondary\",\n            onClick: this.setModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.qr ? /*#__PURE__*/_jsxDEV(QRcode, {\n          id: \"myqr\",\n          value: this.state.qr,\n          size: 320,\n          includeMargin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No QR code preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/GreenBean/ListGreenBean.js"],"names":["Fragment","React","Component","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CButton","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","UserService","showResults","Redirect","QRcode","ListGreenBean","constructor","props","deleteGB","item","deleteBatchGreenBean","id","then","window","location","reload","setModal","batchId","setState","modal","state","handleChange","value","qr","downloadQR","product_id","canvas","document","getElementById","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","generateQR","console","log","linkQRCode","process","env","REACT_APP_PROD_URL","imageBlob","Promise","resolve","toBlob","formDataQR","FormData","append","pushQRCodeImageBatch","getBatchGreenBean","response","content","data","sku","componentDidMount","render","fields","key","label","filter","margin","backgroundColor","sku_green_bean","get_s_k_u","po","get_p_o","po_number","volume_order","show_details","qrcode","textAlign","verticalAlign","color"],"mappings":"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","sourcesContent":["import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from \"@coreui/react\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport { Redirect } from \"react-router-dom\";\nimport QRcode from \"qrcode.react\";\n\nexport default class ListGreenBean extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n      sku: [],\n      modal: false,\n      batchId: '',\n      qr: \"test\",\n    };\n  }\n\n  componentDidMount() {\n    UserService.getBatchGreenBean().then((response) => {\n      console.log(response);\n      \n      this.setState({\n        content: response.data.data,\n      })\n    });\n  }\n\n  deleteGB = async (item) => {\n    await UserService.deleteBatchGreenBean(item.id).then(showResults(\"Data has been deleted\"));\n    \n    await window.location.reload(true)\n\n  };\n\n  setModal = async (batchId) => {\n    if(batchId) {\n      this.setState({\n        batchId: batchId,\n      })\n    }\n\n    this.setState({\n      modal: !this.state.modal,\n    })\n  }\n  \n  handleChange = (value) => {\n    this.setState({\n      qr: value,\n    })\n  };\n\n  downloadQR = async (product_id) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + product_id + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  generateQR = async (batchId) => {\n    console.log('cek batch id', batchId);\n\n    const linkQRCode =\n      process.env.REACT_APP_PROD_URL +\n      \"detailBatch/ketjil/\" +\n      batchId;\n    await this.handleChange(linkQRCode);\n\n    const canvas = document.getElementById(\"myqr\");\n    let imageBlob = await new Promise((resolve) =>\n      canvas.toBlob(resolve, \"image/png\")\n    );\n\n    let formDataQR = new FormData();\n    formDataQR.append(\"files_qr\", imageBlob, \"\" + batchId + \".png\");\n    formDataQR.append(\"fileName_qr\", \"\" + batchId + \".png\");\n\n    this.downloadQR(batchId);\n\n    await UserService.pushQRCodeImageBatch(batchId, formDataQR);\n\n    await UserService.getBatchGreenBean().then((response) => {\n      console.log(response);\n      \n      this.setState({\n        content: response.data.data,\n      })\n    });\n\n    await showResults(\"Data has been added\");\n  }\n\n  render() {\n\n    const fields = [\n      { key: \"sku_green_bean\", label: \"SKU Green Bean\"},\n      { key: \"batch_number\", label: \"Batch Number\"},\n      { key: \"po\", label: \"PO Number\"},\n      { key: \"volume_order\", label: \"Volume Order\"},\n      {\n        key: \"show_details\",\n        label: \"\",\n        filter: false,\n      },\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>Batch Green Bean</h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/listGreenBean/daftar\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content}\n                      fields={fields}\n                      itemsPerPage={10}\n                      tableFilter\n                      cleaner\n                      itemsPerPageSelect\n                      hover\n                      sorter\n                      pagination\n                      scopedSlots={{\n                        sku_green_bean: (item) => {\n                          return(\n                            <td>\n                              {item.get_s_k_u.sku}\n                            </td>\n                          )\n                        },\n                        po: (item) => {\n                          console.log('cek ni mal', item)\n                          return(\n                            <td>\n                              {item.get_p_o.po_number}\n                            </td>\n                          )\n                        },\n                        volume_order: (item) => {\n                          console.log('cek ni mal', item)\n                          return(\n                            <td>\n                              {item.volume_order} Grams\n                            </td>\n                          )\n                        },\n                        show_details: (item) => {\n                          if(item.qrcode) {\n                            return (\n                              <td\n                                className=\"py-2\"\n                                style={{\n                                  textAlign: \"center\",\n                                  verticalAlign: \"center\",\n                                }}\n                              >\n                                <CButton color=\"info\" size=\"sm\" to={`detailBatch/ketjil/${item.id}`} >\n                                  Show\n                                </CButton>\n                              </td>\n                            )\n                          } else {\n                            return (\n                              <td\n                                className=\"py-2\"\n                                style={{\n                                  textAlign: \"center\",\n                                  verticalAlign: \"center\",\n                                }}\n                              >\n                                <CButton\n                                  size=\"sm\"\n                                  color=\"info\"\n                                  to={`/greenBean/edit/${item.id}`}\n                                  style={{ backgroundColor: \"#178d88\" }}\n                                >\n                                  Edit\n                                </CButton>\n                                <CButton\n                                  size=\"sm\"\n                                  color=\"danger\"\n                                  className=\"ml-1\"\n                                  onClick={() => this.deleteGB(item)}\n                                  style={{ backgroundColor: \"#e2602c\" }}\n                                >\n                                  Delete\n                                </CButton> {\" \"}\n                                {/* <CButton size=\"sm\" color=\"primary\" onClick={this.setModal} className=\"mr-1\">Generate QR</CButton> */}\n                                <CButton size=\"sm\" color=\"primary\" onClick={() => this.setModal(item.id)} className=\"mr-1\">Generate QR</CButton>\n                              </td>\n                            );\n                          }\n                        },\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n\n        <CModal \n          show={this.state.modal} \n          onClick={this.setModal}\n          color=\"warning\"\n        >\n          <CModalHeader closeButton>\n            <CModalTitle>Generate QRCode</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            <strong>Notification,</strong> when qrcode is created then the data cannot be changed again\n          </CModalBody>\n          <CModalFooter>\n            <CButton color=\"info\" to={`detailBatch/ketjil/${this.state.batchId}`} >\n              Show Data QR\n            </CButton>{' '}\n            <CButton color=\"warning\" style={{color:\"white\"}} onClick={() => this.generateQR(this.state.batchId)}>\n              Generate QRCode\n            </CButton>{' '}\n            <CButton color=\"secondary\" onClick={this.setModal}>\n              Close\n            </CButton>\n          </CModalFooter>\n        </CModal>\n\n        <div >\n          {this.state.qr ? (\n            <QRcode id=\"myqr\" value={this.state.qr} size={320} includeMargin={true} />\n          ) : (\n            <p>No QR code preview</p>\n          )}\n        </div>\n\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}