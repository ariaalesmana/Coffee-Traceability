{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProductForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { CCard, CCardBody, CCardHeader, CButton, CForm, CFormGroup, CLabel, CCardFooter, CCollapse, CRow, CCol, CDataTable } from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProductForm = props => {\n  _s();\n\n  const {\n    handleSubmit,\n    reset\n  } = props;\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n  const [product, setProduct] = useState([]);\n  const [accordion, setAccordion] = useState(0);\n  useEffect(() => {\n    getData();\n  }, []);\n  const arrProduct = [];\n\n  const getData = async () => {\n    UserService.getAddDetailRoaster().then(response => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n    UserService.getListProduct().then(response => {\n      response.data.product.map((value, index) => {\n        arrProduct.push(value.product);\n      });\n      setProduct(arrProduct);\n    });\n  };\n\n  const Data = [{\n    key: \"id\",\n    label: \"Product ID\"\n  }, {\n    key: \"name\",\n    label: \"Name\"\n  }, {\n    key: \"created_at\",\n    label: \"Created Date\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"c-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(CCard, {\n          children: /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(CDataTable, {\n              items: product,\n              fields: Data,\n              itemsPerPage: 5,\n              tableFilter: true,\n              cleaner: true,\n              itemsPerPageSelect: true,\n              hover: true,\n              sorter: true,\n              pagination: true // scopedSlots={{\n              //   getName: (item) => {\n              //     return (\n              //       <td className=\"py-2\">\n              //         <div>\n              //           {item.name}\n              //         </div>\n              //       </td>\n              //     );\n              //   },\n              // }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CCard, {\n          children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CRow, {\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: 9,\n                md: 10,\n                lg: 11,\n                style: {\n                  margin: \"auto\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    margin: \"auto\"\n                  },\n                  children: \"Add Green Beans\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                children: /*#__PURE__*/_jsxDEV(CButton, {\n                  block: true,\n                  color: \"dark\",\n                  to: \"/greenBeans\",\n                  style: {\n                    backgroundColor: \"#00c4cc\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"accordion\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                className: \"mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  id: \"headingOne\",\n                  children: /*#__PURE__*/_jsxDEV(CButton, {\n                    block: true,\n                    className: \"text-left m-0 p-0\",\n                    onClick: () => setAccordion(accordion === 0 ? null : 0),\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"m-0 p-0\",\n                      children: \"Import Green Beans Product\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CCollapse, {\n                  show: accordion === 0,\n                  children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                    children: /*#__PURE__*/_jsxDEV(CFormGroup, {\n                      children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                        htmlFor: \"nf-product_id\",\n                        children: \"Product ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        className: \"textInput grosir\",\n                        name: \"product_id\",\n                        component: \"input\",\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CCardFooter, {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              type: \"submit\",\n              size: \"sm\",\n              color: \"primary\",\n              style: {\n                backgroundColor: \"#178d88\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(CButton, {\n              type: \"reset\",\n              size: \"sm\",\n              color: \"danger\",\n              onClick: reset,\n              style: {\n                backgroundColor: \"#e2602c\"\n              },\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProductForm, \"qG4SWs38KTpHlErAjbSvfYP0PbQ=\");\n\n_c = AddProductForm;\nexport default reduxForm({\n  form: \"addProduct\" // a unique identifier for this form\n\n})(AddProductForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductForm\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Products/AddProductForm.js"],"names":["React","useState","useEffect","Field","reduxForm","CCard","CCardBody","CCardHeader","CButton","CForm","CFormGroup","CLabel","CCardFooter","CCollapse","CRow","CCol","CDataTable","UserService","AddProductForm","props","handleSubmit","reset","jenis","setJenis","biji","setBiji","proses","setProses","supplier","setSupplier","product","setProduct","accordion","setAccordion","getData","arrProduct","getAddDetailRoaster","then","response","data","getListProduct","map","value","index","push","Data","key","label","margin","backgroundColor","color","form"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CButton,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CCardFooter,\n  CCollapse,\n  CRow,\n  CCol,\n  CDataTable,\n} from \"@coreui/react\";\nimport UserService from \"../../../../services/user.service\";\n\nconst AddProductForm = (props) => {\n  const { handleSubmit, reset } = props;\n\n  const [jenis, setJenis] = useState([]);\n  const [biji, setBiji] = useState([]);\n  const [proses, setProses] = useState([]);\n  const [supplier, setSupplier] = useState([]);\n  const [product, setProduct] = useState([]);\n\n  const [accordion, setAccordion] = useState(0);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const arrProduct = [];\n\n\n  const getData = async () => {\n    UserService.getAddDetailRoaster().then((response) => {\n      setJenis(response.data.jenis);\n      setBiji(response.data.biji);\n      setProses(response.data.proses);\n      setSupplier(response.data.supplier);\n    });\n    UserService.getListProduct().then((response) => {\n\n      response.data.product.map((value, index) => {\n        arrProduct.push(value.product);\n      })\n\n      setProduct(arrProduct);\n    });\n\n  };\n\n  const Data = [\n    { key: \"id\", label: \"Product ID\"},\n    { key: \"name\", label: \"Name\"},\n    { key: \"created_at\", label: \"Created Date\"},\n  ];\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <main className=\"c-main\">\n        <div className=\"container-fluid\">\n          <CCard>\n            <CCardBody>\n              <CDataTable\n                items={product}\n                fields={Data}\n                itemsPerPage={5}\n                tableFilter\n                cleaner\n                itemsPerPageSelect\n                hover\n                sorter\n                pagination\n                // scopedSlots={{\n                //   getName: (item) => {\n                //     return (\n                //       <td className=\"py-2\">\n                //         <div>\n                //           {item.name}\n                //         </div>\n                //       </td>\n                //     );\n                //   },\n                // }}\n              />\n            </CCardBody>\n          </CCard>\n          <CCard>\n            <CCardHeader>\n              <CRow>\n                <CCol xs={9} md={10} lg={11} style={{ margin: \"auto\" }}>\n                  <h4 style={{ margin: \"auto\" }}>Add Green Beans</h4>\n                </CCol>\n                <CCol>\n                  <CButton\n                    block\n                    color=\"dark\"\n                    to=\"/greenBeans\"\n                    style={{ backgroundColor: \"#00c4cc\" }}\n                  >\n                    <span style={{ color: \"white\" }}>X</span>\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CCardHeader>\n            <CCardBody>\n              <div id=\"accordion\">\n                <CCard className=\"mb-0\">\n                  <CCardHeader id=\"headingOne\">\n                    <CButton\n                      block\n                      className=\"text-left m-0 p-0\"\n                      onClick={() => setAccordion(accordion === 0 ? null : 0)}\n                    >\n                      <h5 className=\"m-0 p-0\">Import Green Beans Product</h5>\n                    </CButton>\n                  </CCardHeader>\n                  <CCollapse show={accordion === 0}>\n                    <CCardBody>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-product_id\">Product ID</CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"product_id\"\n                          component=\"input\"\n                          type=\"text\"\n                        />\n                      </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard>\n                {/* <CCard className=\"mb-0\">\n                  <CCardHeader id=\"headingTwo\">\n                    <CButton\n                      block\n                      className=\"text-left m-0 p-0\"\n                      onClick={() => setAccordion(accordion === 1 ? null : 1)}\n                    >\n                      <h5 className=\"m-0 p-0\">\n                        Create New Green Beans Product\n                      </h5>\n                    </CButton>\n                  </CCardHeader>\n                  <CCollapse show={accordion === 1}>\n                    <CCardBody>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-name\">\n                          Product Name <small>*</small>\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"product_name\"\n                          component=\"input\"\n                          type=\"text\"\n                        />\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihJenis\">Select Beans</CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"biji_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {biji &&\n                            biji.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_biji}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Variety\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"jenis_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {jenis &&\n                            jenis.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_jenis}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Process\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"proses_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {proses &&\n                            proses.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.nama_proses}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup>\n                        <CLabel htmlFor=\"nf-pilihSupplier\">\n                          Select Origin\n                        </CLabel>\n                        <Field\n                          className=\"textInput grosir\"\n                          name=\"supplier_id\"\n                          component=\"select\"\n                        >\n                          <option value=\"\" selected disabled hidden>\n                            ----\n                          </option>\n                          {supplier &&\n                            supplier.map((value) => {\n                              return (\n                                <option key={value.id} value={value.id}>\n                                  {value.lokasi_supplier}\n                                </option>\n                              );\n                            })}\n                        </Field>\n                      </CFormGroup>\n                      <CFormGroup row>\n                        <CLabel col xs=\"12\" htmlFor=\"nf-weight\">\n                          Weight <small>*</small>\n                        </CLabel>\n                        <CCol xs=\"10\">\n                          <Field\n                            className=\"textInput grosir\"\n                            name=\"weight\"\n                            component=\"input\"\n                            type=\"text\"\n                          />\n                        </CCol>\n                        <CCol xs=\"2\" style={{ margin: \"auto\" }}>\n                          <span>Kg</span>\n                        </CCol>\n                      </CFormGroup>\n                    </CCardBody>\n                  </CCollapse>\n                </CCard> */}\n              </div>\n            </CCardBody>\n            <CCardFooter>\n              <CButton\n                type=\"submit\"\n                size=\"sm\"\n                color=\"primary\"\n                style={{ backgroundColor: \"#178d88\" }}\n              >\n                Submit\n              </CButton>{\" \"}\n              <CButton\n                type=\"reset\"\n                size=\"sm\"\n                color=\"danger\"\n                onClick={reset}\n                style={{ backgroundColor: \"#e2602c\" }}\n              >\n                Reset\n              </CButton>\n            </CCardFooter>\n          </CCard>\n        </div>\n      </main>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"addProduct\", // a unique identifier for this form\n})(AddProductForm);\n"]},"metadata":{},"sourceType":"module"}