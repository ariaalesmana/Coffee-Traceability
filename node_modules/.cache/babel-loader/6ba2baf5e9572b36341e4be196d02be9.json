{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js\";\nimport { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../services/user.service\";\nimport { CImg, CCard, CCardBody, CCol, CCarousel, CCarouselInner, CCarouselItem, CCarouselControl, CRow, CNavLink } from \"@coreui/react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderCarouselImage = () => {\n      let menuItems = [];\n\n      if (this.state.harvestImage != null) {\n        if (this.state.harvestImage.length >= 1) {\n          this.state.harvestImage && this.state.harvestImage.map(value2 => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                  children: /*#__PURE__*/_jsxDEV(CImg, {\n                    src: MARKETPLACE_URL + value2[i].images,\n                    className: \"d-block w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this));\n              }\n            } else if (value2.length == 1) {\n              menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + value2[0].images,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this));\n            } else {\n              menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + value2.images,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this));\n            }\n          });\n        }\n      }\n\n      return menuItems;\n    };\n\n    this.renderCuppingCertificate = () => {\n      let menuItems = [];\n\n      if (this.state.certificateRoasting) {\n        for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n          menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n            children: /*#__PURE__*/_jsxDEV(CImg, {\n              src: MARKETPLACE_URL + this.state.certificateRoasting[i].certificates,\n              className: \"d-block w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this));\n        }\n      }\n\n      if (this.state.certificateRoasting) {\n        return menuItems;\n      }\n    };\n\n    this.renderBatchCertificate = () => {\n      let menuItems = [];\n\n      if (this.state.certificateBatch) {\n        for (let i = 0; i < this.state.certificateBatch.length; i++) {\n          menuItems.push( /*#__PURE__*/_jsxDEV(CCarouselItem, {\n            children: /*#__PURE__*/_jsxDEV(CImg, {\n              src: MARKETPLACE_URL + this.state.certificateBatch[i].certificates,\n              className: \"d-block w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 11\n          }, this));\n        }\n      }\n\n      if (this.state.certificateBatch) {\n        return menuItems;\n      }\n    };\n\n    this.renderMaps = () => {\n      const apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA';\n      const defaultZoom = 11;\n      const defaultCenter = this.state.defaultC;\n      const locations = this.state.location;\n      console.log('cek Locations', locations);\n\n      const MarkerList = () => {\n        return locations.map((location, index) => {\n          return /*#__PURE__*/_jsxDEV(MarkerWithInfoWindow, {\n            location: location\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this);\n        });\n      };\n\n      const MarkerWithInfoWindow = _ref => {\n        let {\n          location\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          onClick: () => this.setState({\n            isOpen: !this.state.isOpen\n          }),\n          position: location,\n          title: location.title,\n          label: location.label,\n          children: this.state.isOpen && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: () => this.setState({\n              isOpen: false\n            }),\n            children: /*#__PURE__*/_jsxDEV(CNavLink, {\n              children: location.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this);\n      };\n\n      const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return /*#__PURE__*/_jsxDEV(GoogleMap, {\n          defaultZoom: defaultZoom,\n          defaultCenter: defaultCenter,\n          children: /*#__PURE__*/_jsxDEV(MarkerList, {\n            locations: locations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this);\n      }));\n\n      const GMaps = () => {\n        return /*#__PURE__*/_jsxDEV(GoogleMapsComponent, {\n          googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`,\n          loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 27\n          }, this),\n          containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `400px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this),\n          mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: `100%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 23\n          }, this)\n        }, \"map\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }, this);\n      };\n\n      return GMaps();\n    };\n\n    this.renderDetailRoasting = () => {\n      if (this.state.roasting) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Green Bean\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"SKU Green Bean:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Batch Number:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.batch_id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Country Of Origin:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 19\n                  }, this), \" Indonesia\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Origin:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.lokasi_supplier]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Farm:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.nama_supplier]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Elevation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.supplier.elevation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Harvesting Year:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.tgl_panen]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Variety:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.jenis.deskripsi_jenis]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.proses.deskripsi_proses]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Moisture:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.moisture]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Google Map Location:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCard, {\n                  children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                    children: this.renderMaps()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Story Telling:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.storytelling]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Volume:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].product.green_beans.batch.volume]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Photo and Video Culture:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"iframe-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n                    class: \"responsive-iframe\",\n                    src: this.state.roasting[0].product.green_beans.batch.video_culture\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Process Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 19\n                  }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(CImg, {\n                    src: MARKETPLACE_URL + this.state.roasting[0].product.green_beans.thumbnail,\n                    className: \"d-block w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cupping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Curated Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.curated_date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Curated By:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.curated_by]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Fragrance / Aroma:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.fragrance_aroma]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Flavor:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.flavor]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Aftertaste:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.aftertaste]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Acidity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.acidity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Body:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.body]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Cupping Score:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.cupping_score]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Category (options):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 19\n                  }, this), \" \", this.state.cupping.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Cupping Certificate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                  xs: \"10\",\n                  lg: \"7\",\n                  children: [/*#__PURE__*/_jsxDEV(CCol, {\n                    xs: \"12\",\n                    lg: \"7\",\n                    children: /*#__PURE__*/_jsxDEV(CCard, {\n                      children: /*#__PURE__*/_jsxDEV(CCardBody, {\n                        children: /*#__PURE__*/_jsxDEV(CCarousel, {\n                          children: [/*#__PURE__*/_jsxDEV(CCarouselInner, {\n                            children: this.renderCuppingCertificate()\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 551,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(CCarouselControl, {\n                            direction: \"prev\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 554,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(CCarouselControl, {\n                            direction: \"next\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 555,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                    style: {\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Roaster\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"SKU Roaster:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].sku]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roasted Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].tgl_roasting]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roaster Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].roasting_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roaster Profile:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].roasting_profile.roasting_profile]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Volume:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 19\n                  }, this), \" \", this.state.roasting[0].volume]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Roasting Process Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roastingProcessImg.roasting_process,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Product Photo:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 19\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roasting[0].thumbnail,\n                  className: \"d-block w-100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            style: {\n              marginTop: \"40px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"2\",\n              lg: \"5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"QR CODE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1457,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1448,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"10\",\n              lg: \"7\",\n              children: [/*#__PURE__*/_jsxDEV(CCol, {\n                xs: \"12\",\n                lg: \"7\",\n                children: /*#__PURE__*/_jsxDEV(CImg, {\n                  src: MARKETPLACE_URL + this.state.roasting[0].qrcode,\n                  className: \"d-block w-100\",\n                  alt: this.state.roasting[0].product_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1463,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1462,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1470,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Product Not Found...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      status: \"\",\n      roasting_id: 0,\n      product_id: 0,\n      code: \"\",\n      roasting: null,\n      cupping: null,\n      blendedBeans: [],\n      harvestImage: [],\n      certificateRoasting: null,\n      certificateBatch: null,\n      roastingProcessImg: null,\n      isOpen: false,\n      defaultC: {},\n      location: [{\n        lat: 0,\n        lng: 0,\n        label: '.',\n        draggable: false,\n        title: '-'\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    let id = this.props.roastingID;\n    this.setState({\n      roasting_id: id\n    });\n    let code = this.props.code;\n    this.setState({\n      code: code\n    });\n    await UserService.getDetailRoastingProductGuest(code, id).then(response => {\n      if (response.data.roasting[0]) {\n        this.setState({\n          roasting: response.data.roasting,\n          blendedBeans: response.data.blendedBeans,\n          cupping: response.data.roasting_cupping,\n          certificateRoasting: response.data.cuppingCertificate,\n          roastingProcessImg: response.data.roastingProcessImg,\n          location: [{\n            lat: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.lat),\n            lng: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.long),\n            label: 'O',\n            draggable: false,\n            title: response.data.roasting[0].product.green_beans.batch.supplier.lokasi_supplier\n          }],\n          defaultC: {\n            lat: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.lat),\n            lng: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.long)\n          }\n        }); // UserService.getDetailCuppingGuest(code, response.data.roasting[0].cupping_id).then((response) => {\n        //   this.setState({\n        //     cupping: response.data.roasting_cupping,\n        //     certificateRoasting: response.data.cuppingCertificate,\n        //   });\n        // });\n        //Single Origin\n\n        if (response.data.roasting[0].roasting_menu == \"Single\") {\n          //Single Origin Create Product\n          if (response.data.roasting[0].product.productID == null) {\n            this.setState({\n              status: \"Single Origin\",\n              certificateBatch: []\n            });\n          } else {\n            //Single Origin Import Green Beans\n            if (response.data.roasting[0].product.green_beans.batch != null) {\n              this.setState({\n                status: \"Single Origin Import Green Beans\"\n              });\n              let id = response.data.roasting[0].product.green_beans.batch.id;\n              UserService.getDetailBatchGuest(code, id).then(response => {\n                this.setState({\n                  harvestImage: response.data.imageBatch,\n                  certificateBatch: response.data.certificateBatch\n                });\n              });\n            } //Single Origin Import Blended Green Beans\n            else {\n                this.setState({\n                  status: \"Single Origin Import Blended Green Beans\"\n                });\n                let id = response.data.roasting[0].product.productID;\n                UserService.getDetailGreenBeansGuest(code, id).then(response => {\n                  this.setState({\n                    blendedBeans: response.data.blendedBeans\n                  });\n                  response.data.blendedBeans.map(value => {\n                    if (value.batch != null) {\n                      let id = value.batch.batch_id;\n                      UserService.getDetailBatchByBatchIDGuest(code, id).then(response => {\n                        this.setState(prevState => ({\n                          harvestImage: [...prevState.harvestImage, response.data.imageBatch],\n                          certificateBatch: [...prevState.certificateBatch, response.data.certificateBatch]\n                        }));\n                      });\n                    }\n                  });\n                });\n              }\n          }\n        } //Blended Beans\n        else {\n            this.setState({\n              status: \"Blended Beans\",\n              certificateBatch: []\n            });\n            response.data.blendedBeans.map(value => {\n              if (value.product != null) {\n                if (value.product.productID != null) {\n                  if (value.product.green_beans.batch != null) {\n                    let id = value.product.green_beans.batch.id;\n                    UserService.getDetailBatchGuest(code, id).then(response => {\n                      this.setState(prevState => ({\n                        harvestImage: [...prevState.harvestImage, response.data.imageBatch],\n                        certificateBatch: [...prevState.certificateBatch, response.data.certificateBatch]\n                      }));\n                    });\n                  } else {\n                    //Get Blended Beans Import Green Beans\n                    let id = value.product.productID;\n                    UserService.getProdukGuest(code, id).then(response => {\n                      this.setState(prevState => ({\n                        blendedBeans: [...prevState.blendedBeans, response.data.blendedBeans[0], response.data.blendedBeans[1]]\n                      }));\n                    });\n                  }\n                }\n              }\n            });\n          }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"c-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            style: {\n              backgroundColor: \"grey\",\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(CCardBody, {\n              style: {\n                padding: \"5%\"\n              },\n              children: this.renderDetailRoasting()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1497,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MainPage/HalamanUtama.js"],"names":["Fragment","React","Component","UserService","CImg","CCard","CCardBody","CCol","CCarousel","CCarouselInner","CCarouselItem","CCarouselControl","CRow","CNavLink","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","require","config","MARKETPLACE_URL","process","env","REACT_APP_CATALOG_URL","HalamanUtama","constructor","props","renderCarouselImage","menuItems","state","harvestImage","length","map","value2","i","push","images","renderCuppingCertificate","certificateRoasting","certificates","renderBatchCertificate","certificateBatch","renderMaps","apiKey","defaultZoom","defaultCenter","defaultC","locations","location","console","log","MarkerList","index","toString","MarkerWithInfoWindow","setState","isOpen","title","label","GoogleMapsComponent","GMaps","height","renderDetailRoasting","roasting","transform","transformOrigin","writingMode","color","textAlign","product","green_beans","sku","batch","batch_id","supplier","lokasi_supplier","nama_supplier","elevation","tgl_panen","jenis","deskripsi_jenis","proses","deskripsi_proses","moisture","storytelling","volume","video_culture","thumbnail","marginTop","backgroundColor","cupping","curated_date","curated_by","fragrance_aroma","flavor","aftertaste","acidity","body","cupping_score","category","tgl_roasting","roasting_name","roasting_profile","roastingProcessImg","roasting_process","qrcode","product_id","status","roasting_id","code","blendedBeans","lat","lng","draggable","componentDidMount","id","roastingID","getDetailRoastingProductGuest","then","response","data","roasting_cupping","cuppingCertificate","parseFloat","long","roasting_menu","productID","getDetailBatchGuest","imageBatch","getDetailGreenBeansGuest","value","getDetailBatchByBatchIDGuest","prevState","getProdukGuest","render","padding"],"mappings":"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","sourcesContent":["import { Fragment, React, Component } from \"react\";\nimport UserService from \"../../../../services/user.service\";\nimport {\n  CImg,\n  CCard,\n  CCardBody,\n  CCol,\n  CCarousel,\n  CCarouselInner,\n  CCarouselItem,\n  CCarouselControl,\n  CRow,\n  CNavLink,\n} from \"@coreui/react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from 'react-google-maps'\nrequire(\"dotenv\").config();\n\nconst MARKETPLACE_URL = process.env.REACT_APP_CATALOG_URL;\n\nexport default class HalamanUtama extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      roasting_id: 0,\n      product_id: 0,\n      code: \"\",\n      roasting: null,\n      cupping: null,\n      blendedBeans: [],\n      harvestImage: [],\n      certificateRoasting: null,\n      certificateBatch: null,\n      roastingProcessImg: null,\n      isOpen: false,\n      defaultC: {},\n      location: [{\n        lat: 0, \n        lng: 0, \n        label: '.', \n        draggable: false, \n        title: '-'\n      }],\n    };\n  }\n\n  async componentDidMount() {\n    let id = this.props.roastingID;\n    this.setState({ roasting_id: id });\n\n    let code = this.props.code;\n    this.setState({\n      code: code,\n    });\n\n    await UserService.getDetailRoastingProductGuest(code, id).then((response) => {\n      if (response.data.roasting[0]) {\n        this.setState({\n          roasting: response.data.roasting,\n          blendedBeans: response.data.blendedBeans,\n          cupping: response.data.roasting_cupping,\n          certificateRoasting: response.data.cuppingCertificate,\n          roastingProcessImg: response.data.roastingProcessImg,\n          location: [\n            { \n              lat: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.lat),\n              lng: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.long),\n              label: 'O', \n              draggable: false, \n              title: response.data.roasting[0].product.green_beans.batch.supplier.lokasi_supplier \n            }\n          ],\n          defaultC: { lat: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.lat), lng: parseFloat(response.data.roasting[0].product.green_beans.batch.supplier.long) },\n        })\n\n        // UserService.getDetailCuppingGuest(code, response.data.roasting[0].cupping_id).then((response) => {\n        //   this.setState({\n        //     cupping: response.data.roasting_cupping,\n        //     certificateRoasting: response.data.cuppingCertificate,\n        //   });\n        // });\n\n        //Single Origin\n        if (response.data.roasting[0].roasting_menu == \"Single\") {\n          //Single Origin Create Product\n          if (response.data.roasting[0].product.productID == null) {\n            this.setState({\n              status: \"Single Origin\",\n              certificateBatch: [],\n            });\n          } else {\n            //Single Origin Import Green Beans\n            if (response.data.roasting[0].product.green_beans.batch != null) {\n              this.setState({\n                status: \"Single Origin Import Green Beans\",\n              });\n\n              let id = response.data.roasting[0].product.green_beans.batch.id;\n              UserService.getDetailBatchGuest(code, id).then((response) => {\n                this.setState({\n                  harvestImage: response.data.imageBatch,\n                  certificateBatch: response.data.certificateBatch,\n                });\n              });\n            }\n            //Single Origin Import Blended Green Beans\n            else {\n              this.setState({\n                status: \"Single Origin Import Blended Green Beans\",\n              });\n              let id = response.data.roasting[0].product.productID;\n              UserService.getDetailGreenBeansGuest(code, id).then(\n                (response) => {\n                  this.setState({\n                    blendedBeans: response.data.blendedBeans,\n                  });\n                  response.data.blendedBeans.map((value) => {\n                    if (value.batch != null) {\n                      let id = value.batch.batch_id;\n                      UserService.getDetailBatchByBatchIDGuest(code, id).then(\n                        (response) => {\n                          this.setState((prevState) => ({\n                            harvestImage: [\n                              ...prevState.harvestImage,\n                              response.data.imageBatch,\n                            ],\n                            certificateBatch: [\n                              ...prevState.certificateBatch,\n                              response.data.certificateBatch,\n                            ],\n                          }));\n                        }\n                      );\n                    }\n                  });\n                }\n              );\n            }\n          }\n        }\n        //Blended Beans\n        else {\n          this.setState({\n            status: \"Blended Beans\",\n            certificateBatch: [],\n          });\n          response.data.blendedBeans.map((value) => {\n            if (value.product != null) {\n              if (value.product.productID != null) {\n                if (value.product.green_beans.batch != null) {\n                  let id = value.product.green_beans.batch.id;\n                  UserService.getDetailBatchGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      harvestImage: [\n                        ...prevState.harvestImage,\n                        response.data.imageBatch,\n                      ],\n                      certificateBatch: [\n                        ...prevState.certificateBatch,\n                        response.data.certificateBatch,\n                      ],\n                    }));\n                  });\n                } else {\n                  //Get Blended Beans Import Green Beans\n                  let id = value.product.productID;\n                  UserService.getProdukGuest(code, id).then((response) => {\n                    this.setState((prevState) => ({\n                      blendedBeans: [\n                        ...prevState.blendedBeans,\n                        response.data.blendedBeans[0],\n                        response.data.blendedBeans[1],\n                      ],\n                    }));\n                  });\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n\n  }\n\n  renderCarouselImage = () => {\n    let menuItems = [];\n    if (this.state.harvestImage != null) {\n      if (this.state.harvestImage.length >= 1) {\n        this.state.harvestImage &&\n          this.state.harvestImage.map((value2) => {\n            if (value2.length > 1) {\n              for (let i = 0; i < value2.length; i++) {\n                menuItems.push(\n                  <CCarouselItem>\n                    <CImg\n                      src={MARKETPLACE_URL + value2[i].images}\n                      className=\"d-block w-100\"\n                    />\n                  </CCarouselItem>\n                );\n              }\n            } else if (value2.length == 1) {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2[0].images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            } else {\n              menuItems.push(\n                <CCarouselItem>\n                  <CImg\n                    src={MARKETPLACE_URL + value2.images}\n                    className=\"d-block w-100\"\n                  />\n                </CCarouselItem>\n              );\n            }\n          });\n      }\n    }\n    return menuItems;\n  };\n\n  renderCuppingCertificate = () => {\n    let menuItems = [];\n\n    if (this.state.certificateRoasting) {\n      for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n        menuItems.push(\n          <CCarouselItem>\n            <CImg\n              src={\n                MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n              }\n              className=\"d-block w-100\"\n            />\n          </CCarouselItem>\n        );\n      }\n    }\n\n    if (this.state.certificateRoasting) {\n      return menuItems;\n    }\n  };\n\n  renderBatchCertificate = () => {\n    let menuItems = [];\n    if (this.state.certificateBatch) {\n      for (let i = 0; i < this.state.certificateBatch.length; i++) {\n        menuItems.push(\n          <CCarouselItem>\n            <CImg\n              src={\n                MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n              }\n              className=\"d-block w-100\"\n            />\n          </CCarouselItem>\n        );\n      }\n    }\n\n    if (this.state.certificateBatch) {\n      return menuItems;\n    }\n  }\n\n  renderMaps = () => {\n    const apiKey = 'AIzaSyASyYRBZmULmrmw_P9kgr7_266OhFNinPA'\n\n    const defaultZoom = 11;\n    const defaultCenter = this.state.defaultC;\n    const locations = this.state.location;\n\n    console.log('cek Locations', locations);\n\n    const MarkerList = () => {\n      return locations.map((location, index) => {\n        return (\n          <MarkerWithInfoWindow key={index.toString()} location={location}/>\n        )\n      })\n    }\n\n    const MarkerWithInfoWindow = ({location}) => {\n\n      return (\n        <Marker \n          onClick={() => this.setState({isOpen: !this.state.isOpen})} \n          position={location} \n          title={location.title} \n          label={location.label}\n        >\n          { this.state.isOpen &&\n            <InfoWindow onCloseClick={() => this.setState({ isOpen: false })}>\n              <CNavLink >{location.title}</CNavLink>\n            </InfoWindow>\n          }\n        </Marker>\n      )\n    }\n\n    const GoogleMapsComponent = withScriptjs(withGoogleMap(() => {\n        return (\n          <GoogleMap defaultZoom={defaultZoom} defaultCenter={defaultCenter}>\n            {<MarkerList locations={locations}/>}\n          </GoogleMap>\n        )\n      }\n    ))\n\n    const GMaps = () => {\n      return (\n        <GoogleMapsComponent\n          key=\"map\"\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${apiKey}`}\n          loadingElement={<div style={{height: `100%`}}/>}\n          containerElement={<div style={{height: `400px`}}/>}\n          mapElement={<div style={{height: `100%`}}/>}\n        />\n      )\n    }\n\n    return GMaps();\n  }\n\n  // renderCarouselCertificate = () => {\n  //   let menuItems = [];\n  //   if (this.state.certificateRoasting != null) {\n  //     for (let i = 0; i < this.state.certificateRoasting.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateRoasting[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch != null) {\n  //     for (let i = 0; i < this.state.certificateBatch.length; i++) {\n  //       menuItems.push(\n  //         <CCarouselItem>\n  //           <CImg\n  //             src={\n  //               MARKETPLACE_URL + this.state.certificateBatch[i].certificates\n  //             }\n  //             className=\"d-block w-100\"\n  //           />\n  //         </CCarouselItem>\n  //       );\n  //     }\n  //   }\n  //   if (this.state.certificateBatch && this.state.certificateRoasting) {\n  //     return menuItems;\n  //   }\n  // };\n\n  renderDetailRoasting = () => {\n    if (this.state.roasting) {\n      return (\n        <Fragment>\n\n          {/* data green bean */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Green Bean</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Green Bean:</strong> {this.state.roasting[0].product.green_beans.sku}\n                </p>\n                <p>\n                  <strong>Batch Number:</strong> {this.state.roasting[0].product.green_beans.batch.batch_id}\n                </p>\n                <p>\n                  <strong>Country Of Origin:</strong> Indonesia\n                </p>\n                <p>\n                  <strong>Origin:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.lokasi_supplier}\n                </p>\n                <p>\n                  <strong>Farm:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.nama_supplier}\n                </p>\n                <p>\n                  <strong>Elevation:</strong> {this.state.roasting[0].product.green_beans.batch.supplier.elevation}\n                </p>\n                <p>\n                  <strong>Harvesting Year:</strong> {this.state.roasting[0].product.green_beans.batch.tgl_panen}\n                </p>\n                <p>\n                  <strong>Variety:</strong> {this.state.roasting[0].product.green_beans.batch.jenis.deskripsi_jenis}\n                </p>\n                <p>\n                  <strong>Process:</strong> {this.state.roasting[0].product.green_beans.batch.proses.deskripsi_proses}\n                </p>\n                <p>\n                  <strong>Moisture:</strong> {this.state.roasting[0].product.green_beans.batch.moisture}\n                </p>\n                <p>\n                  <strong>Google Map Location:</strong> \n                </p>\n                <CCard>\n                  <CCardBody>\n                    {this.renderMaps()}\n                  </CCardBody>\n                </CCard>\n                <p>\n                  <strong>Story Telling:</strong> {this.state.roasting[0].product.green_beans.batch.storytelling}\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.roasting[0].product.green_beans.batch.volume}\n                </p>\n                <p>\n                  <strong>Photo and Video Culture:</strong> {\" \"}\n                </p>\n                <div class=\"iframe-container\">\n                  <iframe class=\"responsive-iframe\"\n                    src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                  </iframe>\n                  <p>{\" \"}</p>\n                </div>\n                <p>\n                  <strong>Process Photo:</strong> {\" \"}\n                  <CImg\n                    src={MARKETPLACE_URL + this.state.roasting[0].product.green_beans.thumbnail}\n                    className=\"d-block w-100\"\n                  />\n                </p>\n                {/* <p>\n                  <strong>Certification Photos:</strong> {\" \"}\n                </p>\n                <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderBatchCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol> \n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol>*/}\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data green bean */}\n\n\n          {/* data cupping */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Cupping</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>Curated Date:</strong> {this.state.cupping.curated_date}\n                </p>\n                <p>\n                  <strong>Curated By:</strong> {this.state.cupping.curated_by}\n                </p>\n                <p>\n                  <strong>Fragrance / Aroma:</strong> {this.state.cupping.fragrance_aroma}\n                </p>\n                <p>\n                  <strong>Flavor:</strong> {this.state.cupping.flavor}\n                </p>\n                <p>\n                  <strong>Aftertaste:</strong> {this.state.cupping.aftertaste}\n                </p>\n                <p>\n                  <strong>Acidity:</strong> {this.state.cupping.acidity}\n                </p>\n                <p>\n                  <strong>Body:</strong> {this.state.cupping.body}\n                </p>\n                <p>\n                  <strong>Cupping Score:</strong> {this.state.cupping.cupping_score}\n                </p>\n                <p>\n                  <strong>Category (options):</strong> {this.state.cupping.category}\n                </p>\n                <p>\n                  <strong>Cupping Certificate:</strong> {\" \"}\n                </p>\n                <CCol xs=\"10\" lg=\"7\">\n                  <CCol xs=\"12\" lg=\"7\">\n                    <CCard>\n                      <CCardBody>\n                        <CCarousel>\n                          <CCarouselInner>\n                            {this.renderCuppingCertificate()}\n                          </CCarouselInner>\n                          <CCarouselControl direction=\"prev\" />\n                          <CCarouselControl direction=\"next\" />\n                        </CCarousel>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <hr\n                    style={{\n                      marginTop: \"60px\",\n                      color: \"#178d88\",\n                      backgroundColor: \"#178d88\",\n                      height: 2,\n                    }}\n                  />\n                </CCol>\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data cupping */}\n\n          {/* data roaster */}\n          <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>Roaster</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <Fragment>\n                <p>\n                  <strong>SKU Roaster:</strong> {this.state.roasting[0].sku}\n                </p>\n                <p>\n                  <strong>Roasted Date:</strong> {this.state.roasting[0].tgl_roasting}\n                </p>\n                <p>\n                  <strong>Roaster Name:</strong> {this.state.roasting[0].roasting_name}\n                </p>\n                <p>\n                  <strong>Roaster Profile:</strong> {this.state.roasting[0].roasting_profile.roasting_profile}\n                </p>\n                <p>\n                  <strong>Volume:</strong> {this.state.roasting[0].volume}\n                </p>\n                <p>\n                  <strong>Roasting Process Photo:</strong> {\" \"}\n                </p>\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roastingProcessImg.roasting_process}\n                  className=\"d-block w-100\"\n                />\n                <p>\n                  <strong>Product Photo:</strong> {\" \"}\n                </p>\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                  className=\"d-block w-100\"\n                />\n              </Fragment>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n          {/* end data roaster */}\n\n          {/* <CRow>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 100%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>ROAST</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.supplier\n                            .lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {this.state.roasting[0].product.supplier.elevation}{\" \"}\n                        {this.state.roasting[0].product.supplier.unit.nama_unit}\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date:</strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      <p>\n                        <strong>Farm:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.lokasi_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Elevation:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.elevation\n                        }{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.unit.nama_unit\n                        }\n                      </p>\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Farm {i}:</strong>{\" \"}\n                                {value.batch.supplier.lokasi_supplier}\n                              </p>\n                              <p>\n                                <strong>Elevation {i}:</strong>{\" \"}\n                                {value.batch.supplier.elevation}{\" \"}\n                                {value.batch.supplier.unit.nama_unit}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                      <p>\n                        <strong>Flavor Note:</strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity:</strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity:</strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Product ID:</strong> {this.state.roasting[0].id}\n                      </p>\n                      <p>\n                        <strong>SKU:</strong> {this.state.roasting[0].sku}\n                      </p>\n                      <p>\n                        <strong>Product Name:</strong>{\" \"}\n                        {this.state.roasting[0].roasting_name}\n                      </p>\n                      <p>\n                        <strong>Country of Origin:</strong> Indonesia\n                      </p>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.product.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.product.supplier.elevation}{\" \"}\n                                      {value.product.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            } else if (value.batch != null) {\n                              if (value.batch.batch_id != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {value.batch.supplier.lokasi_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {value.batch.supplier.elevation}{\" \"}\n                                      {value.batch.supplier.unit.nama_unit}\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Farm {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .lokasi_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Elevation {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .elevation\n                                      }{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .unit.nama_unit\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          } else {\n                            if (value.batch != null) {\n                              i++;\n                              return (\n                                <Fragment>\n                                  <p>\n                                    <strong>Farm {i}:</strong>{\" \"}\n                                    {value.batch.supplier.lokasi_supplier}\n                                  </p>\n                                  <p>\n                                    <strong>Elevation {i}:</strong>{\" \"}\n                                    {value.batch.supplier.elevation}{\" \"}\n                                    {value.batch.supplier.unit.nama_unit}\n                                  </p>\n                                </Fragment>\n                              );\n                            }\n                          }\n                        })}\n                      <p>\n                        <strong>Flavor Note: </strong>{\" \"}\n                        {this.state.roasting[0].flavor_note}\n                      </p>\n                      <p>\n                        <strong>Acidity: </strong>{\" \"}\n                        {this.state.roasting[0].acidity}\n                      </p>\n                      <p>\n                        <strong>Intensity: </strong>{\" \"}\n                        {this.state.roasting[0].intensity}\n                      </p>\n                      <p>\n                        <strong>Roasted Date: </strong>{\" \"}\n                        {this.state.roasting[0].tgl_roasting}\n                      </p>\n                    </Fragment>\n                  );\n                }\n              })()}\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.roasting[0].thumbnail != null) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 48%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CImg\n                        src={MARKETPLACE_URL + this.state.roasting[0].thumbnail}\n                        className=\"d-block w-100\"\n                        alt={this.state.roasting.name}\n                      />\n                    </CCol>\n\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 70%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>BATCH</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              {(() => {\n                if (this.state.status == \"Single Origin\") {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong> -\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong> -\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.jenis.nama_jenis}\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {this.state.roasting[0].product.proses.nama_proses}\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {this.state.batch.supplier.nama_supplier}\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div class=\"iframe-container\">\n                        <iframe class=\"responsive-iframe\"\n                          src={this.state.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong> -\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status == \"Single Origin Import Green Beans\"\n                ) {\n                  return (\n                    <Fragment>\n                      <p>\n                        <strong>Batch ID:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .batch_id\n                        }\n                      </p>\n                      <p>\n                        <strong>Harvesting Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .tgl_panen\n                        }\n                      </p>\n                      <p>\n                        <strong>Variety Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch.jenis\n                            .nama_jenis\n                        }\n                      </p>\n                      <p>\n                        <strong>Process Name:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .proses.nama_proses\n                        }\n                      </p>\n                      <p>\n                        <strong>Moisture:</strong>{\" \"}\n                        {this.state.roasting[0].product.green_beans.batch.moisture}\n                      </p>\n                      <p>\n                        <strong>Processor:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .supplier.nama_supplier\n                        }\n                      </p>\n                      <p>\n                        <strong>Video Culture:</strong>{\" \"}\n                      </p>\n                      <div class=\"iframe-container\">\n                        <iframe class=\"responsive-iframe\"\n                          src={this.state.roasting[0].product.green_beans.batch.video_culture}>\n                        </iframe>\n                      </div>\n                      <p></p>\n                      <p>\n                        <strong>Storytelling:</strong>\n                      </p>\n                      <p>{this.state.roasting[0].product.green_beans.batch.storytelling}</p>\n                      <p>\n                        <strong>Processing Year:</strong>{\" \"}\n                        {\n                          this.state.roasting[0].product.green_beans.batch\n                            .created_at\n                        }\n                      </p>\n                    </Fragment>\n                  );\n                } else if (\n                  this.state.status ==\n                  \"Single Origin Import Blended Green Beans\"\n                ) {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          i++;\n                          return (\n                            <Fragment>\n                              <p>\n                                <strong>Batch ID {i}:</strong>{\" \"}\n                                {value.batch.batch_id}\n                              </p>\n                              <p>\n                                <strong>Harvesting Year {i}:</strong>{\" \"}\n                                {value.batch.tgl_panen}\n                              </p>\n                              <p>\n                                <strong>Variety Name {i}:</strong>{\" \"}\n                                {value.batch.jenis.nama_jenis}\n                              </p>\n                              <p>\n                                <strong>Process Name {i}:</strong>{\" \"}\n                                {value.batch.proses.nama_proses}\n                              </p>\n                              <p>\n                                <strong>Moisture:</strong>{\" \"}\n                                {value.batch.moisture}\n                              </p>\n                              <p>\n                                <strong>Processor {i}:</strong>{\" \"}\n                                {value.batch.supplier.nama_supplier}\n                              </p>\n                              <p>\n                                <strong>Video Culture:</strong>{\" \"}\n                              </p>\n                              <div class=\"iframe-container\">\n                                <iframe class=\"responsive-iframe\"\n                                  src={value.batch.video_culture}>\n                                </iframe>\n                              </div>\n                              <p></p>\n                              <p>\n                                <strong>Storytelling:</strong>\n                              </p>\n                              <p>{value.batch.storytelling}</p>\n                              <p>\n                                <strong>Processing Year {i}:</strong>{\" \"}\n                                {value.created_at}\n                              </p>\n                            </Fragment>\n                          );\n                        })}\n                    </Fragment>\n                  );\n                } else if (this.state.status == \"Blended Beans\") {\n                  let i = 0;\n                  return (\n                    <Fragment>\n                      {this.state.blendedBeans &&\n                        this.state.blendedBeans.map((value) => {\n                          if (value.product != null) {\n                            if (value.product.productID == null) {\n                              if (value.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {value.batch.tgl_panen}\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.batch.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.batch.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.batch.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div class=\"iframe-container\">\n                                      <iframe class=\"responsive-iframe\"\n                                        src={value.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {value.created_at}\n                                    </p>\n                                  </Fragment>\n                                );\n                              } else {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong> -\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {value.product.jenis.nama_jenis}\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {value.product.proses.nama_proses}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {value.product.supplier.nama_supplier}\n                                    </p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong> -\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                            //Blended Beans Import Beans\n                            else {\n                              if (value.product.green_beans.batch != null) {\n                                i++;\n                                return (\n                                  <Fragment>\n                                    <p>\n                                      <strong>Batch ID {i}:</strong>{\" \"}\n                                      {value.product.green_beans.batch.batch_id}\n                                    </p>\n                                    <p>\n                                      <strong>Harvesting Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .tgl_panen\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Variety Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.jenis\n                                          .nama_jenis\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Process Name {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.proses\n                                          .nama_proses\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Moisture:</strong>{\" \"}\n                                      {value.product.green_beans.batch.moisture}\n                                    </p>\n                                    <p>\n                                      <strong>Processor {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch.supplier\n                                          .nama_supplier\n                                      }\n                                    </p>\n                                    <p>\n                                      <strong>Video Culture:</strong>{\" \"}\n                                    </p>\n                                    <div class=\"iframe-container\">\n                                      <iframe class=\"responsive-iframe\"\n                                        src={value.product.green_beans.batch.video_culture}>\n                                      </iframe>\n                                    </div>\n                                    <p></p>\n                                    <p>\n                                      <strong>Storytelling:</strong>\n                                    </p>\n                                    <p>{value.product.green_beans.batch.storytelling}</p>\n                                    <p>\n                                      <strong>Processing Year {i}:</strong>{\" \"}\n                                      {\n                                        value.product.green_beans.batch\n                                          .created_at\n                                      }\n                                    </p>\n                                  </Fragment>\n                                );\n                              }\n                            }\n                          }\n                        })}\n                    </Fragment>\n                  );\n                }\n              })()}\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow> */}\n\n          {/* {(() => {\n            if (this.state.harvestImage.length >= 1) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 70%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>IMAGE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselImage()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          {/* {(() => {\n            if (this.state.certificateRoasting || this.state.certificateBatch) {\n              return (\n                <CRow style={{ marginTop: \"40px\" }}>\n                  <CCol xs=\"2\" lg=\"5\">\n                    <h1\n                      style={{\n                        transform: \"rotate(180deg)\",\n                        transformOrigin: \"20% 55%\",\n                        writingMode: \"vertical-lr\",\n                        color: \"darkOrange\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <strong>CERTIFICATE</strong>\n                    </h1>\n                  </CCol>\n                  <CCol xs=\"10\" lg=\"7\">\n                    <CCol xs=\"12\" lg=\"7\">\n                      <CCard>\n                        <CCardBody>\n                          <CCarousel>\n                            <CCarouselInner>\n                              {this.renderCarouselCertificate()}\n                            </CCarouselInner>\n                            <CCarouselControl direction=\"prev\" />\n                            <CCarouselControl direction=\"next\" />\n                          </CCarousel>\n                        </CCardBody>\n                      </CCard>\n                    </CCol>\n                    <hr\n                      style={{\n                        marginTop: \"60px\",\n                        color: \"#178d88\",\n                        backgroundColor: \"#178d88\",\n                        height: 2,\n                      }}\n                    />\n                  </CCol>\n                </CRow>\n              );\n            }\n          })()} */}\n\n          <CRow style={{ marginTop: \"40px\" }}>\n            <CCol xs=\"2\" lg=\"5\">\n              <h1\n                style={{\n                  transform: \"rotate(180deg)\",\n                  transformOrigin: \"20% 55%\",\n                  writingMode: \"vertical-lr\",\n                  color: \"darkOrange\",\n                  textAlign: \"center\",\n                }}\n              >\n                <strong>QR CODE</strong>\n              </h1>\n            </CCol>\n\n            <CCol xs=\"10\" lg=\"7\">\n              <CCol xs=\"12\" lg=\"7\">\n                <CImg\n                  src={MARKETPLACE_URL + this.state.roasting[0].qrcode}\n                  className=\"d-block w-100\"\n                  alt={this.state.roasting[0].product_id}\n                />\n              </CCol>\n\n              <hr\n                style={{\n                  marginTop: \"60px\",\n                  color: \"#178d88\",\n                  backgroundColor: \"#178d88\",\n                  height: 2,\n                }}\n              />\n            </CCol>\n          </CRow>\n        </Fragment>\n      );\n    } else {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h4>Product Not Found...</h4>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CCard style={{ backgroundColor: \"grey\", color: \"white\" }}>\n              <CCardBody style={{ padding: \"5%\" }}>\n                {this.renderDetailRoasting()}\n              </CCardBody>\n            </CCard>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}