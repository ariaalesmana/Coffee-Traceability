{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatch.js\";\nimport { Fragment, Component } from \"react\";\nimport DaftarBatchForm from \"./DaftarBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DaftarBatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFileChange = file => {\n      this.setState({\n        imageFile: file\n      });\n    };\n\n    this.onCertificateChange = file => {\n      this.setState({\n        certificateFile: file\n      });\n    };\n\n    this.handleSubmit = values => {\n      const formData = new FormData();\n      const batchID = this.handleIDBatch();\n      formData.append(\"batch_id\", batchID);\n\n      if (values.biji_id != undefined && values.jenis_id != undefined && values.biji_id != undefined && values.jenis_id != undefined && values.proses_id != undefined && values.supplier_id != undefined && values.tgl_panen != undefined && values.volume != undefined && //Form Baru\n      values.moisture != undefined && values.videoCulture != undefined && values.storytelling != undefined && this.state.imageFile != \"\" && this.state.certificateFile != \"\") {\n        formData.append(\"biji_id\", values.biji_id);\n        formData.append(\"jenis_id\", values.jenis_id);\n        formData.append(\"proses_id\", values.proses_id);\n        formData.append(\"supplier_id\", values.supplier_id);\n        formData.append(\"tgl_panen\", values.tgl_panen);\n        formData.append(\"volume\", values.volume); //Form Baru\n\n        formData.append(\"moisture\", values.moisture);\n        formData.append(\"video_culture\", values.videoCulture);\n        formData.append(\"storytelling\", values.storytelling);\n\n        for (let i = 0; i < this.state.imageFile.length; i++) {\n          formData.append(\"files[]\", this.state.imageFile[i]);\n        }\n\n        for (let i = 0; i < this.state.certificateFile.length; i++) {\n          formData.append(\"certificate[]\", this.state.certificateFile[i]);\n        }\n\n        UserService.addBatch(formData).then(showResults(\"Data has been added\"));\n      } else {\n        showResults(\"Please fill all the fields\");\n      }\n\n      UserService.getListBatch().then(response => {\n        this.setState({\n          content: response.data.batch\n        });\n      });\n    };\n\n    this.handleIDBatch = () => {\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear().toString().substr(-2);\n\n      if (date < 10) {\n        date = \"0\" + date;\n      }\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      let increment = 1;\n      let incrementalResultIDBatch = \"0\" + increment;\n      let resultIDBatch = \"\" + year + month + // date + \n      incrementalResultIDBatch;\n\n      for (let i = 0; i < this.state.content.length; i++) {\n        if (this.state.content[i].batch_id == resultIDBatch) {\n          increment += 1;\n        }\n\n        if (increment < 10) {\n          incrementalResultIDBatch = \"0\" + increment;\n        } else {\n          incrementalResultIDBatch = increment;\n        }\n\n        resultIDBatch = \"\" + year + month + // date + \n        incrementalResultIDBatch;\n      }\n\n      return resultIDBatch;\n    };\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: []\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListBatch().then(response => {\n      this.setState({\n        content: response.data.batch\n      });\n    });\n  }\n\n  render() {\n    this.handleIDBatch();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DaftarBatchForm, {\n        onSubmit: this.handleSubmit,\n        onSelectImage: this.onFileChange,\n        onSelectCertificate: this.onCertificateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/Batch/DaftarBatch.js"],"names":["Fragment","Component","DaftarBatchForm","UserService","showResults","DaftarBatch","constructor","props","onFileChange","file","setState","imageFile","onCertificateChange","certificateFile","handleSubmit","values","formData","FormData","batchID","handleIDBatch","append","biji_id","undefined","jenis_id","proses_id","supplier_id","tgl_panen","volume","moisture","videoCulture","storytelling","state","i","length","addBatch","then","getListBatch","response","content","data","batch","date","Date","getDate","month","getMonth","year","getFullYear","toString","substr","increment","incrementalResultIDBatch","resultIDBatch","batch_id","componentDidMount","render"],"mappings":"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","sourcesContent":["import { Fragment, Component } from \"react\";\nimport DaftarBatchForm from \"./DaftarBatchForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\n\nexport default class DaftarBatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n    };\n  }\n\n  componentDidMount() {\n    UserService.getListBatch().then((response) => {\n      this.setState({\n        content: response.data.batch,\n      });\n    });\n  }\n\n  onFileChange = (file) => {\n    this.setState({\n      imageFile: file,\n    });\n  };\n\n  onCertificateChange = (file) => {\n    this.setState({\n      certificateFile: file,\n    });\n  };\n\n  handleSubmit = (values) => {\n    const formData = new FormData();\n    const batchID = this.handleIDBatch();\n    formData.append(\"batch_id\", batchID);\n\n    if (\n      values.biji_id != undefined &&\n      values.jenis_id != undefined &&\n      values.biji_id != undefined &&\n      values.jenis_id != undefined &&\n      values.proses_id != undefined &&\n      values.supplier_id != undefined &&\n      values.tgl_panen != undefined &&\n      values.volume != undefined &&\n\n      //Form Baru\n      values.moisture != undefined &&\n      values.videoCulture != undefined &&\n      values.storytelling != undefined &&\n      \n      this.state.imageFile != \"\" &&\n      this.state.certificateFile != \"\"\n    ) {\n      formData.append(\"biji_id\", values.biji_id);\n      formData.append(\"jenis_id\", values.jenis_id);\n      formData.append(\"proses_id\", values.proses_id);\n      formData.append(\"supplier_id\", values.supplier_id);\n      formData.append(\"tgl_panen\", values.tgl_panen);\n      formData.append(\"volume\", values.volume);\n\n      //Form Baru\n      formData.append(\"moisture\", values.moisture);\n      formData.append(\"video_culture\", values.videoCulture);\n      formData.append(\"storytelling\", values.storytelling);\n\n      for (let i = 0; i < this.state.imageFile.length; i++) {\n        formData.append(\"files[]\", this.state.imageFile[i]);\n      }\n\n      for (let i = 0; i < this.state.certificateFile.length; i++) {\n        formData.append(\"certificate[]\", this.state.certificateFile[i]);\n      }\n\n      UserService.addBatch(formData).then(showResults(\"Data has been added\"));\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n\n    UserService.getListBatch().then((response) => {\n      this.setState({\n        content: response.data.batch,\n      });\n    });\n  };\n\n  handleIDBatch = () => {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear().toString().substr(-2);\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let increment = 1;\n    let incrementalResultIDBatch = \"0\" + increment;\n    let resultIDBatch = \"\" + year + month + \n    // date + \n    incrementalResultIDBatch;\n\n    for (let i = 0; i < this.state.content.length; i++) {\n      if (this.state.content[i].batch_id == resultIDBatch) {\n        increment += 1;\n      }\n      if (increment < 10) {\n        incrementalResultIDBatch = \"0\" + increment;\n      }\n      else{\n        incrementalResultIDBatch = increment;\n      }\n      resultIDBatch = \"\" + year + month + \n      // date + \n      incrementalResultIDBatch;\n    }\n\n    return resultIDBatch;\n  };\n\n  render() {\n    this.handleIDBatch();\n    return (\n      <Fragment>\n        <DaftarBatchForm\n          onSubmit={this.handleSubmit}\n          onSelectImage={this.onFileChange}\n          onSelectCertificate={this.onCertificateChange}\n        />\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}