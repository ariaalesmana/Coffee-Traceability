{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoasting.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport AddRoastingForm from \"./AddRoastingForm\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport QRcode from \"qrcode.react\";\nimport { sha256 } from \"js-sha256\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../../abi/abi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst AddRoasting = props => {\n  _s();\n\n  const provider = new HDWalletProvider(process.env.REACT_APP_MNEMONIC, \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n  const web3 = new Web3(provider);\n  provider.engine.stop();\n  const contractAddress = \"0x061Bca64852219aA03a9615ef66Dc301e075F6d9\";\n  const code = props.code;\n  const [qr, setQr] = useState(\"test\");\n  const [roastingFile, setRoastingFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    getData();\n    handleIDBatch();\n  }, []);\n\n  const getData = () => {\n    UserService.getListRoastingProductsAsc().then(response => {\n      setContent(response.data.roasting);\n    });\n  };\n\n  const getWallet = async () => {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        alert(\"An error occurred: \" + err);\n      } else if (accounts.length == 0) {\n        alert(\"User is not logged in to MetaMask\");\n      } else {\n        setAccount(accounts[0]);\n      }\n    });\n  };\n\n  const handleChange = value => {\n    setQr(value);\n  };\n\n  const onFileChangeGambar = file => {\n    imageFileGambar(file);\n  };\n\n  const downloadQR = roasting_id => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + roasting_id + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const onRoastingChange = file => {\n    setRoastingFile(file);\n  };\n\n  useEffect(() => {\n    getWallet();\n  }, []);\n\n  const handleSubmit = async values => {\n    if (values.roastingMenu && values.roastingProfile && values.roastingName && values.flavorNote && values.acidity && values.intensity && values.weight && roastingFile != \"\" && filesGambar != \"\") {\n      // console.log(process.env.REACT_APP_MNEMONIC);\n      // console.log(\"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n      const formData = new FormData();\n      const batchID = handleIDBatch();\n      formData.append(\"roasting_batch_id\", batchID);\n\n      if (values.roastingMenu == \"Single\") {\n        formData.append(\"bean_id\", values.bean);\n      }\n\n      if (values.roastingMenu == \"Blended\") {\n        formData.append(\"beans\", JSON.stringify(values.beans));\n      }\n\n      formData.append(\"roasting_profile_id\", values.roastingProfile);\n      formData.append(\"cupping_id\", values.roastingCupping);\n      formData.append(\"roasting_name\", values.roastingName);\n      formData.append(\"roastingMenu\", values.roastingMenu);\n      formData.append(\"flavor_note\", values.flavorNote);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"intensity\", values.intensity);\n      formData.append(\"weight\", values.weight);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"tgl_roasting\", values.tgl_roasting);\n      formData.append(\"roaster_name\", values.roaster_name);\n      formData.append(\"roastingFile[]\", roastingFile); // for (let i = 0; i < roastingFile.length; i++) {\n      //   formData.append(\"roastingFile[]\", roastingFile[i]);\n      // }\n\n      formData.append(\"files_gambar\", filesGambar);\n      formData.append(\"fileName_gambar\", filesGambar.name);\n      UserService.addRoastingProduct(formData).then(async response => {\n        const roasting_id = response.data.roasting.id;\n        const linkQRCode = process.env.REACT_APP_PROD_URL + \"detailRoasting/\" + code + \"/\" + roasting_id;\n        await handleChange(linkQRCode);\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise(resolve => canvas.toBlob(resolve, \"image/png\"));\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + roasting_id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + roasting_id + \".png\");\n        downloadQR(roasting_id);\n        UserService.pushQRCodeImageRoasting(roasting_id, formDataQR);\n        UserService.getDetailRoastingProduct(roasting_id).then(async response => {\n          console.log(\"data get setelah submit\", response.data);\n          var object = response.data; // formData.forEach(function (value, key) {\n          //   object[key] = value;\n          // });\n\n          var json = JSON.stringify(object); // console.log(json);\n\n          console.log(sha256(json)); // console.log(contractAddress);\n\n          console.log(account);\n          let date_ob = new Date();\n          let date = (\"0\" + date_ob.getDate()).slice(-2);\n          let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n          let year = date_ob.getFullYear();\n          let hours = date_ob.getHours();\n          let minutes = date_ob.getMinutes();\n          let seconds = date_ob.getSeconds();\n          console.log(year + \"-\" + month + \"-\" + date); //Blockchain Function\n          // const storageContract = new web3.eth.Contract(\n          //   AddProduct,\n          //   contractAddress\n          // );\n          // // const gas = await storageContract.methods\n          // // .tambahProduct(\n          // //   sha256(json),\n          // //   year + \"-\" + month + \"-\" + date\n          // // )\n          // // .estimateGas();\n          // var post = await storageContract.methods\n          //   .tambahProduct(sha256(json), year + \"-\" + month + \"-\" + date)\n          //   .send(\n          //     {\n          //       from: account,\n          //       // gas,\n          //     },\n          //     (error, transactionHash) => {\n          //       console.log(transactionHash);\n          //     }\n          //   );\n          // console.log(post);\n          // queued post api marketplace kk\n\n          var arrFiles = [];\n          var formdata = new FormData();\n          formdata.append(\"code\", code);\n          formdata.append(\"roasted_id\", roasting_id);\n          formdata.append(\"category_id\", 115);\n          formdata.append(\"name\", values.roastingName);\n\n          if (values.roastingMenu === 'Single') {\n            formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n          } else {\n            formdata.append(\"description\", json);\n          }\n\n          formdata.append(\"indonesia_price\", 1000);\n          formdata.append(\"usd_price\", 10);\n          formdata.append(\"aed_price\", 50);\n          formdata.append(\"weight\", values.weight);\n\n          for (let i = 0; i < roastingFile.length + 2; i++) {\n            arrFiles.push(roastingFile[i]);\n          }\n\n          arrFiles.push(filesGambar);\n          arrFiles.push(imageBlob);\n\n          for (let i = 0; i < arrFiles.length; i++) {\n            if (i + 1 === arrFiles.length) {\n              formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\");\n            } else {\n              formdata.append('image[]', arrFiles[i]);\n            }\n          }\n\n          UserService.apiPostToMarketpalceKK(formdata).then(async response => {\n            console.log('cek ini mal', response);\n          }); //Postman Kopi Ketjil (sekarang di hanlde di backend laravel)\n          // try{\n          //   var myHeaders = new Headers();\n          //   myHeaders.append(\"x-api-key\", \"kk-blockchain-2021-dev\");\n          //   var arrFiles = [];\n          //   var formdata = new FormData();\n          //   formdata.append(\"category_id\", \"115\");\n          //   formdata.append(\"name\", values.roastingName);\n          //   if(values.roastingMenu === 'Single') {\n          //     formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n          //   } else {\n          //     formdata.append(\"description\", json);\n          //   }\n          //   formdata.append(\"indonesia_price\", \"1000\");\n          //   formdata.append(\"usd_price\", \"10\");\n          //   formdata.append(\"aed_price\", \"50\");\n          //   for (let i = 0; i < (roastingFile.length + 2); i++) {\n          //     arrFiles.push(roastingFile[i]);\n          //   }\n          //   arrFiles.push(filesGambar)\n          //   arrFiles.push(imageBlob)\n          //   for (let i = 0; i < arrFiles.length; i++) {\n          //     if((i+1) === arrFiles.length) {\n          //       formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\")\n          //     } else {\n          //       formdata.append('image[]', arrFiles[i])\n          //     }\n          //   }\n          //   var requestOptions = {\n          //     method: \"POST\",\n          //     headers: myHeaders,\n          //     body: formdata,\n          //     redirect: \"follow\",\n          //   };\n          //   fetch(\n          //     \"https://api-staging.kopiketjil.com/api/kopiketjil/insert-product\",\n          //     requestOptions\n          //   )\n          //     .then((response) => showResults(`Response API, ${response}`))\n          //     .then((result) => console.log('result API',result))\n          //     .catch((error) => showResults(`Response API, ${error}`));\n          // } catch (e) {\n          //   showResults(`Error Post To Kopi Ketjil, ${e}`);\n          // }\n        });\n      });\n      showResults(\"Data has been added\");\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const handleIDBatch = () => {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear().toString().substr(-2);\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let increment = 1;\n    let incrementalResultIDBatch = \"0\" + increment;\n    let resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n\n    for (let i = 0; i < content.length; i++) {\n      if (content[i].roasting_batch_id == resultIDBatch) {\n        increment += 1;\n\n        if (increment < 10) {\n          incrementalResultIDBatch = \"0\" + increment;\n        } else {\n          incrementalResultIDBatch = increment;\n        }\n\n        resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n      }\n    }\n\n    return resultIDBatch;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddRoastingForm, {\n      onSubmit: handleSubmit,\n      onSelectRoasting: onRoastingChange,\n      onSelectImageGambar: onFileChangeGambar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        visibility: \"hidden\"\n      },\n      children: qr ? /*#__PURE__*/_jsxDEV(QRcode, {\n        id: \"myqr\",\n        value: qr,\n        size: 320,\n        includeMargin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No QR code preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddRoasting, \"W3IBzqU7J9aU+BOYVCfGM0DVgao=\");\n\n_c = AddRoasting;\nexport default AddRoasting;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoasting\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/Roasting/AddRoasting.js"],"names":["Fragment","useState","useEffect","AddRoastingForm","showResults","UserService","QRcode","sha256","Web3","AddProduct","require","config","HDWalletProvider","AddRoasting","props","provider","process","env","REACT_APP_MNEMONIC","REACT_APP_INFURA_PROJECT_ID","web3","engine","stop","contractAddress","code","qr","setQr","roastingFile","setRoastingFile","filesGambar","imageFileGambar","account","setAccount","content","setContent","getData","handleIDBatch","getListRoastingProductsAsc","then","response","data","roasting","getWallet","eth","getAccounts","err","accounts","alert","length","handleChange","value","onFileChangeGambar","file","downloadQR","roasting_id","canvas","document","getElementById","pngUrl","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","onRoastingChange","handleSubmit","values","roastingMenu","roastingProfile","roastingName","flavorNote","acidity","intensity","weight","formData","FormData","batchID","append","bean","JSON","stringify","beans","roastingCupping","sku","tgl_roasting","roaster_name","name","addRoastingProduct","id","linkQRCode","REACT_APP_PROD_URL","imageBlob","Promise","resolve","toBlob","formDataQR","pushQRCodeImageRoasting","getDetailRoastingProduct","console","log","object","json","date_ob","Date","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","arrFiles","formdata","product","green_beans","description","i","push","apiPostToMarketpalceKK","toString","substr","increment","incrementalResultIDBatch","resultIDBatch","roasting_batch_id","visibility"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,gBAAgB,GAAGF,OAAO,CAAC,4BAAD,CAAhC;;AAEA,MAAMG,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,QAAQ,GAAG,IAAIH,gBAAJ,CACfI,OAAO,CAACC,GAAR,CAAYC,kBADG,EAEf,kCAAkCF,OAAO,CAACC,GAAR,CAAYE,2BAF/B,CAAjB;AAIA,QAAMC,IAAI,GAAG,IAAIZ,IAAJ,CAASO,QAAT,CAAb;AACAA,EAAAA,QAAQ,CAACM,MAAT,CAAgBC,IAAhB;AACA,QAAMC,eAAe,GAAG,4CAAxB;AAEA,QAAMC,IAAI,GAAGV,KAAK,CAACU,IAAnB;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAczB,QAAQ,CAAC,MAAD,CAA5B;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC4B,WAAD,EAAcC,eAAd,IAAiC7B,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwB/B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgC,OAAD,EAAUC,UAAV,IAAwBjC,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,OAAO;AACPC,IAAAA,aAAa;AACd,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,OAAO,GAAG,MAAM;AACpB9B,IAAAA,WAAW,CAACgC,0BAAZ,GAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC1DL,MAAAA,UAAU,CAACK,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAV;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,SAAS,GAAG,YAAY;AAC5BtB,IAAAA,IAAI,CAACuB,GAAL,CAASC,WAAT,CAAqB,UAAUC,GAAV,EAAeC,QAAf,EAAyB;AAC5C,UAAID,GAAG,IAAI,IAAX,EAAiB;AACfE,QAAAA,KAAK,CAAC,wBAAwBF,GAAzB,CAAL;AACD,OAFD,MAEO,IAAIC,QAAQ,CAACE,MAAT,IAAmB,CAAvB,EAA0B;AAC/BD,QAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,OAFM,MAEA;AACLf,QAAAA,UAAU,CAACc,QAAQ,CAAC,CAAD,CAAT,CAAV;AACD;AACF,KARD;AASD,GAVD;;AAYA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9BxB,IAAAA,KAAK,CAACwB,KAAD,CAAL;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAIC,IAAD,IAAU;AACnCtB,IAAAA,eAAe,CAACsB,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,WAAD,IAAiB;AAClC,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AACA,UAAMC,MAAM,GAAGH,MAAM,CAClBI,SADY,CACF,WADE,EAEZC,OAFY,CAEJ,WAFI,EAES,oBAFT,CAAf;AAGA,QAAIC,YAAY,GAAGL,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAAnB;AACAD,IAAAA,YAAY,CAACE,IAAb,GAAoBL,MAApB;AACAG,IAAAA,YAAY,CAACG,QAAb,GAAwB,KAAKV,WAAL,GAAmB,MAA3C;AACAE,IAAAA,QAAQ,CAACS,IAAT,CAAcC,WAAd,CAA0BL,YAA1B;AACAA,IAAAA,YAAY,CAACM,KAAb;AACAX,IAAAA,QAAQ,CAACS,IAAT,CAAcG,WAAd,CAA0BP,YAA1B;AACD,GAXD;;AAaA,QAAMQ,gBAAgB,GAAIjB,IAAD,IAAU;AACjCxB,IAAAA,eAAe,CAACwB,IAAD,CAAf;AACD,GAFD;;AAIAlD,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAM4B,YAAY,GAAG,MAAOC,MAAP,IAAkB;AACrC,QACEA,MAAM,CAACC,YAAP,IACAD,MAAM,CAACE,eADP,IAEAF,MAAM,CAACG,YAFP,IAGAH,MAAM,CAACI,UAHP,IAIAJ,MAAM,CAACK,OAJP,IAKAL,MAAM,CAACM,SALP,IAMAN,MAAM,CAACO,MANP,IAOAnD,YAAY,IAAI,EAPhB,IAQAE,WAAW,IAAI,EATjB,EAUE;AACA;AACA;AACA,YAAMkD,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAMC,OAAO,GAAG7C,aAAa,EAA7B;AACA2C,MAAAA,QAAQ,CAACG,MAAT,CAAgB,mBAAhB,EAAqCD,OAArC;;AAEA,UAAIV,MAAM,CAACC,YAAP,IAAuB,QAA3B,EAAqC;AACnCO,QAAAA,QAAQ,CAACG,MAAT,CAAgB,SAAhB,EAA2BX,MAAM,CAACY,IAAlC;AACD;;AACD,UAAIZ,MAAM,CAACC,YAAP,IAAuB,SAA3B,EAAsC;AACpCO,QAAAA,QAAQ,CAACG,MAAT,CAAgB,OAAhB,EAAyBE,IAAI,CAACC,SAAL,CAAed,MAAM,CAACe,KAAtB,CAAzB;AACD;;AAEDP,MAAAA,QAAQ,CAACG,MAAT,CAAgB,qBAAhB,EAAuCX,MAAM,CAACE,eAA9C;AACAM,MAAAA,QAAQ,CAACG,MAAT,CAAgB,YAAhB,EAA8BX,MAAM,CAACgB,eAArC;AACAR,MAAAA,QAAQ,CAACG,MAAT,CAAgB,eAAhB,EAAiCX,MAAM,CAACG,YAAxC;AACAK,MAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgCX,MAAM,CAACC,YAAvC;AACAO,MAAAA,QAAQ,CAACG,MAAT,CAAgB,aAAhB,EAA+BX,MAAM,CAACI,UAAtC;AACAI,MAAAA,QAAQ,CAACG,MAAT,CAAgB,SAAhB,EAA2BX,MAAM,CAACK,OAAlC;AACAG,MAAAA,QAAQ,CAACG,MAAT,CAAgB,WAAhB,EAA6BX,MAAM,CAACM,SAApC;AACAE,MAAAA,QAAQ,CAACG,MAAT,CAAgB,QAAhB,EAA0BX,MAAM,CAACO,MAAjC;AACAC,MAAAA,QAAQ,CAACG,MAAT,CAAgB,KAAhB,EAAuBX,MAAM,CAACiB,GAA9B;AACAT,MAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgCX,MAAM,CAACkB,YAAvC;AACAV,MAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgCX,MAAM,CAACmB,YAAvC;AAEAX,MAAAA,QAAQ,CAACG,MAAT,CAAgB,gBAAhB,EAAkCvD,YAAlC,EA1BA,CA2BA;AACA;AACA;;AAEAoD,MAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgCrD,WAAhC;AACAkD,MAAAA,QAAQ,CAACG,MAAT,CAAgB,iBAAhB,EAAmCrD,WAAW,CAAC8D,IAA/C;AAEAtF,MAAAA,WAAW,CAACuF,kBAAZ,CAA+Bb,QAA/B,EAAyCzC,IAAzC,CAA8C,MAAOC,QAAP,IAAoB;AAChE,cAAMe,WAAW,GAAGf,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuBoD,EAA3C;AACA,cAAMC,UAAU,GACd9E,OAAO,CAACC,GAAR,CAAY8E,kBAAZ,GACA,iBADA,GAEAvE,IAFA,GAGA,GAHA,GAIA8B,WALF;AAMA,cAAML,YAAY,CAAC6C,UAAD,CAAlB;AAEA,cAAMvC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;AACA,YAAIuC,SAAS,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAChC3C,MAAM,CAAC4C,MAAP,CAAcD,OAAd,EAAuB,WAAvB,CADoB,CAAtB;AAIA,YAAIE,UAAU,GAAG,IAAIpB,QAAJ,EAAjB;AACAoB,QAAAA,UAAU,CAAClB,MAAX,CAAkB,UAAlB,EAA8Bc,SAA9B,EAAyC,KAAK1C,WAAL,GAAmB,MAA5D;AACA8C,QAAAA,UAAU,CAAClB,MAAX,CAAkB,aAAlB,EAAiC,KAAK5B,WAAL,GAAmB,MAApD;AAEAD,QAAAA,UAAU,CAACC,WAAD,CAAV;AAEAjD,QAAAA,WAAW,CAACgG,uBAAZ,CAAoC/C,WAApC,EAAiD8C,UAAjD;AAEA/F,QAAAA,WAAW,CAACiG,wBAAZ,CAAqChD,WAArC,EAAkDhB,IAAlD,CACE,MAAOC,QAAP,IAAoB;AAClBgE,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCjE,QAAQ,CAACC,IAA/C;AACA,cAAIiE,MAAM,GAAGlE,QAAQ,CAACC,IAAtB,CAFkB,CAGlB;AACA;AACA;;AACA,cAAIkE,IAAI,GAAGtB,IAAI,CAACC,SAAL,CAAeoB,MAAf,CAAX,CANkB,CAOlB;;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYjG,MAAM,CAACmG,IAAD,CAAlB,EARkB,CASlB;;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYzE,OAAZ;AAEA,cAAI4E,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,cAAIC,IAAI,GAAG,CAAC,MAAMF,OAAO,CAACG,OAAR,EAAP,EAA0BC,KAA1B,CAAgC,CAAC,CAAjC,CAAX;AACA,cAAIC,KAAK,GAAG,CAAC,OAAOL,OAAO,CAACM,QAAR,KAAqB,CAA5B,CAAD,EAAiCF,KAAjC,CAAuC,CAAC,CAAxC,CAAZ;AACA,cAAIG,IAAI,GAAGP,OAAO,CAACQ,WAAR,EAAX;AACA,cAAIC,KAAK,GAAGT,OAAO,CAACU,QAAR,EAAZ;AACA,cAAIC,OAAO,GAAGX,OAAO,CAACY,UAAR,EAAd;AACA,cAAIC,OAAO,GAAGb,OAAO,CAACc,UAAR,EAAd;AACAlB,UAAAA,OAAO,CAACC,GAAR,CAAYU,IAAI,GAAG,GAAP,GAAaF,KAAb,GAAqB,GAArB,GAA2BH,IAAvC,EAnBkB,CAqBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,cAAIa,QAAQ,GAAG,EAAf;AAEA,cAAIC,QAAQ,GAAG,IAAI3C,QAAJ,EAAf;AACA2C,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,MAAhB,EAAwB1D,IAAxB;AACAmG,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,YAAhB,EAA8B5B,WAA9B;AACAqE,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,aAAhB,EAA+B,GAA/B;AACAyC,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,MAAhB,EAAwBX,MAAM,CAACG,YAA/B;;AACA,cAAGH,MAAM,CAACC,YAAP,KAAwB,QAA3B,EAAqC;AACnCmD,YAAAA,QAAQ,CAACzC,MAAT,CAAgB,aAAhB,EAA+BuB,MAAM,CAAChE,QAAP,CAAgB,CAAhB,IAAqBgE,MAAM,CAAChE,QAAP,CAAgB,CAAhB,EAAmBmF,OAAnB,CAA2BC,WAA3B,CAAuCC,WAA5D,GAA0EvF,QAAQ,CAACC,IAAT,CAAcC,QAAd,CAAuB,CAAvB,EAA0BmF,OAA1B,CAAkCC,WAAlC,CAA8CC,WAAvJ;AACD,WAFD,MAEO;AACLH,YAAAA,QAAQ,CAACzC,MAAT,CAAgB,aAAhB,EAA+BwB,IAA/B;AACD;;AACDiB,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,iBAAhB,EAAmC,IAAnC;AACAyC,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,WAAhB,EAA6B,EAA7B;AACAyC,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,WAAhB,EAA6B,EAA7B;AACAyC,UAAAA,QAAQ,CAACzC,MAAT,CAAgB,QAAhB,EAA0BX,MAAM,CAACO,MAAjC;;AAEA,eAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIpG,YAAY,CAACqB,MAAb,GAAsB,CAA3C,EAA+C+E,CAAC,EAAhD,EAAoD;AAClDL,YAAAA,QAAQ,CAACM,IAAT,CAAcrG,YAAY,CAACoG,CAAD,CAA1B;AACD;;AAEDL,UAAAA,QAAQ,CAACM,IAAT,CAAcnG,WAAd;AACA6F,UAAAA,QAAQ,CAACM,IAAT,CAAchC,SAAd;;AAEA,eAAK,IAAI+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAAC1E,MAA7B,EAAqC+E,CAAC,EAAtC,EAA0C;AACxC,gBAAIA,CAAC,GAAC,CAAH,KAAUL,QAAQ,CAAC1E,MAAtB,EAA8B;AAC5B2E,cAAAA,QAAQ,CAACzC,MAAT,CAAgB,SAAhB,EAA2BwC,QAAQ,CAACK,CAAD,CAAnC,EAAwC,KAAKzE,WAAL,GAAmB,MAA3D;AACD,aAFD,MAEO;AACLqE,cAAAA,QAAQ,CAACzC,MAAT,CAAgB,SAAhB,EAA2BwC,QAAQ,CAACK,CAAD,CAAnC;AACD;AACF;;AAED1H,UAAAA,WAAW,CAAC4H,sBAAZ,CAAmCN,QAAnC,EAA6CrF,IAA7C,CAAkD,MAAOC,QAAP,IAAoB;AACpEgE,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BjE,QAA3B;AACD,WAFD,EAhFkB,CAoFlB;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAxIH;AA0ID,OAjKD;AAmKAnC,MAAAA,WAAW,CAAC,qBAAD,CAAX;AACD,KAhND,MAgNO;AACLA,MAAAA,WAAW,CAAC,4BAAD,CAAX;AACD;AACF,GApND;;AAsNA,QAAMgC,aAAa,GAAG,MAAM;AAC1B,QAAIyE,IAAI,GAAG,IAAID,IAAJ,GAAWE,OAAX,EAAX;AACA,QAAIE,KAAK,GAAG,IAAIJ,IAAJ,GAAWK,QAAX,KAAwB,CAApC;AACA,QAAIC,IAAI,GAAG,IAAIN,IAAJ,GAAWO,WAAX,GAAyBe,QAAzB,GAAoCC,MAApC,CAA2C,CAAC,CAA5C,CAAX;;AAEA,QAAItB,IAAI,GAAG,EAAX,EAAe;AACbA,MAAAA,IAAI,GAAG,MAAMA,IAAb;AACD;;AACD,QAAIG,KAAK,GAAG,EAAZ,EAAgB;AACdA,MAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AAED,QAAIoB,SAAS,GAAG,CAAhB;AACA,QAAIC,wBAAwB,GAAG,MAAMD,SAArC;AACA,QAAIE,aAAa,GAAG,KAAKpB,IAAL,GAAYF,KAAZ,GAAoBqB,wBAAxC;;AAEA,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9F,OAAO,CAACe,MAA5B,EAAoC+E,CAAC,EAArC,EAAyC;AACvC,UAAI9F,OAAO,CAAC8F,CAAD,CAAP,CAAWQ,iBAAX,IAAgCD,aAApC,EAAmD;AACjDF,QAAAA,SAAS,IAAI,CAAb;;AACA,YAAIA,SAAS,GAAG,EAAhB,EAAoB;AAClBC,UAAAA,wBAAwB,GAAG,MAAMD,SAAjC;AACD,SAFD,MAGK;AACHC,UAAAA,wBAAwB,GAAGD,SAA3B;AACD;;AACDE,QAAAA,aAAa,GAAG,KAAKpB,IAAL,GAAYF,KAAZ,GAAoBqB,wBAApC;AACD;AACF;;AAED,WAAOC,aAAP;AACD,GA9BD;;AAgCA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAEhE,YADZ;AAEE,MAAA,gBAAgB,EAAED,gBAFpB;AAGE,MAAA,mBAAmB,EAAElB;AAHvB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,KAAK,EAAE;AAAEqF,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA,gBACG/G,EAAE,gBACD,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAEA,EAAzB;AAA6B,QAAA,IAAI,EAAE,GAAnC;AAAwC,QAAA,aAAa,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,cADC,gBAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1UD;;GAAMZ,W;;KAAAA,W;AA4UN,eAAeA,WAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport AddRoastingForm from \"./AddRoastingForm\";\nimport showResults from \"../../../showResults/showResults\";\nimport UserService from \"../../../../services/user.service\";\nimport QRcode from \"qrcode.react\";\nimport { sha256 } from \"js-sha256\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../../abi/abi\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst AddRoasting = (props) => {\n  const provider = new HDWalletProvider(\n    process.env.REACT_APP_MNEMONIC,\n    \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n  );\n  const web3 = new Web3(provider);\n  provider.engine.stop()\n  const contractAddress = \"0x061Bca64852219aA03a9615ef66Dc301e075F6d9\";\n\n  const code = props.code;\n  const [qr, setQr] = useState(\"test\");\n  const [roastingFile, setRoastingFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [content, setContent] = useState([]);\n\n  useEffect(() => {\n    getData();\n    handleIDBatch();\n  }, []);\n\n  const getData = () => {\n    UserService.getListRoastingProductsAsc().then((response) => {\n      setContent(response.data.roasting);\n    });\n  };\n\n  const getWallet = async () => {\n    web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        alert(\"An error occurred: \" + err);\n      } else if (accounts.length == 0) {\n        alert(\"User is not logged in to MetaMask\");\n      } else {\n        setAccount(accounts[0]);\n      }\n    });\n  };\n\n  const handleChange = (value) => {\n    setQr(value);\n  };\n\n  const onFileChangeGambar = (file) => {\n    imageFileGambar(file);\n  };\n\n  const downloadQR = (roasting_id) => {\n    const canvas = document.getElementById(\"myqr\");\n    const pngUrl = canvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.href = pngUrl;\n    downloadLink.download = \"\" + roasting_id + \".png\";\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const onRoastingChange = (file) => {\n    setRoastingFile(file);\n  };\n\n  useEffect(() => {\n    getWallet();\n  }, []);\n\n  const handleSubmit = async (values) => {\n    if (\n      values.roastingMenu &&\n      values.roastingProfile &&\n      values.roastingName &&\n      values.flavorNote &&\n      values.acidity &&\n      values.intensity &&\n      values.weight &&\n      roastingFile != \"\" &&\n      filesGambar != \"\"\n    ) {\n      // console.log(process.env.REACT_APP_MNEMONIC);\n      // console.log(\"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n      const formData = new FormData();\n      const batchID = handleIDBatch();\n      formData.append(\"roasting_batch_id\", batchID);\n\n      if (values.roastingMenu == \"Single\") {\n        formData.append(\"bean_id\", values.bean);\n      }\n      if (values.roastingMenu == \"Blended\") {\n        formData.append(\"beans\", JSON.stringify(values.beans));\n      }\n\n      formData.append(\"roasting_profile_id\", values.roastingProfile);\n      formData.append(\"cupping_id\", values.roastingCupping);\n      formData.append(\"roasting_name\", values.roastingName);\n      formData.append(\"roastingMenu\", values.roastingMenu);\n      formData.append(\"flavor_note\", values.flavorNote);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"intensity\", values.intensity);\n      formData.append(\"weight\", values.weight);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"tgl_roasting\", values.tgl_roasting);\n      formData.append(\"roaster_name\", values.roaster_name);\n\n      formData.append(\"roastingFile[]\", roastingFile);\n      // for (let i = 0; i < roastingFile.length; i++) {\n      //   formData.append(\"roastingFile[]\", roastingFile[i]);\n      // }\n\n      formData.append(\"files_gambar\", filesGambar);\n      formData.append(\"fileName_gambar\", filesGambar.name);\n\n      UserService.addRoastingProduct(formData).then(async (response) => {\n        const roasting_id = response.data.roasting.id;\n        const linkQRCode =\n          process.env.REACT_APP_PROD_URL +\n          \"detailRoasting/\" +\n          code +\n          \"/\" +\n          roasting_id;\n        await handleChange(linkQRCode);\n\n        const canvas = document.getElementById(\"myqr\");\n        let imageBlob = await new Promise((resolve) =>\n          canvas.toBlob(resolve, \"image/png\")\n        );\n\n        let formDataQR = new FormData();\n        formDataQR.append(\"files_qr\", imageBlob, \"\" + roasting_id + \".png\");\n        formDataQR.append(\"fileName_qr\", \"\" + roasting_id + \".png\");\n\n        downloadQR(roasting_id);\n\n        UserService.pushQRCodeImageRoasting(roasting_id, formDataQR);\n\n        UserService.getDetailRoastingProduct(roasting_id).then(\n          async (response) => {\n            console.log(\"data get setelah submit\",response.data);\n            var object = response.data;\n            // formData.forEach(function (value, key) {\n            //   object[key] = value;\n            // });\n            var json = JSON.stringify(object);\n            // console.log(json);\n            console.log(sha256(json));\n            // console.log(contractAddress);\n            console.log(account);\n\n            let date_ob = new Date();\n            let date = (\"0\" + date_ob.getDate()).slice(-2);\n            let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n            let year = date_ob.getFullYear();\n            let hours = date_ob.getHours();\n            let minutes = date_ob.getMinutes();\n            let seconds = date_ob.getSeconds();\n            console.log(year + \"-\" + month + \"-\" + date);\n\n            //Blockchain Function\n            // const storageContract = new web3.eth.Contract(\n            //   AddProduct,\n            //   contractAddress\n            // );\n            // // const gas = await storageContract.methods\n            // // .tambahProduct(\n            // //   sha256(json),\n            // //   year + \"-\" + month + \"-\" + date\n            // // )\n            // // .estimateGas();\n\n            // var post = await storageContract.methods\n            //   .tambahProduct(sha256(json), year + \"-\" + month + \"-\" + date)\n            //   .send(\n            //     {\n            //       from: account,\n            //       // gas,\n            //     },\n            //     (error, transactionHash) => {\n            //       console.log(transactionHash);\n            //     }\n            //   );\n            // console.log(post);\n\n\n            // queued post api marketplace kk\n            var arrFiles = [];\n\n            var formdata = new FormData();\n            formdata.append(\"code\", code);\n            formdata.append(\"roasted_id\", roasting_id);\n            formdata.append(\"category_id\", 115);\n            formdata.append(\"name\", values.roastingName);\n            if(values.roastingMenu === 'Single') {\n              formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n            } else {\n              formdata.append(\"description\", json);\n            }\n            formdata.append(\"indonesia_price\", 1000);\n            formdata.append(\"usd_price\", 10);\n            formdata.append(\"aed_price\", 50);\n            formdata.append(\"weight\", values.weight);\n\n            for (let i = 0; i < (roastingFile.length + 2); i++) {\n              arrFiles.push(roastingFile[i]);\n            }\n\n            arrFiles.push(filesGambar)\n            arrFiles.push(imageBlob)\n\n            for (let i = 0; i < arrFiles.length; i++) {\n              if((i+1) === arrFiles.length) {\n                formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\")\n              } else {\n                formdata.append('image[]', arrFiles[i])\n              }\n            }\n\n            UserService.apiPostToMarketpalceKK(formdata).then(async (response) => {\n              console.log('cek ini mal', response);\n            })\n\n            //Postman Kopi Ketjil (sekarang di hanlde di backend laravel)\n            // try{\n            //   var myHeaders = new Headers();\n            //   myHeaders.append(\"x-api-key\", \"kk-blockchain-2021-dev\");\n\n            //   var arrFiles = [];\n\n            //   var formdata = new FormData();\n            //   formdata.append(\"category_id\", \"115\");\n            //   formdata.append(\"name\", values.roastingName);\n            //   if(values.roastingMenu === 'Single') {\n            //     formdata.append(\"description\", object.roasting[0] ? object.roasting[0].product.green_beans.description : response.data.roasting[0].product.green_beans.description);\n            //   } else {\n            //     formdata.append(\"description\", json);\n            //   }\n            //   formdata.append(\"indonesia_price\", \"1000\");\n            //   formdata.append(\"usd_price\", \"10\");\n            //   formdata.append(\"aed_price\", \"50\");\n\n            //   for (let i = 0; i < (roastingFile.length + 2); i++) {\n            //     arrFiles.push(roastingFile[i]);\n            //   }\n\n            //   arrFiles.push(filesGambar)\n            //   arrFiles.push(imageBlob)\n\n            //   for (let i = 0; i < arrFiles.length; i++) {\n            //     if((i+1) === arrFiles.length) {\n            //       formdata.append('image[]', arrFiles[i], \"\" + roasting_id + \".png\")\n            //     } else {\n            //       formdata.append('image[]', arrFiles[i])\n            //     }\n            //   }\n\n            //   var requestOptions = {\n            //     method: \"POST\",\n            //     headers: myHeaders,\n            //     body: formdata,\n            //     redirect: \"follow\",\n            //   };\n\n            //   fetch(\n            //     \"https://api-staging.kopiketjil.com/api/kopiketjil/insert-product\",\n            //     requestOptions\n            //   )\n            //     .then((response) => showResults(`Response API, ${response}`))\n            //     .then((result) => console.log('result API',result))\n            //     .catch((error) => showResults(`Response API, ${error}`));\n            // } catch (e) {\n            //   showResults(`Error Post To Kopi Ketjil, ${e}`);\n            // }\n          }\n        );\n      });\n\n      showResults(\"Data has been added\");\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const handleIDBatch = () => {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear().toString().substr(-2);\n\n    if (date < 10) {\n      date = \"0\" + date;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let increment = 1;\n    let incrementalResultIDBatch = \"0\" + increment;\n    let resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n\n    for (let i = 0; i < content.length; i++) {\n      if (content[i].roasting_batch_id == resultIDBatch) {\n        increment += 1;\n        if (increment < 10) {\n          incrementalResultIDBatch = \"0\" + increment;\n        }\n        else {\n          incrementalResultIDBatch = increment;\n        }\n        resultIDBatch = \"\" + year + month + incrementalResultIDBatch;\n      }\n    }\n\n    return resultIDBatch;\n  };\n\n  return (\n    <Fragment>\n      <AddRoastingForm\n        onSubmit={handleSubmit}\n        onSelectRoasting={onRoastingChange}\n        onSelectImageGambar={onFileChangeGambar}\n      />\n      <div style={{ visibility: \"hidden\" }}>\n        {qr ? (\n          <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n        ) : (\n          <p>No QR code preview</p>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AddRoasting;\n"]},"metadata":{},"sourceType":"module"}