{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPO.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport showResults from \"../../../showResults/showResults\";\nimport DaftarPOForm from \"./DaftarPOForm\";\nimport UserService from \"../../../../services/user.service\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DaftarPO = () => {\n  _s();\n\n  const [pindah, setPindah] = useState(false);\n  const [date, setDate] = useState(\"\");\n\n  const handleDate = tgl => {\n    setDate(tgl);\n  };\n\n  const handleSubmit = values => {\n    console.log(date);\n\n    if (values.po_number && date != \"\" && values.buyer_name) {\n      // var raw = JSON.stringify(values);\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"po_date\", date);\n      formData.append(\"buyer_name\", values.buyer_name);\n      UserService.addPO(formData).then(response => {\n        if (response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been added\");\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  if (pindah === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/listBiji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DaftarPOForm, {\n        onSubmit: handleSubmit,\n        onSelectDate: handleDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DaftarPO, \"j7MRaoLfrK6CUa/foKmvCwiiraA=\");\n\n_c = DaftarPO;\nexport default DaftarPO;\n\nvar _c;\n\n$RefreshReg$(_c, \"DaftarPO\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/MasterData/PO/DaftarPO.js"],"names":["Fragment","useState","showResults","DaftarPOForm","UserService","Redirect","DaftarPO","pindah","setPindah","date","setDate","handleDate","tgl","handleSubmit","values","console","log","po_number","buyer_name","formData","FormData","append","addPO","then","response","data","massage"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMU,UAAU,GAAIC,GAAD,IAAS;AAC1BF,IAAAA,OAAO,CAACE,GAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,QAAGK,MAAM,CAACG,SAAP,IACDR,IAAI,IAAI,EADP,IAEDK,MAAM,CAACI,UAFT,EAGE;AACA;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BP,MAAM,CAACG,SAApC;AACAE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BZ,IAA3B;AACAU,MAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BP,MAAM,CAACI,UAArC;AAEAd,MAAAA,WAAW,CAACkB,KAAZ,CAAkBH,QAAlB,EAA4BI,IAA5B,CAAkCC,QAAD,IAAc;AAC7C,YAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACxBxB,UAAAA,WAAW,CAAE,GAAEsB,QAAQ,CAACC,IAAT,CAAcC,OAAQ,EAA1B,CAAX;AACD,SAFD,MAEO;AACLxB,UAAAA,WAAW,CAAC,qBAAD,CAAX;AAEAM,UAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,OARD;AASD,KAnBD,MAmBO;AACLN,MAAAA,WAAW,CAAC,4BAAD,CAAX;AACD;AAEF,GAzBD;;AA2BA,MAAIK,MAAM,KAAK,IAAf,EAAqB;AAEnB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AAED,GAJD,MAIO;AACL,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEM,YAAxB;AAAsC,QAAA,YAAY,EAAEF;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF,CAhDD;;GAAML,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { Fragment, useState } from \"react\";\nimport showResults from \"../../../showResults/showResults\";\nimport DaftarPOForm from \"./DaftarPOForm\";\nimport UserService from \"../../../../services/user.service\";\nimport { Redirect } from \"react-router-dom\";\n\nconst DaftarPO = () => {\n\n  const [pindah, setPindah] = useState(false);\n  const [date, setDate] = useState(\"\");\n\n  const handleDate = (tgl) => {\n    setDate(tgl);\n  };\n\n  const handleSubmit = (values) => {\n    console.log(date);\n    if(values.po_number &&\n      date != \"\" &&\n      values.buyer_name\n    ) {\n      // var raw = JSON.stringify(values);\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"po_date\", date);\n      formData.append(\"buyer_name\", values.buyer_name);\n\n      UserService.addPO(formData).then((response) => {\n        if(response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been added\");\n\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n\n  };\n\n  if (pindah === true) {\n\n    return <Redirect to=\"/listBiji\" />;\n\n  } else {\n    return (\n      <Fragment>\n        <DaftarPOForm onSubmit={handleSubmit} onSelectDate={handleDate} />\n      </Fragment>\n    );\n\n  }\n};\n\nexport default DaftarPO;\n"]},"metadata":{},"sourceType":"module"}