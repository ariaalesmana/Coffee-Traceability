{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto = require(\"crypto\");\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar scrypt_js_1 = require(\"scrypt-js\");\n\nvar hdkey_1 = require(\"./hdkey\");\n\nObject.defineProperty(exports, \"hdkey\", {\n  enumerable: true,\n  get: function () {\n    return hdkey_1.default;\n  }\n});\n\nvar thirdparty_1 = require(\"./thirdparty\");\n\nObject.defineProperty(exports, \"thirdparty\", {\n  enumerable: true,\n  get: function () {\n    return thirdparty_1.default;\n  }\n});\n\nvar bs58check = require('bs58check');\n\nvar randomBytes = require('randombytes');\n\nvar uuidv4 = require('uuid/v4');\n\nfunction validateHexString(paramName, str, length) {\n  if (str.toLowerCase().startsWith('0x')) {\n    str = str.slice(2);\n  }\n\n  if (!str && !length) {\n    return str;\n  }\n\n  if (length % 2) {\n    throw new Error(\"Invalid length argument, must be an even number\");\n  }\n\n  if (typeof length === 'number' && str.length !== length) {\n    throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n  }\n\n  if (!/^([0-9a-f]{2})+$/i.test(str)) {\n    var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n    throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n  }\n\n  return str;\n}\n\nfunction validateBuffer(paramName, buff, length) {\n  if (!Buffer.isBuffer(buff)) {\n    var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n    var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n    throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n  }\n\n  if (typeof length === 'number' && buff.length !== length) {\n    throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n  }\n\n  return buff;\n}\n\nfunction mergeToV3ParamsWithDefaults(params) {\n  var v3Defaults = {\n    cipher: 'aes-128-ctr',\n    kdf: 'scrypt',\n    salt: randomBytes(32),\n    iv: randomBytes(16),\n    uuid: randomBytes(16),\n    dklen: 32,\n    c: 262144,\n    n: 262144,\n    r: 8,\n    p: 1\n  };\n\n  if (!params) {\n    return v3Defaults;\n  }\n\n  if (typeof params.salt === 'string') {\n    params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n  }\n\n  if (typeof params.iv === 'string') {\n    params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n  }\n\n  if (typeof params.uuid === 'string') {\n    params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n  }\n\n  if (params.salt) {\n    validateBuffer('salt', params.salt);\n  }\n\n  if (params.iv) {\n    validateBuffer('iv', params.iv, 16);\n  }\n\n  if (params.uuid) {\n    validateBuffer('uuid', params.uuid, 16);\n  }\n\n  return __assign(__assign({}, v3Defaults), params);\n}\n\nfunction kdfParamsForPBKDF(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    c: opts.c,\n    prf: 'hmac-sha256'\n  };\n}\n\nfunction kdfParamsForScrypt(opts) {\n  return {\n    dklen: opts.dklen,\n    salt: opts.salt,\n    n: opts.n,\n    r: opts.r,\n    p: opts.p\n  };\n} // wallet implementation\n\n\nvar Wallet =\n/** @class */\nfunction () {\n  function Wallet(privateKey, publicKey) {\n    if (publicKey === void 0) {\n      publicKey = undefined;\n    }\n\n    this.privateKey = privateKey;\n    this.publicKey = publicKey;\n\n    if (privateKey && publicKey) {\n      throw new Error('Cannot supply both a private and a public key to the constructor');\n    }\n\n    if (privateKey && !ethereumjs_util_1.isValidPrivate(privateKey)) {\n      throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n    }\n\n    if (publicKey && !ethereumjs_util_1.isValidPublic(publicKey)) {\n      throw new Error('Invalid public key');\n    }\n  } // static methods\n\n  /**\n   * Create an instance based on a new random key.\n   *\n   * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n   */\n\n\n  Wallet.generate = function (icapDirect) {\n    if (icapDirect === void 0) {\n      icapDirect = false;\n    }\n\n    if (icapDirect) {\n      var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n\n      while (true) {\n        var privateKey = randomBytes(32);\n\n        if (new ethereumjs_util_1.BN(ethereumjs_util_1.privateToAddress(privateKey)).lte(max)) {\n          return new Wallet(privateKey);\n        }\n      }\n    } else {\n      return new Wallet(randomBytes(32));\n    }\n  };\n  /**\n   * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n   */\n\n\n  Wallet.generateVanityAddress = function (pattern) {\n    if (!(pattern instanceof RegExp)) {\n      pattern = new RegExp(pattern);\n    }\n\n    while (true) {\n      var privateKey = randomBytes(32);\n      var address = ethereumjs_util_1.privateToAddress(privateKey);\n\n      if (pattern.test(address.toString('hex'))) {\n        return new Wallet(privateKey);\n      }\n    }\n  };\n  /**\n   * Create an instance based on a public key (certain methods will not be available)\n   *\n   * This method only accepts uncompressed Ethereum-style public keys, unless\n   * the `nonStrict` flag is set to true.\n   */\n\n\n  Wallet.fromPublicKey = function (publicKey, nonStrict) {\n    if (nonStrict === void 0) {\n      nonStrict = false;\n    }\n\n    if (nonStrict) {\n      publicKey = ethereumjs_util_1.importPublic(publicKey);\n    }\n\n    return new Wallet(undefined, publicKey);\n  };\n  /**\n   * Create an instance based on a BIP32 extended public key (xpub)\n   */\n\n\n  Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n    if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n      throw new Error('Not an extended public key');\n    }\n\n    var publicKey = bs58check.decode(extendedPublicKey).slice(45); // Convert to an Ethereum public key\n\n    return Wallet.fromPublicKey(publicKey, true);\n  };\n  /**\n   * Create an instance based on a raw private key\n   */\n\n\n  Wallet.fromPrivateKey = function (privateKey) {\n    return new Wallet(privateKey);\n  };\n  /**\n   * Create an instance based on a BIP32 extended private key (xprv)\n   */\n\n\n  Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n    if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n      throw new Error('Not an extended private key');\n    }\n\n    var tmp = bs58check.decode(extendedPrivateKey);\n\n    if (tmp[45] !== 0) {\n      throw new Error('Invalid extended private key');\n    }\n\n    return Wallet.fromPrivateKey(tmp.slice(46));\n  };\n  /**\n   * Import a wallet (Version 1 of the Ethereum wallet format).\n   *\n   * @param input A JSON serialized string, or an object representing V1 Keystore.\n   * @param password The keystore password.\n   */\n\n\n  Wallet.fromV1 = function (input, password) {\n    return __awaiter(this, void 0, void 0, function () {\n      var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            json = typeof input === 'object' ? input : JSON.parse(input);\n\n            if (json.Version !== '1') {\n              throw new Error('Not a V1 Wallet');\n            }\n\n            if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n              throw new Error('Unsupported key derivation scheme');\n            }\n\n            kdfparams = json.Crypto.KeyHeader.KdfParams;\n            return [4\n            /*yield*/\n            , scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n\n          case 1:\n            derivedKey = _a.sent();\n            ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n            mac = ethereumjs_util_1.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n            if (mac.toString('hex') !== json.Crypto.MAC) {\n              throw new Error('Key derivation failed - possibly wrong passphrase');\n            }\n\n            decipher = crypto.createDecipheriv('aes-128-cbc', ethereumjs_util_1.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n            seed = runCipherBuffer(decipher, ciphertext);\n            return [2\n            /*return*/\n            , new Wallet(seed)];\n        }\n      });\n    });\n  };\n  /**\n   * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n   *\n   * @param input A JSON serialized string, or an object representing V3 Keystore.\n   * @param password The keystore password.\n   */\n\n\n  Wallet.fromV3 = function (input, password, nonStrict) {\n    if (nonStrict === void 0) {\n      nonStrict = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n            if (json.version !== 3) {\n              throw new Error('Not a V3 wallet');\n            }\n\n            if (!(json.crypto.kdf === 'scrypt')) return [3\n            /*break*/\n            , 2];\n            kdfparams = json.crypto.kdfparams;\n            return [4\n            /*yield*/\n            , scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n\n          case 1:\n            // FIXME: support progress reporting callback\n            derivedKey = _a.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            if (json.crypto.kdf === 'pbkdf2') {\n              kdfparams = json.crypto.kdfparams;\n\n              if (kdfparams.prf !== 'hmac-sha256') {\n                throw new Error('Unsupported parameters to PBKDF2');\n              }\n\n              derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n            } else {\n              throw new Error('Unsupported key derivation scheme');\n            }\n\n            _a.label = 3;\n\n          case 3:\n            ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n            mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n\n            if (mac.toString('hex') !== json.crypto.mac) {\n              throw new Error('Key derivation failed - possibly wrong passphrase');\n            }\n\n            decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n            seed = runCipherBuffer(decipher, ciphertext);\n            return [2\n            /*return*/\n            , new Wallet(seed)];\n        }\n      });\n    });\n  };\n  /*\n   * Import an Ethereum Pre Sale wallet.\n   * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n   * JSON fields: encseed, ethaddr, btcaddr, email\n   *\n   * @param input A JSON serialized string, or an object representing EthSale Keystore.\n   * @param password The keystore password.\n   */\n\n\n  Wallet.fromEthSale = function (input, password) {\n    var json = typeof input === 'object' ? input : JSON.parse(input);\n    var encseed = Buffer.from(json.encseed, 'hex'); // key derivation\n\n    var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16); // seed decoding (IV is first 16 bytes)\n    // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n    //       see also http://stackoverflow.com/a/31614770/4964819\n\n    var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n    var seed = runCipherBuffer(decipher, encseed.slice(16));\n    var wallet = new Wallet(ethereumjs_util_1.keccak256(seed));\n\n    if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n      throw new Error('Decoded key mismatch - possibly wrong passphrase');\n    }\n\n    return wallet;\n  };\n\n  Object.defineProperty(Wallet.prototype, \"pubKey\", {\n    // private getters\n\n    /**\n     * Returns the wallet's public key.\n     */\n    get: function () {\n      if (!keyExists(this.publicKey)) {\n        this.publicKey = ethereumjs_util_1.privateToPublic(this.privateKey);\n      }\n\n      return this.publicKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Wallet.prototype, \"privKey\", {\n    /**\n     * Returns the wallet's private key.\n     */\n    get: function () {\n      if (!keyExists(this.privateKey)) {\n        throw new Error('This is a public key only wallet');\n      }\n\n      return this.privateKey;\n    },\n    enumerable: false,\n    configurable: true\n  }); // public instance methods\n\n  /**\n   * Returns the wallet's private key.\n   *\n   */\n  // tslint:disable-next-line\n\n  Wallet.prototype.getPrivateKey = function () {\n    return this.privKey;\n  };\n\n  Wallet.prototype.getPrivateKeyString = function () {\n    return ethereumjs_util_1.bufferToHex(this.privKey);\n  };\n  /**\n   * Returns the wallet's public key.\n   */\n  // tslint:disable-next-line\n\n\n  Wallet.prototype.getPublicKey = function () {\n    return this.pubKey;\n  };\n  /**\n   * Returns the wallet's public key as a \"0x\" prefixed hex string\n   */\n\n\n  Wallet.prototype.getPublicKeyString = function () {\n    return ethereumjs_util_1.bufferToHex(this.getPublicKey());\n  };\n  /**\n   * Returns the wallet's address.\n   */\n\n\n  Wallet.prototype.getAddress = function () {\n    return ethereumjs_util_1.publicToAddress(this.pubKey);\n  };\n  /**\n   * Returns the wallet's address as a \"0x\" prefixed hex string\n   */\n\n\n  Wallet.prototype.getAddressString = function () {\n    return ethereumjs_util_1.bufferToHex(this.getAddress());\n  };\n  /**\n   * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n   * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n   */\n\n\n  Wallet.prototype.getChecksumAddressString = function () {\n    return ethereumjs_util_1.toChecksumAddress(this.getAddressString());\n  };\n  /**\n   * Returns an Etherem Version 3 Keystore Format object representing the wallet\n   *\n   * @param password The password used to encrypt the Keystore.\n   * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n   */\n\n\n  Wallet.prototype.toV3 = function (password, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!keyExists(this.privateKey)) {\n              throw new Error('This is a public key only wallet');\n            }\n\n            v3Params = mergeToV3ParamsWithDefaults(opts);\n            _a = v3Params.kdf;\n\n            switch (_a) {\n              case \"pbkdf2\"\n              /* PBKDF */\n              :\n                return [3\n                /*break*/\n                , 1];\n\n              case \"scrypt\"\n              /* Scrypt */\n              :\n                return [3\n                /*break*/\n                , 2];\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            kdfParams = kdfParamsForPBKDF(v3Params);\n            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n            return [3\n            /*break*/\n            , 5];\n\n          case 2:\n            kdfParams = kdfParamsForScrypt(v3Params);\n            return [4\n            /*yield*/\n            , scrypt_js_1.scrypt(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n\n          case 3:\n            // FIXME: support progress reporting callback\n            derivedKey = _b.sent();\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            throw new Error('Unsupported kdf');\n\n          case 5:\n            cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n\n            if (!cipher) {\n              throw new Error('Unsupported cipher');\n            }\n\n            ciphertext = runCipherBuffer(cipher, this.privKey);\n            mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n            return [2\n            /*return*/\n            , {\n              version: 3,\n              id: uuidv4({\n                random: v3Params.uuid\n              }),\n              // @ts-ignore - the official V3 keystore spec omits the address key\n              address: this.getAddress().toString('hex'),\n              crypto: {\n                ciphertext: ciphertext.toString('hex'),\n                cipherparams: {\n                  iv: v3Params.iv.toString('hex')\n                },\n                cipher: v3Params.cipher,\n                kdf: v3Params.kdf,\n                kdfparams: __assign(__assign({}, kdfParams), {\n                  salt: kdfParams.salt.toString('hex')\n                }),\n                mac: mac.toString('hex')\n              }\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Return the suggested filename for V3 keystores.\n   */\n\n\n  Wallet.prototype.getV3Filename = function (timestamp) {\n    /*\n     * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n     * is a pain in Javascript, everbody knows that. We could use moment.js,\n     * but decide to do it manually in order to save space.\n     *\n     * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n     * but does it really matter?\n     *\n     * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n     *\n     */\n    var ts = timestamp ? new Date(timestamp) : new Date();\n    return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n  };\n\n  Wallet.prototype.toV3String = function (password, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = JSON).stringify;\n            return [4\n            /*yield*/\n            , this.toV3(password, opts)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.apply(_a, [_c.sent()])];\n        }\n      });\n    });\n  };\n\n  return Wallet;\n}();\n\nexports.default = Wallet; // helpers\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nfunction keyExists(k) {\n  return k !== undefined && k !== null;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAYA,IAAA,WAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,OAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,OAAA,CAAA,OAAA;AAAO;AAAP,CAAA;;AACT,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAAS,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA;AAAA,EAAA,UAAA,EAAA,IAAA;AAAA,EAAA,GAAA,EAAA,YAAA;AAAA,WAAA,YAAA,CAAA,OAAA;AAAO;AAAP,CAAA;;AAET,IAAM,SAAS,GAAG,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAM,WAAW,GAAG,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAM,MAAM,GAAG,OAAO,CAAC,SAAD,CAAtB;;AA8BA,SAAS,iBAAT,CAA2B,SAA3B,EAA8C,GAA9C,EAA2D,MAA3D,EAA0E;AACxE,MAAI,GAAG,CAAC,WAAJ,GAAkB,UAAlB,CAA6B,IAA7B,CAAJ,EAAwC;AACtC,IAAA,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAN;AACD;;AACD,MAAI,CAAC,GAAD,IAAQ,CAAC,MAAb,EAAqB;AACnB,WAAO,GAAP;AACD;;AACD,MAAK,MAAiB,GAAG,CAAzB,EAA4B;AAC1B,UAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;AACD;;AACD,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,GAAG,CAAC,MAAJ,KAAe,MAAjD,EAAyD;AACvD,UAAM,IAAI,KAAJ,CAAU,aAAW,SAAX,GAAoB,mBAApB,GAAwC,MAAxC,GAA8C,iBAAxD,CAAN;AACD;;AACD,MAAI,CAAC,oBAAoB,IAApB,CAAyB,GAAzB,CAAL,EAAoC;AAClC,QAAM,OAAO,GAAG,OAAO,MAAP,KAAkB,QAAlB,GAA6B,MAA7B,GAAsC,oCAAtD;AACA,UAAM,IAAI,KAAJ,CAAU,aAAW,SAAX,GAAoB,mBAApB,GAAwC,OAAxC,GAA+C,iBAAzD,CAAN;AACD;;AACD,SAAO,GAAP;AACD;;AAED,SAAS,cAAT,CAAwB,SAAxB,EAA2C,IAA3C,EAAyD,MAAzD,EAAwE;AACtE,MAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAL,EAA4B;AAC1B,QAAM,UAAU,GACd,OAAO,MAAP,KAAkB,QAAlB,GAA6B,KAAG,MAAM,GAAG,CAAzC,GAA+C,oCADjD;AAEA,QAAM,YAAY,GAAG,OAAO,MAAP,KAAkB,QAAlB,GAA6B,OAAK,MAAL,GAAW,SAAxC,GAAoD,EAAzE;AACA,UAAM,IAAI,KAAJ,CACJ,aAAW,SAAX,GAAoB,sBAApB,GAA2C,UAA3C,GAAqD,4BAArD,GAAkF,YAD9E,CAAN;AAGD;;AACD,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,IAAI,CAAC,MAAL,KAAgB,MAAlD,EAA0D;AACxD,UAAM,IAAI,KAAJ,CAAU,aAAW,SAAX,GAAoB,mBAApB,GAAwC,MAAxC,GAA8C,QAAxD,CAAN;AACD;;AACD,SAAO,IAAP;AACD;;AAED,SAAS,2BAAT,CAAqC,MAArC,EAA+D;AAC7D,MAAM,UAAU,GAAmB;AACjC,IAAA,MAAM,EAAE,aADyB;AAEjC,IAAA,GAAG,EAAE,QAF4B;AAGjC,IAAA,IAAI,EAAE,WAAW,CAAC,EAAD,CAHgB;AAIjC,IAAA,EAAE,EAAE,WAAW,CAAC,EAAD,CAJkB;AAKjC,IAAA,IAAI,EAAE,WAAW,CAAC,EAAD,CALgB;AAMjC,IAAA,KAAK,EAAE,EAN0B;AAOjC,IAAA,CAAC,EAAE,MAP8B;AAQjC,IAAA,CAAC,EAAE,MAR8B;AASjC,IAAA,CAAC,EAAE,CAT8B;AAUjC,IAAA,CAAC,EAAE;AAV8B,GAAnC;;AAaA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,UAAP;AACD;;AAED,MAAI,OAAO,MAAM,CAAC,IAAd,KAAuB,QAA3B,EAAqC;AACnC,IAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,iBAAiB,CAAC,MAAD,EAAS,MAAM,CAAC,IAAhB,CAA7B,EAAoD,KAApD,CAAd;AACD;;AACD,MAAI,OAAO,MAAM,CAAC,EAAd,KAAqB,QAAzB,EAAmC;AACjC,IAAA,MAAM,CAAC,EAAP,GAAY,MAAM,CAAC,IAAP,CAAY,iBAAiB,CAAC,IAAD,EAAO,MAAM,CAAC,EAAd,EAAkB,EAAlB,CAA7B,EAAoD,KAApD,CAAZ;AACD;;AACD,MAAI,OAAO,MAAM,CAAC,IAAd,KAAuB,QAA3B,EAAqC;AACnC,IAAA,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,iBAAiB,CAAC,MAAD,EAAS,MAAM,CAAC,IAAhB,EAAsB,EAAtB,CAA7B,EAAwD,KAAxD,CAAd;AACD;;AAED,MAAI,MAAM,CAAC,IAAX,EAAiB;AACf,IAAA,cAAc,CAAC,MAAD,EAAS,MAAM,CAAC,IAAhB,CAAd;AACD;;AACD,MAAI,MAAM,CAAC,EAAX,EAAe;AACb,IAAA,cAAc,CAAC,IAAD,EAAO,MAAM,CAAC,EAAd,EAAkB,EAAlB,CAAd;AACD;;AACD,MAAI,MAAM,CAAC,IAAX,EAAiB;AACf,IAAA,cAAc,CAAC,MAAD,EAAS,MAAM,CAAC,IAAhB,EAAsB,EAAtB,CAAd;AACD;;AAED,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,UADL,CAAA,EAEM,MAFN,CAAA;AAID;;AA0CD,SAAS,iBAAT,CAA2B,IAA3B,EAA+C;AAC7C,SAAO;AACL,IAAA,KAAK,EAAE,IAAI,CAAC,KADP;AAEL,IAAA,IAAI,EAAE,IAAI,CAAC,IAFN;AAGL,IAAA,CAAC,EAAE,IAAI,CAAC,CAHH;AAIL,IAAA,GAAG,EAAE;AAJA,GAAP;AAMD;;AAED,SAAS,kBAAT,CAA4B,IAA5B,EAAgD;AAC9C,SAAO;AACL,IAAA,KAAK,EAAE,IAAI,CAAC,KADP;AAEL,IAAA,IAAI,EAAE,IAAI,CAAC,IAFN;AAGL,IAAA,CAAC,EAAE,IAAI,CAAC,CAHH;AAIL,IAAA,CAAC,EAAE,IAAI,CAAC,CAJH;AAKL,IAAA,CAAC,EAAE,IAAI,CAAC;AALH,GAAP;AAOD,C,CAmDD;;;AAEA,IAAA,MAAA;AAAA;AAAA,YAAA;AACE,WAAA,MAAA,CACmB,UADnB,EAEU,SAFV,EAEmD;AAAzC,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,SAAA;AAAyC;;AADhC,SAAA,UAAA,GAAA,UAAA;AACT,SAAA,SAAA,GAAA,SAAA;;AAER,QAAI,UAAU,IAAI,SAAlB,EAA6B;AAC3B,YAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACD;;AAED,QAAI,UAAU,IAAI,CAAC,iBAAA,CAAA,cAAA,CAAe,UAAf,CAAnB,EAA+C;AAC7C,YAAM,IAAI,KAAJ,CAAU,yEAAV,CAAN;AACD;;AAED,QAAI,SAAS,IAAI,CAAC,iBAAA,CAAA,aAAA,CAAc,SAAd,CAAlB,EAA4C;AAC1C,YAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;AACF,GAhBH,CAkBE;;AAEA;;;;AAIG;;;AACW,EAAA,MAAA,CAAA,QAAA,GAAd,UAAuB,UAAvB,EAAkD;AAA3B,QAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,UAAA,GAAA,KAAA;AAA2B;;AAChD,QAAI,UAAJ,EAAgB;AACd,UAAM,GAAG,GAAG,IAAI,iBAAA,CAAA,EAAJ,CAAO,0CAAP,EAAmD,EAAnD,CAAZ;;AACA,aAAO,IAAP,EAAa;AACX,YAAM,UAAU,GAAG,WAAW,CAAC,EAAD,CAA9B;;AACA,YAAI,IAAI,iBAAA,CAAA,EAAJ,CAAO,iBAAA,CAAA,gBAAA,CAAiB,UAAjB,CAAP,EAAqC,GAArC,CAAyC,GAAzC,CAAJ,EAAmD;AACjD,iBAAO,IAAI,MAAJ,CAAW,UAAX,CAAP;AACD;AACF;AACF,KARD,MAQO;AACL,aAAO,IAAI,MAAJ,CAAW,WAAW,CAAC,EAAD,CAAtB,CAAP;AACD;AACF,GAZa;AAcd;;AAEG;;;AACW,EAAA,MAAA,CAAA,qBAAA,GAAd,UAAoC,OAApC,EAA4D;AAC1D,QAAI,EAAE,OAAO,YAAY,MAArB,CAAJ,EAAkC;AAChC,MAAA,OAAO,GAAG,IAAI,MAAJ,CAAW,OAAX,CAAV;AACD;;AAED,WAAO,IAAP,EAAa;AACX,UAAM,UAAU,GAAG,WAAW,CAAC,EAAD,CAA9B;AACA,UAAM,OAAO,GAAG,iBAAA,CAAA,gBAAA,CAAiB,UAAjB,CAAhB;;AAEA,UAAI,OAAO,CAAC,IAAR,CAAa,OAAO,CAAC,QAAR,CAAiB,KAAjB,CAAb,CAAJ,EAA2C;AACzC,eAAO,IAAI,MAAJ,CAAW,UAAX,CAAP;AACD;AACF;AACF,GAba;AAed;;;;;AAKG;;;AACW,EAAA,MAAA,CAAA,aAAA,GAAd,UAA4B,SAA5B,EAA+C,SAA/C,EAAyE;AAA1B,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,KAAA;AAA0B;;AACvE,QAAI,SAAJ,EAAe;AACb,MAAA,SAAS,GAAG,iBAAA,CAAA,YAAA,CAAa,SAAb,CAAZ;AACD;;AACD,WAAO,IAAI,MAAJ,CAAW,SAAX,EAAsB,SAAtB,CAAP;AACD,GALa;AAOd;;AAEG;;;AACW,EAAA,MAAA,CAAA,qBAAA,GAAd,UAAoC,iBAApC,EAA6D;AAC3D,QAAI,iBAAiB,CAAC,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,MAAkC,MAAtC,EAA8C;AAC5C,YAAM,IAAI,KAAJ,CAAU,4BAAV,CAAN;AACD;;AACD,QAAM,SAAS,GAAW,SAAS,CAAC,MAAV,CAAiB,iBAAjB,EAAoC,KAApC,CAA0C,EAA1C,CAA1B,CAJ2D,CAK3D;;AACA,WAAO,MAAM,CAAC,aAAP,CAAqB,SAArB,EAAgC,IAAhC,CAAP;AACD,GAPa;AASd;;AAEG;;;AACW,EAAA,MAAA,CAAA,cAAA,GAAd,UAA6B,UAA7B,EAA+C;AAC7C,WAAO,IAAI,MAAJ,CAAW,UAAX,CAAP;AACD,GAFa;AAId;;AAEG;;;AACW,EAAA,MAAA,CAAA,sBAAA,GAAd,UAAqC,kBAArC,EAA+D;AAC7D,QAAI,kBAAkB,CAAC,KAAnB,CAAyB,CAAzB,EAA4B,CAA5B,MAAmC,MAAvC,EAA+C;AAC7C,YAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,QAAM,GAAG,GAAW,SAAS,CAAC,MAAV,CAAiB,kBAAjB,CAApB;;AACA,QAAI,GAAG,CAAC,EAAD,CAAH,KAAY,CAAhB,EAAmB;AACjB,YAAM,IAAI,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,WAAO,MAAM,CAAC,cAAP,CAAsB,GAAG,CAAC,KAAJ,CAAU,EAAV,CAAtB,CAAP;AACD,GATa;AAWd;;;;;AAKG;;;AACiB,EAAA,MAAA,CAAA,MAAA,GAApB,UAA2B,KAA3B,EAAuD,QAAvD,EAAuE;;;;;;AAC/D,YAAA,IAAI,GAAe,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,IAAI,CAAC,KAAL,CAAW,KAAX,CAAvD;;AACN,gBAAI,IAAI,CAAC,OAAL,KAAiB,GAArB,EAA0B;AACxB,oBAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;AACD,gBAAI,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,GAAtB,KAA8B,QAAlC,EAA4C;AAC1C,oBAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAEK,YAAA,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,SAAlC;AACa,mBAAA,CAAA;AAAA;AAAA,cAAM,WAAA,CAAA,MAAA,CACvB,MAAM,CAAC,IAAP,CAAY,QAAZ,CADuB,EAEvB,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,MAAL,CAAY,IAAxB,EAA8B,KAA9B,CAFuB,EAGvB,SAAS,CAAC,CAHa,EAIvB,SAAS,CAAC,CAJa,EAKvB,SAAS,CAAC,CALa,EAMvB,SAAS,CAAC,KANa,CAAN,CAAA;;;AAAb,YAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;AASA,YAAA,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,MAAL,CAAY,UAAxB,EAAoC,KAApC,CAAb;AACA,YAAA,GAAG,GAAG,iBAAA,CAAA,SAAA,CAAU,MAAM,CAAC,MAAP,CAAc,CAAC,UAAU,CAAC,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAAD,EAA2B,UAA3B,CAAd,CAAV,CAAN;;AACN,gBAAI,GAAG,CAAC,QAAJ,CAAa,KAAb,MAAwB,IAAI,CAAC,MAAL,CAAY,GAAxC,EAA6C;AAC3C,oBAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAEK,YAAA,QAAQ,GAAG,MAAM,CAAC,gBAAP,CACf,aADe,EAEf,iBAAA,CAAA,SAAA,CAAU,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAV,EAA6C,KAA7C,CAAmD,CAAnD,EAAsD,EAAtD,CAFe,EAGf,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,MAAL,CAAY,EAAxB,EAA4B,KAA5B,CAHe,CAAX;AAKA,YAAA,IAAI,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,CAAtB;AACN,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAI,MAAJ,CAAW,IAAX,CAAP,CAAA;;;;AACD,GAhCmB;AAkCpB;;;;;AAKG;;;AACiB,EAAA,MAAA,CAAA,MAAA,GAApB,UACE,KADF,EAEE,QAFF,EAGE,SAHF,EAG4B;AAA1B,QAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,SAAA,GAAA,KAAA;AAA0B;;;;;;;AAEpB,YAAA,IAAI,GACR,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,IAAI,CAAC,KAAL,CAAW,SAAS,GAAG,KAAK,CAAC,WAAN,EAAH,GAAyB,KAA7C,CADhC;;AAGN,gBAAI,IAAI,CAAC,OAAL,KAAiB,CAArB,EAAwB;AACtB,oBAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;gBAGG,EAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,KAAoB,QAApB,C,EAAA,OAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;AACF,YAAA,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,SAAxB;AAGa,mBAAA,CAAA;AAAA;AAAA,cAAM,WAAA,CAAA,MAAA,CACjB,MAAM,CAAC,IAAP,CAAY,QAAZ,CADiB,EAEjB,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,IAAtB,EAA4B,KAA5B,CAFiB,EAGjB,SAAS,CAAC,CAHO,EAIjB,SAAS,CAAC,CAJO,EAKjB,SAAS,CAAC,CALO,EAMjB,SAAS,CAAC,KANO,CAAN,CAAA;;;AADb;AACA,YAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;;;;;;AAQK,gBAAI,IAAI,CAAC,MAAL,CAAY,GAAZ,KAAoB,QAAxB,EAAkC;AACvC,cAAA,SAAS,GAAG,IAAI,CAAC,MAAL,CAAY,SAAxB;;AAEA,kBAAI,SAAS,CAAC,GAAV,KAAkB,aAAtB,EAAqC;AACnC,sBAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,cAAA,UAAU,GAAG,MAAM,CAAC,UAAP,CACX,MAAM,CAAC,IAAP,CAAY,QAAZ,CADW,EAEX,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,IAAtB,EAA4B,KAA5B,CAFW,EAGX,SAAS,CAAC,CAHC,EAIX,SAAS,CAAC,KAJC,EAKX,QALW,CAAb;AAOD,aAdM,MAcA;AACL,oBAAM,IAAI,KAAJ,CAAU,mCAAV,CAAN;AACD;;;;;AAEK,YAAA,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,MAAL,CAAY,UAAxB,EAAoC,KAApC,CAAb;AACA,YAAA,GAAG,GAAG,iBAAA,CAAA,SAAA,CAAU,MAAM,CAAC,MAAP,CAAc,CAAC,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAAZ,CAAD,EAAwC,UAAxC,CAAd,CAAV,CAAN;;AACN,gBAAI,GAAG,CAAC,QAAJ,CAAa,KAAb,MAAwB,IAAI,CAAC,MAAL,CAAY,GAAxC,EAA6C;AAC3C,oBAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAEK,YAAA,QAAQ,GAAG,MAAM,CAAC,gBAAP,CACf,IAAI,CAAC,MAAL,CAAY,MADG,EAEf,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAFe,EAGf,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAyB,EAArC,EAAyC,KAAzC,CAHe,CAAX;AAKA,YAAA,IAAI,GAAG,eAAe,CAAC,QAAD,EAAW,UAAX,CAAtB;AACN,mBAAA,CAAA;AAAA;AAAA,cAAO,IAAI,MAAJ,CAAW,IAAX,CAAP,CAAA;;;;AACD,GAxDmB;AA0DpB;;;;;;;AAOG;;;AACW,EAAA,MAAA,CAAA,WAAA,GAAd,UAA0B,KAA1B,EAA2D,QAA3D,EAA2E;AACzE,QAAM,IAAI,GAAoB,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,IAAI,CAAC,KAAL,CAAW,KAAX,CAAlE;AAEA,QAAM,OAAO,GAAG,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,OAAjB,EAA0B,KAA1B,CAAhB,CAHyE,CAKzE;;AACA,QAAM,UAAU,GAAG,MAAM,CAAC,UAAP,CAAkB,QAAlB,EAA4B,QAA5B,EAAsC,IAAtC,EAA4C,EAA5C,EAAgD,QAAhD,EAA0D,KAA1D,CAAgE,CAAhE,EAAmE,EAAnE,CAAnB,CANyE,CAQzE;AACA;AACA;;AACA,QAAM,QAAQ,GAAG,MAAM,CAAC,gBAAP,CAAwB,aAAxB,EAAuC,UAAvC,EAAmD,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,EAAjB,CAAnD,CAAjB;AACA,QAAM,IAAI,GAAG,eAAe,CAAC,QAAD,EAAW,OAAO,CAAC,KAAR,CAAc,EAAd,CAAX,CAA5B;AAEA,QAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,iBAAA,CAAA,SAAA,CAAU,IAAV,CAAX,CAAf;;AACA,QAAI,MAAM,CAAC,UAAP,GAAoB,QAApB,CAA6B,KAA7B,MAAwC,IAAI,CAAC,OAAjD,EAA0D;AACxD,YAAM,IAAI,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACD,WAAO,MAAP;AACD,GAnBa;;AA0Bd,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,QAAZ,EAAkB;AALlB;;AAEA;;AAEG;SACH,YAAA;AACE,UAAI,CAAC,SAAS,CAAC,KAAK,SAAN,CAAd,EAAgC;AAC9B,aAAK,SAAL,GAAiB,iBAAA,CAAA,eAAA,CAAgB,KAAK,UAArB,CAAjB;AACD;;AACD,aAAO,KAAK,SAAZ;AACD,KALiB;qBAAA;;AAAA,GAAlB;AAUA,EAAA,MAAA,CAAA,cAAA,CAAY,MAAA,CAAA,SAAZ,EAAY,SAAZ,EAAmB;AAHnB;;AAEG;SACH,YAAA;AACE,UAAI,CAAC,SAAS,CAAC,KAAK,UAAN,CAAd,EAAiC;AAC/B,cAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,aAAO,KAAK,UAAZ;AACD,KALkB;qBAAA;;AAAA,GAAnB,EA3PF,CAkQE;;AAEA;;;AAGG;AACH;;AACO,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACE,WAAO,KAAK,OAAZ;AACD,GAFM;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,GAAP,YAAA;AACE,WAAO,iBAAA,CAAA,WAAA,CAAY,KAAK,OAAjB,CAAP;AACD,GAFM;AAIP;;AAEG;AACH;;;AACO,EAAA,MAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACE,WAAO,KAAK,MAAZ;AACD,GAFM;AAIP;;AAEG;;;AACI,EAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,YAAA;AACE,WAAO,iBAAA,CAAA,WAAA,CAAY,KAAK,YAAL,EAAZ,CAAP;AACD,GAFM;AAIP;;AAEG;;;AACI,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAP,YAAA;AACE,WAAO,iBAAA,CAAA,eAAA,CAAgB,KAAK,MAArB,CAAP;AACD,GAFM;AAIP;;AAEG;;;AACI,EAAA,MAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,YAAA;AACE,WAAO,iBAAA,CAAA,WAAA,CAAY,KAAK,UAAL,EAAZ,CAAP;AACD,GAFM;AAIP;;;AAGG;;;AACI,EAAA,MAAA,CAAA,SAAA,CAAA,wBAAA,GAAP,YAAA;AACE,WAAO,iBAAA,CAAA,iBAAA,CAAkB,KAAK,gBAAL,EAAlB,CAAP;AACD,GAFM;AAIP;;;;;AAKG;;;AACU,EAAA,MAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UAAkB,QAAlB,EAAoC,IAApC,EAA4D;;;;;;;AAC1D,gBAAI,CAAC,SAAS,CAAC,KAAK,UAAN,CAAd,EAAiC;AAC/B,oBAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAEK,YAAA,QAAQ,GAAmB,2BAA2B,CAAC,IAAD,CAAtD;AAIE,YAAA,EAAA,GAAA,QAAQ,CAAC,GAAT;;;;AACiB;;AAAlB,uBAAA,CAAA;AAAA;AAAA,kBAAA,CAAA,CAAA;;;AAUmB;;AAAnB,uBAAA,CAAA;AAAA;AAAA,kBAAA,CAAA,CAAA;;;;;;;;AATH,YAAA,SAAS,GAAG,iBAAiB,CAAC,QAAD,CAA7B;AACA,YAAA,UAAU,GAAG,MAAM,CAAC,UAAP,CACX,MAAM,CAAC,IAAP,CAAY,QAAZ,CADW,EAEX,SAAS,CAAC,IAFC,EAGX,SAAS,CAAC,CAHC,EAIX,SAAS,CAAC,KAJC,EAKX,QALW,CAAb;AAOA,mBAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;;;AAEA,YAAA,SAAS,GAAG,kBAAkB,CAAC,QAAD,CAA9B;AAEa,mBAAA,CAAA;AAAA;AAAA,cAAM,WAAA,CAAA,MAAA,CACjB,MAAM,CAAC,IAAP,CAAY,QAAZ,CADiB,EAEjB,SAAS,CAAC,IAFO,EAGjB,SAAS,CAAC,CAHO,EAIjB,SAAS,CAAC,CAJO,EAKjB,SAAS,CAAC,CALO,EAMjB,SAAS,CAAC,KANO,CAAN,CAAA;;;AADb;AACA,YAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;AAQA,mBAAA,CAAA;AAAA;AAAA,cAAA,CAAA,CAAA;;;AAEA,kBAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;;;AAGE,YAAA,MAAM,GAAkB,MAAM,CAAC,cAAP,CAC5B,QAAQ,CAAC,MADmB,EAE5B,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAF4B,EAG5B,QAAQ,CAAC,EAHmB,CAAxB;;AAKN,gBAAI,CAAC,MAAL,EAAa;AACX,oBAAM,IAAI,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAEK,YAAA,UAAU,GAAG,eAAe,CAAC,MAAD,EAAS,KAAK,OAAd,CAA5B;AACA,YAAA,GAAG,GAAG,iBAAA,CAAA,SAAA,CAAU,MAAM,CAAC,MAAP,CAAc,CAAC,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAAZ,CAAD,EAAwC,MAAM,CAAC,IAAP,CAAY,UAAZ,CAAxC,CAAd,CAAV,CAAN;AAEN,mBAAA,CAAA;AAAA;AAAA,cAAO;AACL,cAAA,OAAO,EAAE,CADJ;AAEL,cAAA,EAAE,EAAE,MAAM,CAAC;AAAE,gBAAA,MAAM,EAAE,QAAQ,CAAC;AAAnB,eAAD,CAFL;AAGL;AACA,cAAA,OAAO,EAAE,KAAK,UAAL,GAAkB,QAAlB,CAA2B,KAA3B,CAJJ;AAKL,cAAA,MAAM,EAAE;AACN,gBAAA,UAAU,EAAE,UAAU,CAAC,QAAX,CAAoB,KAApB,CADN;AAEN,gBAAA,YAAY,EAAE;AAAE,kBAAA,EAAE,EAAE,QAAQ,CAAC,EAAT,CAAY,QAAZ,CAAqB,KAArB;AAAN,iBAFR;AAGN,gBAAA,MAAM,EAAE,QAAQ,CAAC,MAHX;AAIN,gBAAA,GAAG,EAAE,QAAQ,CAAC,GAJR;AAKN,gBAAA,SAAS,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACJ,SADI,CAAA,EACK;AACZ,kBAAA,IAAI,EAAE,SAAS,CAAC,IAAV,CAAe,QAAf,CAAwB,KAAxB;AADM,iBADL,CALH;AASN,gBAAA,GAAG,EAAE,GAAG,CAAC,QAAJ,CAAa,KAAb;AATC;AALH,aAAP,CAAA;;;;AAiBD,GAjEY;AAmEb;;AAEG;;;AACI,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAP,UAAqB,SAArB,EAAuC;AACrC;;;;;;;;;;AAUG;AACH,QAAM,EAAE,GAAG,SAAS,GAAG,IAAI,IAAJ,CAAS,SAAT,CAAH,GAAyB,IAAI,IAAJ,EAA7C;AACA,WAAO,CAAC,OAAD,EAAU,EAAE,CAAC,MAAH,GAAY,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,CAAV,EAA0C,IAA1C,EAAgD,KAAK,UAAL,GAAkB,QAAlB,CAA2B,KAA3B,CAAhD,EAAmF,IAAnF,CACL,EADK,CAAP;AAGD,GAhBM;;AAkBM,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UAAwB,QAAxB,EAA0C,IAA1C,EAAkE;;;;;;;AACzD,YAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAA,EAAK,SAAL;AAAe,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,IAAL,CAAU,QAAV,EAAoB,IAApB,CAAN,CAAA;;;AAAtB,mBAAA,CAAA;AAAA;AAAA,cAAO,EAAA,CAAA,KAAA,CAAA,EAAA,EAAA,CAAe,EAAA,CAAA,IAAA,EAAf,CAAA,CAAP,CAAA;;;;AACD,GAFY;;AAGf,SAAA,MAAA;AAAC,CAvZD,EAAA;;0BAyZA;;AAEA,SAAS,eAAT,CAAyB,MAAzB,EAAkE,IAAlE,EAA8E;AAC5E,SAAO,MAAM,CAAC,MAAP,CAAc,CAAC,MAAM,CAAC,MAAP,CAAc,IAAd,CAAD,EAAsB,MAAM,CAAC,KAAP,EAAtB,CAAd,CAAP;AACD;;AAED,SAAS,SAAT,CAAmB,CAAnB,EAA+C;AAC7C,SAAO,CAAC,KAAK,SAAN,IAAmB,CAAC,KAAK,IAAhC;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar crypto = require(\"crypto\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar scrypt_js_1 = require(\"scrypt-js\");\nvar hdkey_1 = require(\"./hdkey\");\nObject.defineProperty(exports, \"hdkey\", { enumerable: true, get: function () { return hdkey_1.default; } });\nvar thirdparty_1 = require(\"./thirdparty\");\nObject.defineProperty(exports, \"thirdparty\", { enumerable: true, get: function () { return thirdparty_1.default; } });\nvar bs58check = require('bs58check');\nvar randomBytes = require('randombytes');\nvar uuidv4 = require('uuid/v4');\nfunction validateHexString(paramName, str, length) {\n    if (str.toLowerCase().startsWith('0x')) {\n        str = str.slice(2);\n    }\n    if (!str && !length) {\n        return str;\n    }\n    if (length % 2) {\n        throw new Error(\"Invalid length argument, must be an even number\");\n    }\n    if (typeof length === 'number' && str.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + length + \" hex characters\");\n    }\n    if (!/^([0-9a-f]{2})+$/i.test(str)) {\n        var howMany = typeof length === 'number' ? length : 'empty or a non-zero even number of';\n        throw new Error(\"Invalid \" + paramName + \", string must be \" + howMany + \" hex characters\");\n    }\n    return str;\n}\nfunction validateBuffer(paramName, buff, length) {\n    if (!Buffer.isBuffer(buff)) {\n        var howManyHex = typeof length === 'number' ? \"\" + length * 2 : 'empty or a non-zero even number of';\n        var howManyBytes = typeof length === 'number' ? \" (\" + length + \" bytes)\" : '';\n        throw new Error(\"Invalid \" + paramName + \", must be a string (\" + howManyHex + \" hex characters) or buffer\" + howManyBytes);\n    }\n    if (typeof length === 'number' && buff.length !== length) {\n        throw new Error(\"Invalid \" + paramName + \", buffer must be \" + length + \" bytes\");\n    }\n    return buff;\n}\nfunction mergeToV3ParamsWithDefaults(params) {\n    var v3Defaults = {\n        cipher: 'aes-128-ctr',\n        kdf: 'scrypt',\n        salt: randomBytes(32),\n        iv: randomBytes(16),\n        uuid: randomBytes(16),\n        dklen: 32,\n        c: 262144,\n        n: 262144,\n        r: 8,\n        p: 1,\n    };\n    if (!params) {\n        return v3Defaults;\n    }\n    if (typeof params.salt === 'string') {\n        params.salt = Buffer.from(validateHexString('salt', params.salt), 'hex');\n    }\n    if (typeof params.iv === 'string') {\n        params.iv = Buffer.from(validateHexString('iv', params.iv, 32), 'hex');\n    }\n    if (typeof params.uuid === 'string') {\n        params.uuid = Buffer.from(validateHexString('uuid', params.uuid, 32), 'hex');\n    }\n    if (params.salt) {\n        validateBuffer('salt', params.salt);\n    }\n    if (params.iv) {\n        validateBuffer('iv', params.iv, 16);\n    }\n    if (params.uuid) {\n        validateBuffer('uuid', params.uuid, 16);\n    }\n    return __assign(__assign({}, v3Defaults), params);\n}\nfunction kdfParamsForPBKDF(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        c: opts.c,\n        prf: 'hmac-sha256',\n    };\n}\nfunction kdfParamsForScrypt(opts) {\n    return {\n        dklen: opts.dklen,\n        salt: opts.salt,\n        n: opts.n,\n        r: opts.r,\n        p: opts.p,\n    };\n}\n// wallet implementation\nvar Wallet = /** @class */ (function () {\n    function Wallet(privateKey, publicKey) {\n        if (publicKey === void 0) { publicKey = undefined; }\n        this.privateKey = privateKey;\n        this.publicKey = publicKey;\n        if (privateKey && publicKey) {\n            throw new Error('Cannot supply both a private and a public key to the constructor');\n        }\n        if (privateKey && !ethereumjs_util_1.isValidPrivate(privateKey)) {\n            throw new Error('Private key does not satisfy the curve requirements (ie. it is invalid)');\n        }\n        if (publicKey && !ethereumjs_util_1.isValidPublic(publicKey)) {\n            throw new Error('Invalid public key');\n        }\n    }\n    // static methods\n    /**\n     * Create an instance based on a new random key.\n     *\n     * @param icapDirect setting this to `true` will generate an address suitable for the `ICAP Direct mode`\n     */\n    Wallet.generate = function (icapDirect) {\n        if (icapDirect === void 0) { icapDirect = false; }\n        if (icapDirect) {\n            var max = new ethereumjs_util_1.BN('088f924eeceeda7fe92e1f5b0fffffffffffffff', 16);\n            while (true) {\n                var privateKey = randomBytes(32);\n                if (new ethereumjs_util_1.BN(ethereumjs_util_1.privateToAddress(privateKey)).lte(max)) {\n                    return new Wallet(privateKey);\n                }\n            }\n        }\n        else {\n            return new Wallet(randomBytes(32));\n        }\n    };\n    /**\n     * Create an instance where the address is valid against the supplied pattern (**this will be very slow**)\n     */\n    Wallet.generateVanityAddress = function (pattern) {\n        if (!(pattern instanceof RegExp)) {\n            pattern = new RegExp(pattern);\n        }\n        while (true) {\n            var privateKey = randomBytes(32);\n            var address = ethereumjs_util_1.privateToAddress(privateKey);\n            if (pattern.test(address.toString('hex'))) {\n                return new Wallet(privateKey);\n            }\n        }\n    };\n    /**\n     * Create an instance based on a public key (certain methods will not be available)\n     *\n     * This method only accepts uncompressed Ethereum-style public keys, unless\n     * the `nonStrict` flag is set to true.\n     */\n    Wallet.fromPublicKey = function (publicKey, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        if (nonStrict) {\n            publicKey = ethereumjs_util_1.importPublic(publicKey);\n        }\n        return new Wallet(undefined, publicKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended public key (xpub)\n     */\n    Wallet.fromExtendedPublicKey = function (extendedPublicKey) {\n        if (extendedPublicKey.slice(0, 4) !== 'xpub') {\n            throw new Error('Not an extended public key');\n        }\n        var publicKey = bs58check.decode(extendedPublicKey).slice(45);\n        // Convert to an Ethereum public key\n        return Wallet.fromPublicKey(publicKey, true);\n    };\n    /**\n     * Create an instance based on a raw private key\n     */\n    Wallet.fromPrivateKey = function (privateKey) {\n        return new Wallet(privateKey);\n    };\n    /**\n     * Create an instance based on a BIP32 extended private key (xprv)\n     */\n    Wallet.fromExtendedPrivateKey = function (extendedPrivateKey) {\n        if (extendedPrivateKey.slice(0, 4) !== 'xprv') {\n            throw new Error('Not an extended private key');\n        }\n        var tmp = bs58check.decode(extendedPrivateKey);\n        if (tmp[45] !== 0) {\n            throw new Error('Invalid extended private key');\n        }\n        return Wallet.fromPrivateKey(tmp.slice(46));\n    };\n    /**\n     * Import a wallet (Version 1 of the Ethereum wallet format).\n     *\n     * @param input A JSON serialized string, or an object representing V1 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV1 = function (input, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            var json, kdfparams, derivedKey, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(input);\n                        if (json.Version !== '1') {\n                            throw new Error('Not a V1 Wallet');\n                        }\n                        if (json.Crypto.KeyHeader.Kdf !== 'scrypt') {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        kdfparams = json.Crypto.KeyHeader.KdfParams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(json.Crypto.Salt, 'hex'), kdfparams.N, kdfparams.R, kdfparams.P, kdfparams.DkLen)];\n                    case 1:\n                        derivedKey = _a.sent();\n                        ciphertext = Buffer.from(json.Crypto.CipherText, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n                        if (mac.toString('hex') !== json.Crypto.MAC) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv('aes-128-cbc', ethereumjs_util_1.keccak256(derivedKey.slice(0, 16)).slice(0, 16), Buffer.from(json.Crypto.IV, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /**\n     * Import a wallet (Version 3 of the Ethereum wallet format). Set `nonStrict` true to accept files with mixed-caps.\n     *\n     * @param input A JSON serialized string, or an object representing V3 Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromV3 = function (input, password, nonStrict) {\n        if (nonStrict === void 0) { nonStrict = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var json, derivedKey, kdfparams, ciphertext, mac, decipher, seed;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        json = typeof input === 'object' ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n                        if (json.version !== 3) {\n                            throw new Error('Not a V3 wallet');\n                        }\n                        if (!(json.crypto.kdf === 'scrypt')) return [3 /*break*/, 2];\n                        kdfparams = json.crypto.kdfparams;\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen)];\n                    case 1:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _a.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        if (json.crypto.kdf === 'pbkdf2') {\n                            kdfparams = json.crypto.kdfparams;\n                            if (kdfparams.prf !== 'hmac-sha256') {\n                                throw new Error('Unsupported parameters to PBKDF2');\n                            }\n                            derivedKey = crypto.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n                        }\n                        else {\n                            throw new Error('Unsupported key derivation scheme');\n                        }\n                        _a.label = 3;\n                    case 3:\n                        ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), ciphertext]));\n                        if (mac.toString('hex') !== json.crypto.mac) {\n                            throw new Error('Key derivation failed - possibly wrong passphrase');\n                        }\n                        decipher = crypto.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n                        seed = runCipherBuffer(decipher, ciphertext);\n                        return [2 /*return*/, new Wallet(seed)];\n                }\n            });\n        });\n    };\n    /*\n     * Import an Ethereum Pre Sale wallet.\n     * Based on https://github.com/ethereum/pyethsaletool/blob/master/pyethsaletool.py\n     * JSON fields: encseed, ethaddr, btcaddr, email\n     *\n     * @param input A JSON serialized string, or an object representing EthSale Keystore.\n     * @param password The keystore password.\n     */\n    Wallet.fromEthSale = function (input, password) {\n        var json = typeof input === 'object' ? input : JSON.parse(input);\n        var encseed = Buffer.from(json.encseed, 'hex');\n        // key derivation\n        var derivedKey = crypto.pbkdf2Sync(password, password, 2000, 32, 'sha256').slice(0, 16);\n        // seed decoding (IV is first 16 bytes)\n        // NOTE: crypto (derived from openssl) when used with aes-*-cbc will handle PKCS#7 padding internally\n        //       see also http://stackoverflow.com/a/31614770/4964819\n        var decipher = crypto.createDecipheriv('aes-128-cbc', derivedKey, encseed.slice(0, 16));\n        var seed = runCipherBuffer(decipher, encseed.slice(16));\n        var wallet = new Wallet(ethereumjs_util_1.keccak256(seed));\n        if (wallet.getAddress().toString('hex') !== json.ethaddr) {\n            throw new Error('Decoded key mismatch - possibly wrong passphrase');\n        }\n        return wallet;\n    };\n    Object.defineProperty(Wallet.prototype, \"pubKey\", {\n        // private getters\n        /**\n         * Returns the wallet's public key.\n         */\n        get: function () {\n            if (!keyExists(this.publicKey)) {\n                this.publicKey = ethereumjs_util_1.privateToPublic(this.privateKey);\n            }\n            return this.publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"privKey\", {\n        /**\n         * Returns the wallet's private key.\n         */\n        get: function () {\n            if (!keyExists(this.privateKey)) {\n                throw new Error('This is a public key only wallet');\n            }\n            return this.privateKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // public instance methods\n    /**\n     * Returns the wallet's private key.\n     *\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPrivateKey = function () {\n        return this.privKey;\n    };\n    Wallet.prototype.getPrivateKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.privKey);\n    };\n    /**\n     * Returns the wallet's public key.\n     */\n    // tslint:disable-next-line\n    Wallet.prototype.getPublicKey = function () {\n        return this.pubKey;\n    };\n    /**\n     * Returns the wallet's public key as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getPublicKeyString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getPublicKey());\n    };\n    /**\n     * Returns the wallet's address.\n     */\n    Wallet.prototype.getAddress = function () {\n        return ethereumjs_util_1.publicToAddress(this.pubKey);\n    };\n    /**\n     * Returns the wallet's address as a \"0x\" prefixed hex string\n     */\n    Wallet.prototype.getAddressString = function () {\n        return ethereumjs_util_1.bufferToHex(this.getAddress());\n    };\n    /**\n     * Returns the wallet's private key as a \"0x\" prefixed hex string checksummed\n     * according to [EIP 55](https://github.com/ethereum/EIPs/issues/55).\n     */\n    Wallet.prototype.getChecksumAddressString = function () {\n        return ethereumjs_util_1.toChecksumAddress(this.getAddressString());\n    };\n    /**\n     * Returns an Etherem Version 3 Keystore Format object representing the wallet\n     *\n     * @param password The password used to encrypt the Keystore.\n     * @param opts The options for the keystore. See [its spec](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) for more info.\n     */\n    Wallet.prototype.toV3 = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var v3Params, kdfParams, derivedKey, _a, cipher, ciphertext, mac;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!keyExists(this.privateKey)) {\n                            throw new Error('This is a public key only wallet');\n                        }\n                        v3Params = mergeToV3ParamsWithDefaults(opts);\n                        _a = v3Params.kdf;\n                        switch (_a) {\n                            case \"pbkdf2\" /* PBKDF */: return [3 /*break*/, 1];\n                            case \"scrypt\" /* Scrypt */: return [3 /*break*/, 2];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        kdfParams = kdfParamsForPBKDF(v3Params);\n                        derivedKey = crypto.pbkdf2Sync(Buffer.from(password), kdfParams.salt, kdfParams.c, kdfParams.dklen, 'sha256');\n                        return [3 /*break*/, 5];\n                    case 2:\n                        kdfParams = kdfParamsForScrypt(v3Params);\n                        return [4 /*yield*/, scrypt_js_1.scrypt(Buffer.from(password), kdfParams.salt, kdfParams.n, kdfParams.r, kdfParams.p, kdfParams.dklen)];\n                    case 3:\n                        // FIXME: support progress reporting callback\n                        derivedKey = _b.sent();\n                        return [3 /*break*/, 5];\n                    case 4: throw new Error('Unsupported kdf');\n                    case 5:\n                        cipher = crypto.createCipheriv(v3Params.cipher, derivedKey.slice(0, 16), v3Params.iv);\n                        if (!cipher) {\n                            throw new Error('Unsupported cipher');\n                        }\n                        ciphertext = runCipherBuffer(cipher, this.privKey);\n                        mac = ethereumjs_util_1.keccak256(Buffer.concat([Buffer.from(derivedKey.slice(16, 32)), Buffer.from(ciphertext)]));\n                        return [2 /*return*/, {\n                                version: 3,\n                                id: uuidv4({ random: v3Params.uuid }),\n                                // @ts-ignore - the official V3 keystore spec omits the address key\n                                address: this.getAddress().toString('hex'),\n                                crypto: {\n                                    ciphertext: ciphertext.toString('hex'),\n                                    cipherparams: { iv: v3Params.iv.toString('hex') },\n                                    cipher: v3Params.cipher,\n                                    kdf: v3Params.kdf,\n                                    kdfparams: __assign(__assign({}, kdfParams), { salt: kdfParams.salt.toString('hex') }),\n                                    mac: mac.toString('hex'),\n                                },\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Return the suggested filename for V3 keystores.\n     */\n    Wallet.prototype.getV3Filename = function (timestamp) {\n        /*\n         * We want a timestamp like 2016-03-15T17-11-33.007598288Z. Date formatting\n         * is a pain in Javascript, everbody knows that. We could use moment.js,\n         * but decide to do it manually in order to save space.\n         *\n         * toJSON() returns a pretty close version, so let's use it. It is not UTC though,\n         * but does it really matter?\n         *\n         * Alternative manual way with padding and Date fields: http://stackoverflow.com/a/7244288/4964819\n         *\n         */\n        var ts = timestamp ? new Date(timestamp) : new Date();\n        return ['UTC--', ts.toJSON().replace(/:/g, '-'), '--', this.getAddress().toString('hex')].join('');\n    };\n    Wallet.prototype.toV3String = function (password, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = JSON).stringify;\n                        return [4 /*yield*/, this.toV3(password, opts)];\n                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];\n                }\n            });\n        });\n    };\n    return Wallet;\n}());\nexports.default = Wallet;\n// helpers\nfunction runCipherBuffer(cipher, data) {\n    return Buffer.concat([cipher.update(data), cipher.final()]);\n}\nfunction keyExists(k) {\n    return k !== undefined && k !== null;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}