{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCupping = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n\n    if (values.curated_date != undefined) {\n      formData.append(\"curated_date\", values.curated_date);\n    }\n\n    if (values.curated_by != undefined) {\n      formData.append(\"curated_by\", values.curated_by);\n    }\n\n    if (values.fragrance_aroma != undefined) {\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n    }\n\n    if (values.supplier_id != undefined) {\n      formData.append(\"supplier_id\", values.supplier_id);\n    }\n\n    if (values.tgl_panen != undefined) {\n      formData.append(\"tgl_panen\", values.tgl_panen);\n    }\n\n    if (values.volume != undefined) {\n      formData.append(\"volume\", values.volume);\n    } //Form Baru\n\n\n    if (values.moisture != undefined) {\n      formData.append(\"moisture\", values.moisture);\n    }\n\n    if (values.videoCulture != undefined) {\n      formData.append(\"video_culture\", values.videoCulture);\n    }\n\n    if (values.storytelling != undefined) {\n      formData.append(\"storytelling\", values.storytelling);\n    }\n\n    if (imageFile != \"\") {\n      for (let i = 0; i < imageFile.length; i++) {\n        formData.append(\"files[]\", imageFile[i]);\n      }\n    }\n\n    if (certificateFile != \"\") {\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificate[]\", certificateFile[i]);\n      }\n    }\n\n    if (values.curated_date && values.curated_by && values.fragrance_aroma && values.flavor && values.aftertaste && values.acidity && values.body && values.cupping_score && values.category && certificateFile != \"\") {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n\n      UserService.editCupping(id, formData).then(showResults(\"Data has been changed\"));\n    }\n  };\n\n  const onCertificateChange = file => {\n    setCertificateFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditCuppingForm, {\n      onSubmit: handleSubmit,\n      cuppingID: id,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCupping, \"xcV0JP/BQCDObf4nh3QX1kAnKI4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCupping;\nexport default EditCupping;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCupping\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js"],"names":["Fragment","showResults","UserService","useParams","EditCuppingForm","EditCupping","id","certificateFile","setCertificateFile","useState","handleSubmit","values","formData","FormData","curated_date","undefined","append","curated_by","fragrance_aroma","supplier_id","tgl_panen","volume","moisture","videoCulture","storytelling","imageFile","i","length","flavor","aftertaste","acidity","body","cupping_score","category","editCupping","then","onCertificateChange","file"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\n\nconst EditCupping = () => {\n  const { id } = useParams();\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n    if (values.curated_date != undefined) {\n      formData.append(\"curated_date\", values.curated_date);\n    }\n    if (values.curated_by != undefined) {\n      formData.append(\"curated_by\", values.curated_by);\n    }\n    if (values.fragrance_aroma != undefined) {\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n    }\n    if (values.supplier_id != undefined) {\n      formData.append(\"supplier_id\", values.supplier_id);\n    }\n    if (values.tgl_panen != undefined) {\n      formData.append(\"tgl_panen\", values.tgl_panen);\n    }\n    if (values.volume != undefined) {\n      formData.append(\"volume\", values.volume);\n    }\n\n    //Form Baru\n    if (values.moisture != undefined) {\n      formData.append(\"moisture\", values.moisture);\n    }\n    if (values.videoCulture != undefined) {\n      formData.append(\"video_culture\", values.videoCulture);\n    }\n    if (values.storytelling != undefined) {\n      formData.append(\"storytelling\", values.storytelling);\n    }\n\n    if (imageFile != \"\") {\n      for (let i = 0; i < imageFile.length; i++) {\n        formData.append(\"files[]\", imageFile[i]);\n      }\n    }\n    if (certificateFile != \"\") {\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificate[]\", certificateFile[i]);\n      }\n    }\n\n     if (\n      values.curated_date &&\n      values.curated_by &&\n      values.fragrance_aroma &&\n      values.flavor &&\n      values.aftertaste &&\n      values.acidity &&\n      values.body &&\n      values.cupping_score &&\n      values.category &&\n      certificateFile != \"\"\n    ) {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n\n      UserService.editCupping(id, formData).then(\n        showResults(\"Data has been changed\")\n      );\n    }\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <EditCuppingForm \n        onSubmit={handleSubmit} \n        cuppingID={id} \n        onSelectCertificate={onCertificateChange} />\n    </Fragment>\n  );\n};\n\nexport default EditCupping;\n"]},"metadata":{},"sourceType":"module"}