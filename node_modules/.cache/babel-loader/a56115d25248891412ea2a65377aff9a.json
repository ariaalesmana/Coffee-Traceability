{"ast":null,"code":"const inherits = require('util').inherits;\n\nconst Subprovider = require('./subprovider.js'); // wraps a provider in a subprovider interface\n\n\nmodule.exports = ProviderSubprovider;\ninherits(ProviderSubprovider, Subprovider);\n\nfunction ProviderSubprovider(provider) {\n  if (!provider) throw new Error('ProviderSubprovider - no provider specified');\n  this.provider = provider;\n}\n\nProviderSubprovider.prototype.handleRequest = function (payload, next, end) {\n  this.provider.send(payload, function (err, response) {\n    if (err) return end(err);\n    if (response.error) return end(new Error(response.error.message));\n    end(null, response.result);\n  });\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Coffee-Traceability/node_modules/@trufflesuite/web3-provider-engine/subproviders/provider.js"],"names":["inherits","require","Subprovider","module","exports","ProviderSubprovider","provider","Error","prototype","handleRequest","payload","next","end","send","err","response","error","message","result"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBD,QAAjC;;AACA,MAAME,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAA3B,C,CAEA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,mBAAjB;AAEAL,QAAQ,CAACK,mBAAD,EAAsBH,WAAtB,CAAR;;AAEA,SAASG,mBAAT,CAA6BC,QAA7B,EAAsC;AACpC,MAAI,CAACA,QAAL,EAAe,MAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACf,OAAKD,QAAL,GAAgBA,QAAhB;AACD;;AAEDD,mBAAmB,CAACG,SAApB,CAA8BC,aAA9B,GAA8C,UAASC,OAAT,EAAkBC,IAAlB,EAAwBC,GAAxB,EAA4B;AACxE,OAAKN,QAAL,CAAcO,IAAd,CAAmBH,OAAnB,EAA4B,UAASI,GAAT,EAAcC,QAAd,EAAwB;AAClD,QAAID,GAAJ,EAAS,OAAOF,GAAG,CAACE,GAAD,CAAV;AACT,QAAIC,QAAQ,CAACC,KAAb,EAAoB,OAAOJ,GAAG,CAAC,IAAIL,KAAJ,CAAUQ,QAAQ,CAACC,KAAT,CAAeC,OAAzB,CAAD,CAAV;AACpBL,IAAAA,GAAG,CAAC,IAAD,EAAOG,QAAQ,CAACG,MAAhB,CAAH;AACD,GAJD;AAKD,CAND","sourcesContent":["const inherits = require('util').inherits\nconst Subprovider = require('./subprovider.js')\n\n// wraps a provider in a subprovider interface\n\nmodule.exports = ProviderSubprovider\n\ninherits(ProviderSubprovider, Subprovider)\n\nfunction ProviderSubprovider(provider){\n  if (!provider) throw new Error('ProviderSubprovider - no provider specified')\n  this.provider = provider\n}\n\nProviderSubprovider.prototype.handleRequest = function(payload, next, end){\n  this.provider.send(payload, function(err, response) {\n    if (err) return end(err)\n    if (response.error) return end(new Error(response.error.message))\n    end(null, response.result)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}