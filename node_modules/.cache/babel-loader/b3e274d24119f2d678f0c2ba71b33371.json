{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCupping = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n\n    if (values.curated_date && values.curated_by && values.fragrance_aroma && values.flavor && values.aftertaste && values.acidity && values.body && values.cupping_score && values.category && certificateFile != \"\") {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n\n      UserService.editCupping(id, formData).then(showResults(\"Data has been changed\"));\n    }\n  };\n\n  const onCertificateChange = file => {\n    setCertificateFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditCuppingForm, {\n      onSubmit: handleSubmit,\n      cuppingID: id,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditCupping, \"xcV0JP/BQCDObf4nh3QX1kAnKI4=\", false, function () {\n  return [useParams];\n});\n\n_c = EditCupping;\nexport default EditCupping;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCupping\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/EditCupping.js"],"names":["Fragment","showResults","UserService","useParams","EditCuppingForm","EditCupping","id","certificateFile","setCertificateFile","useState","handleSubmit","values","formData","FormData","curated_date","curated_by","fragrance_aroma","flavor","aftertaste","acidity","body","cupping_score","category","append","i","length","editCupping","then","onCertificateChange","file"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AAEA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEC,QACCF,MAAM,CAACG,YAAP,IACAH,MAAM,CAACI,UADP,IAEAJ,MAAM,CAACK,eAFP,IAGAL,MAAM,CAACM,MAHP,IAIAN,MAAM,CAACO,UAJP,IAKAP,MAAM,CAACQ,OALP,IAMAR,MAAM,CAACS,IANP,IAOAT,MAAM,CAACU,aAPP,IAQAV,MAAM,CAACW,QARP,IASAf,eAAe,IAAI,EAVpB,EAWC;AACAK,MAAAA,QAAQ,CAACW,MAAT,CAAgB,cAAhB,EAAgCZ,MAAM,CAACG,YAAvC;AACAF,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8BZ,MAAM,CAACI,UAArC;AACAH,MAAAA,QAAQ,CAACW,MAAT,CAAgB,iBAAhB,EAAmCZ,MAAM,CAACK,eAA1C;AACAJ,MAAAA,QAAQ,CAACW,MAAT,CAAgB,QAAhB,EAA0BZ,MAAM,CAACM,MAAjC;AACAL,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8BZ,MAAM,CAACO,UAArC;AACAN,MAAAA,QAAQ,CAACW,MAAT,CAAgB,SAAhB,EAA2BZ,MAAM,CAACQ,OAAlC;AACAP,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAhB,EAAwBZ,MAAM,CAACS,IAA/B;AACAR,MAAAA,QAAQ,CAACW,MAAT,CAAgB,eAAhB,EAAiCZ,MAAM,CAACU,aAAxC;AACAT,MAAAA,QAAQ,CAACW,MAAT,CAAgB,UAAhB,EAA4BZ,MAAM,CAACW,QAAnC;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,eAAe,CAACkB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/CZ,QAAAA,QAAQ,CAACW,MAAT,CAAgB,mBAAhB,EAAqChB,eAAe,CAACiB,CAAD,CAApD;AACD;;AAEDtB,MAAAA,WAAW,CAACwB,WAAZ,CAAwBpB,EAAxB,EAA4BM,QAA5B,EAAsCe,IAAtC,CACE1B,WAAW,CAAC,uBAAD,CADb;AAGD;AACF,GAjCD;;AAmCA,QAAM2B,mBAAmB,GAAIC,IAAD,IAAU;AACpCrB,IAAAA,kBAAkB,CAACqB,IAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAEnB,YADZ;AAEE,MAAA,SAAS,EAAEJ,EAFb;AAGE,MAAA,mBAAmB,EAAEsB;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CApDD;;GAAMvB,W;UACWF,S;;;KADXE,W;AAsDN,eAAeA,WAAf","sourcesContent":["import { Fragment } from \"react\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { useParams } from \"react-router\";\nimport EditCuppingForm from \"./EditCuppingForm\";\n\nconst EditCupping = () => {\n  const { id } = useParams();\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n     if (\n      values.curated_date &&\n      values.curated_by &&\n      values.fragrance_aroma &&\n      values.flavor &&\n      values.aftertaste &&\n      values.acidity &&\n      values.body &&\n      values.cupping_score &&\n      values.category &&\n      certificateFile != \"\"\n    ) {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n\n      UserService.editCupping(id, formData).then(\n        showResults(\"Data has been changed\")\n      );\n    }\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <EditCuppingForm \n        onSubmit={handleSubmit} \n        cuppingID={id} \n        onSelectCertificate={onCertificateChange} />\n    </Fragment>\n  );\n};\n\nexport default EditCupping;\n"]},"metadata":{},"sourceType":"module"}