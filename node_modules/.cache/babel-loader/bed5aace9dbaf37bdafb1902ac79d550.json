{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport AddCuppingForm from \"./AddCuppingForm\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCupping = () => {\n  _s();\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = values => {\n    const formData = new FormData();\n\n    if (values.curated_date && values.curated_by && values.fragrance_aroma && values.flavor && values.aftertaste && values.acidity && values.body && values.cupping_score && values.category && certificateFile != \"\") {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n\n      UserService.addCupping(formData).then(showResults(\"Data has been added\"));\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const onCertificateChange = file => {\n    setCertificateFile(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddCuppingForm, {\n      onSubmit: handleSubmit,\n      onSelectCertificate: onCertificateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddCupping, \"G8MrWkq7rzwqoKN3ijifaRUsRgE=\");\n\n_c = AddCupping;\nexport default AddCupping;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCupping\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Roaster/Roaster/MasterData/Cupping/AddCupping.js"],"names":["Fragment","useState","useEffect","AddCuppingForm","showResults","UserService","AddCupping","certificateFile","setCertificateFile","handleSubmit","values","formData","FormData","curated_date","curated_by","fragrance_aroma","flavor","aftertaste","acidity","body","cupping_score","category","append","i","length","addCupping","then","onCertificateChange","file"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMQ,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEC,QACCF,MAAM,CAACG,YAAP,IACAH,MAAM,CAACI,UADP,IAEAJ,MAAM,CAACK,eAFP,IAGAL,MAAM,CAACM,MAHP,IAIAN,MAAM,CAACO,UAJP,IAKAP,MAAM,CAACQ,OALP,IAMAR,MAAM,CAACS,IANP,IAOAT,MAAM,CAACU,aAPP,IAQAV,MAAM,CAACW,QARP,IASAd,eAAe,IAAI,EAVpB,EAWC;AACAI,MAAAA,QAAQ,CAACW,MAAT,CAAgB,cAAhB,EAAgCZ,MAAM,CAACG,YAAvC;AACAF,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8BZ,MAAM,CAACI,UAArC;AACAH,MAAAA,QAAQ,CAACW,MAAT,CAAgB,iBAAhB,EAAmCZ,MAAM,CAACK,eAA1C;AACAJ,MAAAA,QAAQ,CAACW,MAAT,CAAgB,QAAhB,EAA0BZ,MAAM,CAACM,MAAjC;AACAL,MAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAhB,EAA8BZ,MAAM,CAACO,UAArC;AACAN,MAAAA,QAAQ,CAACW,MAAT,CAAgB,SAAhB,EAA2BZ,MAAM,CAACQ,OAAlC;AACAP,MAAAA,QAAQ,CAACW,MAAT,CAAgB,MAAhB,EAAwBZ,MAAM,CAACS,IAA/B;AACAR,MAAAA,QAAQ,CAACW,MAAT,CAAgB,eAAhB,EAAiCZ,MAAM,CAACU,aAAxC;AACAT,MAAAA,QAAQ,CAACW,MAAT,CAAgB,UAAhB,EAA4BZ,MAAM,CAACW,QAAnC;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,eAAe,CAACiB,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/CZ,QAAAA,QAAQ,CAACW,MAAT,CAAgB,mBAAhB,EAAqCf,eAAe,CAACgB,CAAD,CAApD;AACD;;AACDlB,MAAAA,WAAW,CAACoB,UAAZ,CAAuBd,QAAvB,EAAiCe,IAAjC,CACEtB,WAAW,CAAC,qBAAD,CADb;AAGD,KA5BA,MA4BM;AACLA,MAAAA,WAAW,CAAC,4BAAD,CAAX;AACD;AACF,GAlCD;;AAoCA,QAAMuB,mBAAmB,GAAIC,IAAD,IAAU;AACpCpB,IAAAA,kBAAkB,CAACoB,IAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEnB,YADZ;AAEE,MAAA,mBAAmB,EAAEkB;AAFvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnDD;;GAAMrB,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport AddCuppingForm from \"./AddCuppingForm\";\nimport showResults from \"../../../../showResults/showResults\";\nimport UserService from \"../../../../../services/user.service\";\n\nconst AddCupping = () => {\n\n  const [certificateFile, setCertificateFile] = useState(\"\");\n\n  const handleSubmit = (values) => {\n    const formData = new FormData();\n\n     if (\n      values.curated_date &&\n      values.curated_by &&\n      values.fragrance_aroma &&\n      values.flavor &&\n      values.aftertaste &&\n      values.acidity &&\n      values.body &&\n      values.cupping_score &&\n      values.category &&\n      certificateFile != \"\"\n    ) {\n      formData.append(\"curated_date\", values.curated_date);\n      formData.append(\"curated_by\", values.curated_by);\n      formData.append(\"fragrance_aroma\", values.fragrance_aroma);\n      formData.append(\"flavor\", values.flavor);\n      formData.append(\"aftertaste\", values.aftertaste);\n      formData.append(\"acidity\", values.acidity);\n      formData.append(\"body\", values.body);\n      formData.append(\"cupping_score\", values.cupping_score);\n      formData.append(\"category\", values.category);\n\n      for (let i = 0; i < certificateFile.length; i++) {\n        formData.append(\"certificateFile[]\", certificateFile[i]);\n      }\n      UserService.addCupping(formData).then(\n        showResults(\"Data has been added\")\n      );\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  const onCertificateChange = (file) => {\n    setCertificateFile(file);\n  };\n\n  return (\n    <Fragment>\n      <AddCuppingForm \n        onSubmit={handleSubmit}\n        onSelectCertificate={onCertificateChange} />\n    </Fragment>\n  );\n};\n\nexport default AddCupping;\n"]},"metadata":{},"sourceType":"module"}