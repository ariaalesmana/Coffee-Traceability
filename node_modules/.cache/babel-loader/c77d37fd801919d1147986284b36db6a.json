{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBean.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditGreenBeanForm from \"./EditGreenBeanForm\";\nimport UserService from \"../../../services/user.service\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../abi/abi\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst EditGreenBean = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [files, imageFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState(\"\");\n  const [pindah, setPindah] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [currencyID, setCurrencyID] = useState([]);\n\n  const onLatChange = latitude => {\n    setLat(latitude);\n  };\n\n  const onLongChange = longitude => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = async values => {\n    console.log(values);\n\n    if (values.po_number && values.sku && values.batch && values.harvesting_year && values.farm && values.species && values.process && values.variety && values.volume_order) {\n      // cek batch number\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"batch\", values.batch);\n      formData.append(\"farm\", values.farm);\n      formData.append(\"harvesting_year\", values.harvesting_year);\n      formData.append(\"process\", values.process);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"species\", values.species);\n      formData.append(\"variety\", values.variety);\n      formData.append(\"volume_order\", values.volume_order);\n      await UserService.editBatchGreenBean(id, formData).then(response => {\n        console.log('cek response', response);\n\n        if (response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been updated\");\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  if (pindah === true) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/listGreenBean\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(EditGreenBeanForm, {\n        onSubmit: handleSubmit,\n        greenbeanID: id,\n        onSelectLat: onLatChange,\n        onSelectLong: onLongChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(EditGreenBean, \"K4Y/cn4HH7CuwCu9rh/r3q/t7aY=\", false, function () {\n  return [useParams];\n});\n\n_c = EditGreenBean;\nexport default EditGreenBean;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditGreenBean\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/GreenBean/EditGreenBean.js"],"names":["Fragment","useState","useEffect","showResults","EditGreenBeanForm","UserService","Web3","AddProduct","Redirect","useHistory","useParams","require","config","HDWalletProvider","EditGreenBean","props","id","files","imageFile","filesGambar","imageFileGambar","balance","setBalance","account","setAccount","pindah","setPindah","lat","setLat","long","setLong","data","setData","currencyID","setCurrencyID","onLatChange","latitude","onLongChange","longitude","handleSubmit","values","console","log","po_number","sku","batch","harvesting_year","farm","species","process","variety","volume_order","formData","FormData","append","editBatchGreenBean","then","response","massage"],"mappings":"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","sourcesContent":["import { Fragment, useState, useEffect } from \"react\";\nimport showResults from \"../../showResults/showResults\";\nimport EditGreenBeanForm from \"./EditGreenBeanForm\";\nimport UserService from \"../../../services/user.service\";\nimport Web3 from \"web3\";\nimport { AddProduct } from \"../../../abi/abi\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nrequire(\"dotenv\").config();\n\nconst HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst EditGreenBean = (props) => {\n  const { id } = useParams();\n\n  const [files, imageFile] = useState(\"\");\n  const [filesGambar, imageFileGambar] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState(\"\");\n  const [pindah, setPindah] = useState(false);\n  const [lat, setLat] = useState(\"\");\n  const [long, setLong] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const [currencyID, setCurrencyID] = useState([]);  \n\n  const onLatChange = (latitude) => {\n    setLat(latitude);\n  };\n\n  const onLongChange = (longitude) => {\n    setLong(longitude);\n  };\n\n  const handleSubmit = async (values) => {\n    console.log(values);\n\n    if(values.po_number &&\n      values.sku &&\n      values.batch &&\n      values.harvesting_year &&\n      values.farm &&\n      values.species &&\n      values.process &&\n      values.variety &&\n      values.volume_order\n    ){\n      // cek batch number\n      const formData = new FormData();\n      formData.append(\"po_number\", values.po_number);\n      formData.append(\"batch\", values.batch);\n      formData.append(\"farm\", values.farm);\n      formData.append(\"harvesting_year\", values.harvesting_year);\n      formData.append(\"process\", values.process);\n      formData.append(\"sku\", values.sku);\n      formData.append(\"species\", values.species);\n      formData.append(\"variety\", values.variety);\n      formData.append(\"volume_order\", values.volume_order);\n\n      await UserService.editBatchGreenBean(id, formData).then((response) => {\n        console.log('cek response', response);\n        if(response.data.massage) {\n          showResults(`${response.data.massage}`);\n        } else {\n          showResults(\"Data has been updated\");\n          setPindah(true);\n        }\n      });\n    } else {\n      showResults(\"Please fill all the fields\");\n    }\n  }\n  \n\n  if (pindah === true) {\n\n    return <Redirect to=\"/listGreenBean\" />;\n\n  } else {\n\n    return (\n      <Fragment>\n        <EditGreenBeanForm\n          onSubmit={handleSubmit}\n          greenbeanID={id}\n          onSelectLat={onLatChange}\n          onSelectLong={onLongChange}\n        />\n      </Fragment>\n    );\n\n  }\n};\nexport default EditGreenBean;\n"]},"metadata":{},"sourceType":"module"}