{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/ListCNF.js\";\nimport { Fragment, React, Component } from \"react\";\nimport { CCard, CCardBody, CCardHeader, CCol, CDataTable, CRow, CButton } from \"@coreui/react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\nimport { AddCNF } from \"../../../abi/cnf\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport default class ListCNF extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: [],\n      account: ''\n    };\n  }\n\n  async componentDidMount() {\n    const provider = new HDWalletProvider(process.env.REACT_APP_MNEMONIC, \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n    const web3 = new Web3(provider);\n    provider.engine.stop();\n    let account = await web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        return \"0\";\n      } else if (accounts.length === 0) {\n        return \"0\";\n      } else {\n        return accounts[0];\n      }\n    });\n    const transaction = new web3.eth.Contract(AddCNF, process.env.REACT_APP_ADDRESS_CNF);\n    const trx = await transaction.methods.getAllData().call({\n      from: account[0]\n    });\n    var arr = [];\n    await trx.forEach(async function (value, index) {\n      arr.push(value);\n    });\n    this.setState({\n      content: arr\n    }); // manggil metamask untuk konfirmasi\n    // const web3Modal = new Web3Modal();\n    // const connection = await web3Modal.connect();\n    // const provider = new ethers.providers.Web3Provider(connection);\n    // const signer = provider.getSigner();\n    // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, AddCNF, signer);\n    // let transaction = await contract.getAllData();\n    // end transaksi blockchain\n    // this.setState({\n    //   content: transaction,\n    // });\n\n    console.log(\"data dari blockchainya nih\", arr);\n  }\n\n  render() {\n    const fields = [// { key: \"walletAddress\", label: \"Signer\"},\n    {\n      key: \"role_pembuat\",\n      label: \"Created By\"\n    }, {\n      key: \"nomor_dokumen\",\n      label: \"Document Number\"\n    }, {\n      key: \"tanggal_dokumen\",\n      label: \"Document Date\"\n    }, {\n      key: \"created\",\n      label: \"Created\"\n    }];\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"c-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid\",\n          children: /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCol, {\n              xs: \"12\",\n              children: /*#__PURE__*/_jsxDEV(CCard, {\n                children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n                  children: /*#__PURE__*/_jsxDEV(CRow, {\n                    children: [/*#__PURE__*/_jsxDEV(CCol, {\n                      xs: 6,\n                      md: 7,\n                      lg: 10,\n                      style: {\n                        margin: \"auto\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        style: {\n                          margin: \"auto\"\n                        },\n                        children: \"CNF\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(CCol, {\n                      children: /*#__PURE__*/_jsxDEV(CButton, {\n                        block: true,\n                        color: \"dark\",\n                        to: \"/AddCNF\",\n                        style: {\n                          backgroundColor: \"#00c4cc\"\n                        },\n                        children: \"Add\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n                  children: /*#__PURE__*/_jsxDEV(CDataTable, {\n                    items: this.state.content,\n                    fields: fields,\n                    itemsPerPage: 10,\n                    tableFilter: true,\n                    cleaner: true,\n                    itemsPerPageSelect: true,\n                    hover: true,\n                    sorter: true,\n                    pagination: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/blockchain_project/src/components/Grosir/CNF/ListCNF.js"],"names":["Fragment","React","Component","CCard","CCardBody","CCardHeader","CCol","CDataTable","CRow","CButton","showResults","UserService","AddCNF","Web3Modal","ethers","Web3","require","config","HDWalletProvider","user","JSON","parse","localStorage","getItem","ListCNF","constructor","props","state","content","account","componentDidMount","provider","process","env","REACT_APP_MNEMONIC","REACT_APP_INFURA_PROJECT_ID","web3","engine","stop","eth","getAccounts","err","accounts","length","transaction","Contract","REACT_APP_ADDRESS_CNF","trx","methods","getAllData","call","from","arr","forEach","value","index","push","setState","console","log","render","fields","key","label","margin","backgroundColor"],"mappings":"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","sourcesContent":["import { Fragment, React, Component } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n} from \"@coreui/react\";\nimport showResults from \"../../showResults/showResults\";\nimport UserService from \"../../../services/user.service\";\nimport { AddCNF } from \"../../../abi/cnf\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport default class ListCNF extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: [],\n      account: '',\n    };\n  }\n\n  async componentDidMount() {\n    const provider = new HDWalletProvider(\n      process.env.REACT_APP_MNEMONIC,\n      \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n    );\n    const web3 = new Web3(provider);\n    provider.engine.stop();\n\n    let account = await web3.eth.getAccounts(function (err, accounts) {\n      if (err != null) {\n        return \"0\";\n      } else if (accounts.length === 0) {\n        return \"0\";\n      } else {\n        return accounts[0];\n      }\n    });\n    const transaction = new web3.eth.Contract(\n        AddCNF,\n        process.env.REACT_APP_ADDRESS_CNF\n    );\n    const trx = await transaction.methods.getAllData().call({from: account[0]});\n    var arr = [];\n    await trx.forEach(async function (value, index) {\n      arr.push(value);\n    });\n\n    this.setState({\n      content: arr,\n    })\n    // manggil metamask untuk konfirmasi\n      // const web3Modal = new Web3Modal();\n      // const connection = await web3Modal.connect();\n      // const provider = new ethers.providers.Web3Provider(connection);\n      // const signer = provider.getSigner();\n\n      // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, AddCNF, signer);\n      // let transaction = await contract.getAllData();\n    // end transaksi blockchain\n\n    // this.setState({\n    //   content: transaction,\n    // });\n\n    console.log(\"data dari blockchainya nih\", arr);\n  }\n\n  render() {\n    const fields = [\n      // { key: \"walletAddress\", label: \"Signer\"},\n      { key: \"role_pembuat\", label: \"Created By\"},\n      { key: \"nomor_dokumen\", label: \"Document Number\"},\n      { key: \"tanggal_dokumen\", label: \"Document Date\"},\n      { key: \"created\", label: \"Created\"},\n    ];\n    return (\n      <Fragment>\n        <main className=\"c-main\">\n          <div className=\"container-fluid\">\n            <CRow>\n              <CCol xs=\"12\">\n                <CCard>\n                  <CCardHeader>\n                    <CRow>\n                      <CCol xs={6} md={7} lg={10} style={{ margin: \"auto\" }}>\n                        <h4 style={{ margin: \"auto\" }}>CNF</h4>\n                      </CCol>\n                      <CCol>\n                        <CButton\n                          block\n                          color=\"dark\"\n                          to=\"/AddCNF\"\n                          style={{ backgroundColor: \"#00c4cc\" }}\n                        >\n                          Add\n                        </CButton>\n                      </CCol>\n                      {/* {(() => {\n                        if (user && (user.status_role === \"grosir\" || user.status_role === \"roaster\")) {\n                          return(\n                            <CCol>\n                              <CButton\n                                block\n                                color=\"dark\"\n                                to=\"/AddCNF\"\n                                style={{ backgroundColor: \"#00c4cc\" }}\n                              >\n                                Add\n                              </CButton>\n                            </CCol>\n                          )\n                        }\n                      })()} */}\n                    </CRow>\n                  </CCardHeader>\n                  <CCardBody>\n                    <CDataTable\n                      items={this.state.content}\n                      fields={fields}\n                      itemsPerPage={10}\n                      tableFilter\n                      cleaner\n                      itemsPerPageSelect\n                      hover\n                      sorter\n                      pagination\n                    />\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          </div>\n        </main>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}