{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNF.js\";\nimport { Fragment, Component, useEffect } from \"react\";\nimport AddCNFForm from \"./AddCNFForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport Loader from \"react-spinners/DotLoader\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { AddCNF as CNF } from \"../../../abi/cnf\";\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nvar m = new Date();\nvar dateString = m.getUTCFullYear() + \"-\" + (\"0\" + (m.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + m.getUTCDate()).slice(-2);\nvar override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      `;\nvar provider = new HDWalletProvider(process.env.REACT_APP_MNEMONIC, \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\nvar web3 = new Web3(provider);\nvar user = JSON.parse(localStorage.getItem(\"user\"));\nconsole.log(\"usernya mal:\", user);\nprovider.engine.stop();\nexport default class AddCNFVi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDate = tgl => {\n      this.setState({\n        date: tgl\n      });\n    };\n\n    this.handleSubmit = async values => {\n      this.setState({\n        loading: true\n      });\n      const formData = new FormData();\n\n      if (values.nomor_dokumen != undefined && (this.state.date != undefined || this.state.date === 'Invalid date')) {\n        formData.append(\"pembuat\", user.status_role);\n        formData.append(\"nomor_dokumen\", values.nomor_dokumen);\n        formData.append(\"tanggal_dokumen\", this.state.date); // try{\n        // // get wallet\n        // const web3Modal = new Web3Modal();\n        // const connection = await web3Modal.connect();\n        // const provider = new ethers.providers.Web3Provider(connection);\n        // var signer = provider.getSigner();\n        // // const accounts = await window.ethereum.enable();\n        // // const signer = accounts[0];\n        // // end get wallet\n        // } catch(err) {\n        //   this.setState({\n        //     loading: false,\n        //   });\n        //   showResults(\"Failed, No wallet selected\");\n        // }\n\n        UserService.addCNF(formData).then(async response => {\n          console.log('response', response);\n          const provider = new HDWalletProvider(process.env.REACT_APP_MNEMONIC, \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID);\n          const web3 = new Web3(provider);\n          provider.engine.stop();\n          let account = await web3.eth.getAccounts(function (err, accounts) {\n            if (err != null) {\n              return \"0\";\n            } else if (accounts.length === 0) {\n              return \"0\";\n            } else {\n              return accounts[0];\n            }\n          });\n          console.log('akun yang digunakan', account[0]);\n\n          if (response.data.data) {\n            // cek apakah data sudah ada atau belum\n            // input cnf to blockchain\n            // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, CNF, signer)\n            if (!account[0]) {\n              this.setState({\n                loading: false\n              });\n              showResults(\"Failed, wallet not found\");\n            }\n\n            const storageContract = new web3.eth.Contract(CNF, process.env.REACT_APP_ADDRESS_CNF);\n\n            try {\n              // let transaction = await contract.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n              // this.setState({\n              //   loading: false,\n              // });\n              // showResults(\"Data has been added\")\n              const gas = await storageContract.methods.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString).estimateGas();\n              var post = await storageContract.methods.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString).send({\n                from: account[0] // gas,\n\n              }, (error, transactionHash) => {\n                // get transaction hash blockchain\n                console.log(transactionHash);\n              });\n              console.log(post);\n              this.setState({\n                loading: false\n              });\n              showResults(\"Data has been added\");\n            } catch (e) {\n              UserService.deleteCNF(response.data.data.id);\n              this.setState({\n                loading: false\n              });\n              showResults(`Failed, Transaction rejected : ${e.message}`);\n            }\n          } else {\n            this.setState({\n              loading: false\n            });\n            showResults(`Failed, Document Number already exist`);\n          } // await transaction.wait()\n          // end input cnf to blockchain\n\n        }, error => {});\n      } else {\n        this.setState({\n          loading: false\n        });\n        showResults(\"Please fill all the fields\");\n      }\n    };\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n      date: \"\",\n      loading: false,\n      color: \"#3c4b64\",\n      akun: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: (() => {\n        if (this.state.loading === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              verticalAlign: 'middle',\n              paddingTop: \"150px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sweet-loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"The transaction will be written to the Blockchain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 77\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Loader, {\n                color: this.state.color,\n                loading: this.state.loading,\n                css: override,\n                size: 150\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Please Wait...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddCNFForm, {\n            onSubmit: this.handleSubmit,\n            onSelectImage: this.onFileChange,\n            onSelectCertificate: this.onCertificateChange,\n            onSelectDate: this.handleDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this);\n        }\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Coffee-Traceability/src/components/Grosir/CNF/AddCNF.js"],"names":["Fragment","Component","useEffect","AddCNFForm","UserService","showResults","Loader","Web3Modal","ethers","Web3","AddCNF","CNF","css","require","config","HDWalletProvider","m","Date","dateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","override","provider","process","env","REACT_APP_MNEMONIC","REACT_APP_INFURA_PROJECT_ID","web3","user","JSON","parse","localStorage","getItem","console","log","engine","stop","AddCNFVi","constructor","props","handleDate","tgl","setState","date","handleSubmit","values","loading","formData","FormData","nomor_dokumen","undefined","state","append","status_role","addCNF","then","response","account","eth","getAccounts","err","accounts","length","data","storageContract","Contract","REACT_APP_ADDRESS_CNF","gas","methods","id","pembuat","tanggal_dokumen","estimateGas","post","send","from","error","transactionHash","e","deleteCNF","message","imageFile","certificateFile","content","color","akun","render","textAlign","verticalAlign","paddingTop","onFileChange","onCertificateChange"],"mappings":"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","sourcesContent":["import { Fragment, Component, useEffect } from \"react\";\nimport AddCNFForm from \"./AddCNFForm\";\nimport UserService from \"../../../services/user.service\";\nimport showResults from \"../../showResults/showResults\";\nimport Loader from \"react-spinners/DotLoader\";\nimport Web3Modal from \"web3modal\";\nimport { ethers } from 'ethers';\nimport Web3 from \"web3\";\nimport { AddCNF as CNF } from \"../../../abi/cnf\";\nimport { css } from \"@emotion/react\";\n\nrequire(\"dotenv\").config();\n\nvar HDWalletProvider = require(\"@truffle/hdwallet-provider\");\n\nvar m = new Date();\nvar dateString =\n    m.getUTCFullYear() + \"-\" +\n    (\"0\" + (m.getUTCMonth()+1)).slice(-2) + \"-\" +\n    (\"0\" + m.getUTCDate()).slice(-2);\n\nvar override = css`\n      display: block;\n      margin: 0 auto;\n      border-color: red;\n      `\n    ;\nvar provider = new HDWalletProvider(\n  process.env.REACT_APP_MNEMONIC,\n  \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n);\nvar web3 = new Web3(provider);\n\nvar user = JSON.parse(localStorage.getItem(\"user\"));\n\nconsole.log(\"usernya mal:\", user);\n\nprovider.engine.stop();\nexport default class AddCNFVi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageFile: \"\",\n      certificateFile: \"\",\n      content: [],\n      date: \"\",\n      loading: false,\n      color: \"#3c4b64\",\n      akun: \"\",\n    };\n  }\n\n  handleDate = (tgl) => {\n    this.setState({\n      date: tgl,\n    });\n  };\n\n  handleSubmit = async (values) => {\n    this.setState({\n      loading: true,\n    });\n\n    const formData = new FormData();\n\n    if (\n      values.nomor_dokumen != undefined &&\n      (this.state.date != undefined || this.state.date === 'Invalid date')\n    ) {\n      formData.append(\"pembuat\", user.status_role);\n      formData.append(\"nomor_dokumen\", values.nomor_dokumen);\n      formData.append(\"tanggal_dokumen\", this.state.date);\n\n      // try{\n      // // get wallet\n      // const web3Modal = new Web3Modal();\n      // const connection = await web3Modal.connect();\n      // const provider = new ethers.providers.Web3Provider(connection);\n      // var signer = provider.getSigner();\n\n      // // const accounts = await window.ethereum.enable();\n      // // const signer = accounts[0];\n      // // end get wallet\n      // } catch(err) {\n      //   this.setState({\n      //     loading: false,\n      //   });\n      //   showResults(\"Failed, No wallet selected\");\n      // }\n\n      UserService.addCNF(formData).then(\n        async (response) => {\n          console.log('response', response);\n\n          const provider = new HDWalletProvider(\n            process.env.REACT_APP_MNEMONIC,\n            \"https://ropsten.infura.io/v3/\" + process.env.REACT_APP_INFURA_PROJECT_ID\n          );\n          const web3 = new Web3(provider);\n          provider.engine.stop();\n\n          let account = await web3.eth.getAccounts(function (err, accounts) {\n            if (err != null) {\n              return \"0\";\n            } else if (accounts.length === 0) {\n              return \"0\";\n            } else {\n              return accounts[0];\n            }\n          });\n\n          console.log('akun yang digunakan', account[0]);\n\n          if(response.data.data){ // cek apakah data sudah ada atau belum\n            // input cnf to blockchain\n            // let contract = new ethers.Contract(process.env.REACT_APP_ADDRESS_CNF, CNF, signer)\n\n            if(!account[0]) {\n              this.setState({\n                loading: false,\n              });\n\n              showResults(\"Failed, wallet not found\");\n            }\n\n            const storageContract = new web3.eth.Contract(\n              CNF,\n              process.env.REACT_APP_ADDRESS_CNF\n            );\n\n            try{\n              // let transaction = await contract.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n              // this.setState({\n              //   loading: false,\n              // });\n              // showResults(\"Data has been added\")\n              \n              const gas = await storageContract.methods.addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString).estimateGas();\n\n              var post = await storageContract.methods\n                .addCNF(response.data.data.id, response.data.data.pembuat, response.data.data.nomor_dokumen, response.data.data.tanggal_dokumen, dateString)\n                .send(\n                  {\n                    from: account[0],\n                    // gas,\n                  },\n                  (error, transactionHash) => {\n                    // get transaction hash blockchain\n                    console.log(transactionHash);\n                  }\n                );\n              console.log(post);\n\n              this.setState({\n                loading: false,\n              });\n              showResults(\"Data has been added\")\n\n            } catch(e) {\n              UserService.deleteCNF(response.data.data.id);\n              this.setState({\n                loading: false,\n              });\n              showResults(`Failed, Transaction rejected : ${e.message}`);\n            }\n          } else {\n            this.setState({\n              loading: false,\n            });\n            showResults(`Failed, Document Number already exist`);\n          }\n\n          // await transaction.wait()\n          // end input cnf to blockchain\n        },\n        (error) => {\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n      showResults(\"Please fill all the fields\");\n    }\n  };\n\n  render() {\n\n    return (\n      <Fragment>\n        {(() => {\n          if(this.state.loading === true) {\n            return(\n              <div style={{textAlign : 'center', verticalAlign : 'middle', paddingTop : \"150px\"}}>\n                <div className=\"sweet-loading\">\n                  <h5>The transaction will be written to the Blockchain</h5><br></br>\n                  <br></br>\n                    <Loader color={this.state.color} loading={this.state.loading} css={override} size={150} />\n                  <br></br>\n                  <br></br>\n                  <h5>Please Wait...</h5>\n                </div>\n            </div>\n            )\n          } else {\n            return(\n              <AddCNFForm\n                onSubmit={this.handleSubmit}\n                onSelectImage={this.onFileChange}\n                onSelectCertificate={this.onCertificateChange}\n                onSelectDate={this.handleDate}\n              />\n            )\n          }\n        })()}\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}